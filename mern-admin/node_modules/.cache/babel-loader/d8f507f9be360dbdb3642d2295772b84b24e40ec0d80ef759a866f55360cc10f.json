{"ast":null,"code":"let parser = require('postcss-value-parser');\nlet Value = require('./value');\nlet insertAreas = require('./hacks/grid-utils').insertAreas;\nconst OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i;\nconst OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i;\nconst IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i;\nconst GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i;\nconst SIZES = ['width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'];\nfunction hasGridTemplate(decl) {\n  return decl.parent.some(i => i.prop === 'grid-template' || i.prop === 'grid-template-areas');\n}\nfunction hasRowsAndColumns(decl) {\n  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows');\n  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns');\n  return hasRows && hasColumns;\n}\nclass Processor {\n  constructor(prefixes) {\n    this.prefixes = prefixes;\n  }\n\n  /**\r\n   * Add necessary prefixes\r\n   */\n  add(css, result) {\n    // At-rules\n    let resolution = this.prefixes.add['@resolution'];\n    let keyframes = this.prefixes.add['@keyframes'];\n    let viewport = this.prefixes.add['@viewport'];\n    let supports = this.prefixes.add['@supports'];\n    css.walkAtRules(rule => {\n      if (rule.name === 'keyframes') {\n        if (!this.disabled(rule, result)) {\n          return keyframes && keyframes.process(rule);\n        }\n      } else if (rule.name === 'viewport') {\n        if (!this.disabled(rule, result)) {\n          return viewport && viewport.process(rule);\n        }\n      } else if (rule.name === 'supports') {\n        if (this.prefixes.options.supports !== false && !this.disabled(rule, result)) {\n          return supports.process(rule);\n        }\n      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {\n        if (!this.disabled(rule, result)) {\n          return resolution && resolution.process(rule);\n        }\n      }\n      return undefined;\n    });\n\n    // Selectors\n    css.walkRules(rule => {\n      if (this.disabled(rule, result)) return undefined;\n      return this.prefixes.add.selectors.map(selector => {\n        return selector.process(rule, result);\n      });\n    });\n    function insideGrid(decl) {\n      return decl.parent.nodes.some(node => {\n        if (node.type !== 'decl') return false;\n        let displayGrid = node.prop === 'display' && /(inline-)?grid/.test(node.value);\n        let gridTemplate = node.prop.startsWith('grid-template');\n        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop);\n        return displayGrid || gridTemplate || gridGap;\n      });\n    }\n    let gridPrefixes = this.gridStatus(css, result) && this.prefixes.add['grid-area'] && this.prefixes.add['grid-area'].prefixes;\n    css.walkDecls(decl => {\n      if (this.disabledDecl(decl, result)) return undefined;\n      let parent = decl.parent;\n      let prop = decl.prop;\n      let value = decl.value;\n      if (prop === 'color-adjust') {\n        if (parent.every(i => i.prop !== 'print-color-adjust')) {\n          result.warn('Replace color-adjust to print-color-adjust. ' + 'The color-adjust shorthand is currently deprecated.', {\n            node: decl\n          });\n        }\n      } else if (prop === 'grid-row-span') {\n        result.warn('grid-row-span is not part of final Grid Layout. Use grid-row.', {\n          node: decl\n        });\n        return undefined;\n      } else if (prop === 'grid-column-span') {\n        result.warn('grid-column-span is not part of final Grid Layout. Use grid-column.', {\n          node: decl\n        });\n        return undefined;\n      } else if (prop === 'display' && value === 'box') {\n        result.warn('You should write display: flex by final spec ' + 'instead of display: box', {\n          node: decl\n        });\n        return undefined;\n      } else if (prop === 'text-emphasis-position') {\n        if (value === 'under' || value === 'over') {\n          result.warn('You should use 2 values for text-emphasis-position ' + 'For example, `under left` instead of just `under`.', {\n            node: decl\n          });\n        }\n      } else if (prop === 'text-decoration-skip' && value === 'ink') {\n        result.warn('Replace text-decoration-skip: ink to ' + 'text-decoration-skip-ink: auto, because spec had been changed', {\n          node: decl\n        });\n      } else {\n        if (gridPrefixes && this.gridStatus(decl, result)) {\n          if (decl.value === 'subgrid') {\n            result.warn('IE does not support subgrid', {\n              node: decl\n            });\n          }\n          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\n            let fixed = prop.replace('-items', '-self');\n            result.warn(`IE does not support ${prop} on grid containers. ` + `Try using ${fixed} on child elements instead: ` + `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`, {\n              node: decl\n            });\n          } else if (/^(align|justify|place)-content$/.test(prop) && insideGrid(decl)) {\n            result.warn(`IE does not support ${decl.prop} on grid containers`, {\n              node: decl\n            });\n          } else if (prop === 'display' && decl.value === 'contents') {\n            result.warn('Please do not use display: contents; ' + 'if you have grid setting enabled', {\n              node: decl\n            });\n            return undefined;\n          } else if (decl.prop === 'grid-gap') {\n            let status = this.gridStatus(decl, result);\n            if (status === 'autoplace' && !hasRowsAndColumns(decl) && !hasGridTemplate(decl)) {\n              result.warn('grid-gap only works if grid-template(-areas) is being ' + 'used or both rows and columns have been declared ' + 'and cells have not been manually ' + 'placed inside the explicit grid', {\n                node: decl\n              });\n            } else if ((status === true || status === 'no-autoplace') && !hasGridTemplate(decl)) {\n              result.warn('grid-gap only works if grid-template(-areas) is being used', {\n                node: decl\n              });\n            }\n          } else if (prop === 'grid-auto-columns') {\n            result.warn('grid-auto-columns is not supported by IE', {\n              node: decl\n            });\n            return undefined;\n          } else if (prop === 'grid-auto-rows') {\n            result.warn('grid-auto-rows is not supported by IE', {\n              node: decl\n            });\n            return undefined;\n          } else if (prop === 'grid-auto-flow') {\n            let hasRows = parent.some(i => i.prop === 'grid-template-rows');\n            let hasCols = parent.some(i => i.prop === 'grid-template-columns');\n            if (hasGridTemplate(decl)) {\n              result.warn('grid-auto-flow is not supported by IE', {\n                node: decl\n              });\n            } else if (value.includes('dense')) {\n              result.warn('grid-auto-flow: dense is not supported by IE', {\n                node: decl\n              });\n            } else if (!hasRows && !hasCols) {\n              result.warn('grid-auto-flow works only if grid-template-rows and ' + 'grid-template-columns are present in the same rule', {\n                node: decl\n              });\n            }\n            return undefined;\n          } else if (value.includes('auto-fit')) {\n            result.warn('auto-fit value is not supported by IE', {\n              node: decl,\n              word: 'auto-fit'\n            });\n            return undefined;\n          } else if (value.includes('auto-fill')) {\n            result.warn('auto-fill value is not supported by IE', {\n              node: decl,\n              word: 'auto-fill'\n            });\n            return undefined;\n          } else if (prop.startsWith('grid-template') && value.includes('[')) {\n            result.warn('Autoprefixer currently does not support line names. ' + 'Try using grid-template-areas instead.', {\n              node: decl,\n              word: '['\n            });\n          }\n        }\n        if (value.includes('radial-gradient')) {\n          if (OLD_RADIAL.test(decl.value)) {\n            result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `closest-side at 0 0` ' + 'instead of `0 0, closest-side`.', {\n              node: decl\n            });\n          } else {\n            let ast = parser(value);\n            for (let i of ast.nodes) {\n              if (i.type === 'function' && i.value === 'radial-gradient') {\n                for (let word of i.nodes) {\n                  if (word.type === 'word') {\n                    if (word.value === 'cover') {\n                      result.warn('Gradient has outdated direction syntax. ' + 'Replace `cover` to `farthest-corner`.', {\n                        node: decl\n                      });\n                    } else if (word.value === 'contain') {\n                      result.warn('Gradient has outdated direction syntax. ' + 'Replace `contain` to `closest-side`.', {\n                        node: decl\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (value.includes('linear-gradient')) {\n          if (OLD_LINEAR.test(value)) {\n            result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `to left` instead of `right`.', {\n              node: decl\n            });\n          }\n        }\n      }\n      if (SIZES.includes(decl.prop)) {\n        if (!decl.value.includes('-fill-available')) {\n          if (decl.value.includes('fill-available')) {\n            result.warn('Replace fill-available to stretch, ' + 'because spec had been changed', {\n              node: decl\n            });\n          } else if (decl.value.includes('fill')) {\n            let ast = parser(value);\n            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {\n              result.warn('Replace fill to stretch, because spec had been changed', {\n                node: decl\n              });\n            }\n          }\n        }\n      }\n      let prefixer;\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        // Transition\n        return this.prefixes.transition.add(decl, result);\n      } else if (decl.prop === 'align-self') {\n        // align-self flexbox or grid\n        let display = this.displayType(decl);\n        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {\n          prefixer = this.prefixes.add['align-self'];\n          if (prefixer && prefixer.prefixes) {\n            prefixer.process(decl);\n          }\n        }\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-row-align'];\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result);\n          }\n        }\n      } else if (decl.prop === 'justify-self') {\n        // justify-self flexbox or grid\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-column-align'];\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result);\n          }\n        }\n      } else if (decl.prop === 'place-self') {\n        prefixer = this.prefixes.add['place-self'];\n        if (prefixer && prefixer.prefixes && this.gridStatus(decl, result) !== false) {\n          return prefixer.process(decl, result);\n        }\n      } else {\n        // Properties\n        prefixer = this.prefixes.add[decl.prop];\n        if (prefixer && prefixer.prefixes) {\n          return prefixer.process(decl, result);\n        }\n      }\n      return undefined;\n    });\n\n    // Insert grid-area prefixes. We need to be able to store the different\n    // rules as a data and hack API is not enough for this\n    if (this.gridStatus(css, result)) {\n      insertAreas(css, this.disabled);\n    }\n\n    // Values\n    return css.walkDecls(decl => {\n      if (this.disabledValue(decl, result)) return;\n      let unprefixed = this.prefixes.unprefixed(decl.prop);\n      let list = this.prefixes.values('add', unprefixed);\n      if (Array.isArray(list)) {\n        for (let value of list) {\n          if (value.process) value.process(decl, result);\n        }\n      }\n      Value.save(this.prefixes, decl);\n    });\n  }\n\n  /**\r\n   * Check for control comment and global options\r\n   */\n  disabled(node, result) {\n    if (!node) return false;\n    if (node._autoprefixerDisabled !== undefined) {\n      return node._autoprefixerDisabled;\n    }\n    if (node.parent) {\n      let p = node.prev();\n      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {\n        node._autoprefixerDisabled = true;\n        node._autoprefixerSelfDisabled = true;\n        return true;\n      }\n    }\n    let value = null;\n    if (node.nodes) {\n      let status;\n      node.each(i => {\n        if (i.type !== 'comment') return;\n        if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\n          if (typeof status !== 'undefined') {\n            result.warn('Second Autoprefixer control comment ' + 'was ignored. Autoprefixer applies control ' + 'comment to whole block, not to next rules.', {\n              node: i\n            });\n          } else {\n            status = /on/i.test(i.text);\n          }\n        }\n      });\n      if (status !== undefined) {\n        value = !status;\n      }\n    }\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentDisabled = this.disabled(node.parent, result);\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false;\n        } else {\n          value = isParentDisabled;\n        }\n      } else {\n        value = false;\n      }\n    }\n    node._autoprefixerDisabled = value;\n    return value;\n  }\n\n  /**\r\n   * Check for grid/flexbox options.\r\n   */\n  disabledDecl(node, result) {\n    if (node.type === 'decl' && this.gridStatus(node, result) === false) {\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true;\n      }\n    }\n    if (node.type === 'decl' && this.prefixes.options.flexbox === false) {\n      let other = ['order', 'justify-content', 'align-items', 'align-content'];\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true;\n      }\n    }\n    return this.disabled(node, result);\n  }\n\n  /**\r\n   * Check for grid/flexbox options.\r\n   */\n  disabledValue(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true;\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true;\n      }\n    }\n    if (node.type === 'decl' && node.prop === 'content') {\n      return true;\n    }\n    return this.disabled(node, result);\n  }\n\n  /**\r\n   * Is it flebox or grid rule\r\n   */\n  displayType(decl) {\n    for (let i of decl.parent.nodes) {\n      if (i.prop !== 'display') {\n        continue;\n      }\n      if (i.value.includes('flex')) {\n        return 'flex';\n      }\n      if (i.value.includes('grid')) {\n        return 'grid';\n      }\n    }\n    return false;\n  }\n\n  /**\r\n   * Set grid option via control comment\r\n   */\n  gridStatus(node, result) {\n    if (!node) return false;\n    if (node._autoprefixerGridStatus !== undefined) {\n      return node._autoprefixerGridStatus;\n    }\n    let value = null;\n    if (node.nodes) {\n      let status;\n      node.each(i => {\n        if (i.type !== 'comment') return;\n        if (GRID_REGEX.test(i.text)) {\n          let hasAutoplace = /:\\s*autoplace/i.test(i.text);\n          let noAutoplace = /no-autoplace/i.test(i.text);\n          if (typeof status !== 'undefined') {\n            result.warn('Second Autoprefixer grid control comment was ' + 'ignored. Autoprefixer applies control comments to the whole ' + 'block, not to the next rules.', {\n              node: i\n            });\n          } else if (hasAutoplace) {\n            status = 'autoplace';\n          } else if (noAutoplace) {\n            status = true;\n          } else {\n            status = /on/i.test(i.text);\n          }\n        }\n      });\n      if (status !== undefined) {\n        value = status;\n      }\n    }\n    if (node.type === 'atrule' && node.name === 'supports') {\n      let params = node.params;\n      if (params.includes('grid') && params.includes('auto')) {\n        value = false;\n      }\n    }\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentGrid = this.gridStatus(node.parent, result);\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false;\n        } else {\n          value = isParentGrid;\n        }\n      } else if (typeof this.prefixes.options.grid !== 'undefined') {\n        value = this.prefixes.options.grid;\n      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {\n        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {\n          value = 'autoplace';\n        } else {\n          value = true;\n        }\n      } else {\n        value = false;\n      }\n    }\n    node._autoprefixerGridStatus = value;\n    return value;\n  }\n\n  /**\r\n   * Normalize spaces in cascade declaration group\r\n   */\n  reduceSpaces(decl) {\n    let stop = false;\n    this.prefixes.group(decl).up(() => {\n      stop = true;\n      return true;\n    });\n    if (stop) {\n      return;\n    }\n    let parts = decl.raw('before').split('\\n');\n    let prevMin = parts[parts.length - 1].length;\n    let diff = false;\n    this.prefixes.group(decl).down(other => {\n      parts = other.raw('before').split('\\n');\n      let last = parts.length - 1;\n      if (parts[last].length > prevMin) {\n        if (diff === false) {\n          diff = parts[last].length - prevMin;\n        }\n        parts[last] = parts[last].slice(0, -diff);\n        other.raws.before = parts.join('\\n');\n      }\n    });\n  }\n\n  /**\r\n   * Remove unnecessary pefixes\r\n   */\n  remove(css, result) {\n    // At-rules\n    let resolution = this.prefixes.remove['@resolution'];\n    css.walkAtRules((rule, i) => {\n      if (this.prefixes.remove[`@${rule.name}`]) {\n        if (!this.disabled(rule, result)) {\n          rule.parent.removeChild(i);\n        }\n      } else if (rule.name === 'media' && rule.params.includes('-resolution') && resolution) {\n        resolution.clean(rule);\n      }\n    });\n\n    // Selectors\n    css.walkRules((rule, i) => {\n      if (this.disabled(rule, result)) return;\n      for (let checker of this.prefixes.remove.selectors) {\n        if (checker.check(rule)) {\n          rule.parent.removeChild(i);\n          return;\n        }\n      }\n    });\n    return css.walkDecls((decl, i) => {\n      if (this.disabled(decl, result)) return;\n      let rule = decl.parent;\n      let unprefixed = this.prefixes.unprefixed(decl.prop);\n\n      // Transition\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        this.prefixes.transition.remove(decl);\n      }\n\n      // Properties\n      if (this.prefixes.remove[decl.prop] && this.prefixes.remove[decl.prop].remove) {\n        let notHack = this.prefixes.group(decl).down(other => {\n          return this.prefixes.normalize(other.prop) === unprefixed;\n        });\n        if (unprefixed === 'flex-flow') {\n          notHack = true;\n        }\n        if (decl.prop === '-webkit-box-orient') {\n          let hacks = {\n            'flex-direction': true,\n            'flex-flow': true\n          };\n          if (!decl.parent.some(j => hacks[j.prop])) return;\n        }\n        if (notHack && !this.withHackValue(decl)) {\n          if (decl.raw('before').includes('\\n')) {\n            this.reduceSpaces(decl);\n          }\n          rule.removeChild(i);\n          return;\n        }\n      }\n\n      // Values\n      for (let checker of this.prefixes.values('remove', unprefixed)) {\n        if (!checker.check) continue;\n        if (!checker.check(decl.value)) continue;\n        unprefixed = checker.unprefixed;\n        let notHack = this.prefixes.group(decl).down(other => {\n          return other.value.includes(unprefixed);\n        });\n        if (notHack) {\n          rule.removeChild(i);\n          return;\n        }\n      }\n    });\n  }\n\n  /**\r\n   * Some rare old values, which is not in standard\r\n   */\n  withHackValue(decl) {\n    return decl.prop === '-webkit-background-clip' && decl.value === 'text' ||\n    // Do not remove -webkit-box-orient when -webkit-line-clamp is present.\n    // https://github.com/postcss/autoprefixer/issues/1510\n    decl.prop === '-webkit-box-orient' && decl.parent.some(d => d.prop === '-webkit-line-clamp');\n  }\n}\nmodule.exports = Processor;","map":{"version":3,"names":["parser","require","Value","insertAreas","OLD_LINEAR","OLD_RADIAL","IGNORE_NEXT","GRID_REGEX","SIZES","hasGridTemplate","decl","parent","some","i","prop","hasRowsAndColumns","hasRows","hasColumns","Processor","constructor","prefixes","add","css","result","resolution","keyframes","viewport","supports","walkAtRules","rule","name","disabled","process","options","params","includes","undefined","walkRules","selectors","map","selector","insideGrid","nodes","node","type","displayGrid","test","value","gridTemplate","startsWith","gridGap","gridPrefixes","gridStatus","walkDecls","disabledDecl","every","warn","fixed","replace","status","hasCols","word","ast","prefixer","transition","display","displayType","flexbox","disabledValue","unprefixed","list","values","Array","isArray","save","_autoprefixerDisabled","p","prev","text","_autoprefixerSelfDisabled","each","isParentDisabled","other","_autoprefixerGridStatus","hasAutoplace","noAutoplace","isParentGrid","grid","env","AUTOPREFIXER_GRID","reduceSpaces","stop","group","up","parts","raw","split","prevMin","length","diff","down","last","slice","raws","before","join","remove","removeChild","clean","checker","check","notHack","normalize","hacks","j","withHackValue","d","module","exports"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/autoprefixer/lib/processor.js"],"sourcesContent":["let parser = require('postcss-value-parser')\r\n\r\nlet Value = require('./value')\r\nlet insertAreas = require('./hacks/grid-utils').insertAreas\r\n\r\nconst OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i\r\nconst OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i\r\nconst IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i\r\nconst GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i\r\n\r\nconst SIZES = [\r\n  'width',\r\n  'height',\r\n  'min-width',\r\n  'max-width',\r\n  'min-height',\r\n  'max-height',\r\n  'inline-size',\r\n  'min-inline-size',\r\n  'max-inline-size',\r\n  'block-size',\r\n  'min-block-size',\r\n  'max-block-size'\r\n]\r\n\r\nfunction hasGridTemplate(decl) {\r\n  return decl.parent.some(\r\n    i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\r\n  )\r\n}\r\n\r\nfunction hasRowsAndColumns(decl) {\r\n  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows')\r\n  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns')\r\n  return hasRows && hasColumns\r\n}\r\n\r\nclass Processor {\r\n  constructor(prefixes) {\r\n    this.prefixes = prefixes\r\n  }\r\n\r\n  /**\r\n   * Add necessary prefixes\r\n   */\r\n  add(css, result) {\r\n    // At-rules\r\n    let resolution = this.prefixes.add['@resolution']\r\n    let keyframes = this.prefixes.add['@keyframes']\r\n    let viewport = this.prefixes.add['@viewport']\r\n    let supports = this.prefixes.add['@supports']\r\n\r\n    css.walkAtRules(rule => {\r\n      if (rule.name === 'keyframes') {\r\n        if (!this.disabled(rule, result)) {\r\n          return keyframes && keyframes.process(rule)\r\n        }\r\n      } else if (rule.name === 'viewport') {\r\n        if (!this.disabled(rule, result)) {\r\n          return viewport && viewport.process(rule)\r\n        }\r\n      } else if (rule.name === 'supports') {\r\n        if (\r\n          this.prefixes.options.supports !== false &&\r\n          !this.disabled(rule, result)\r\n        ) {\r\n          return supports.process(rule)\r\n        }\r\n      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {\r\n        if (!this.disabled(rule, result)) {\r\n          return resolution && resolution.process(rule)\r\n        }\r\n      }\r\n\r\n      return undefined\r\n    })\r\n\r\n    // Selectors\r\n    css.walkRules(rule => {\r\n      if (this.disabled(rule, result)) return undefined\r\n\r\n      return this.prefixes.add.selectors.map(selector => {\r\n        return selector.process(rule, result)\r\n      })\r\n    })\r\n\r\n    function insideGrid(decl) {\r\n      return decl.parent.nodes.some(node => {\r\n        if (node.type !== 'decl') return false\r\n        let displayGrid =\r\n          node.prop === 'display' && /(inline-)?grid/.test(node.value)\r\n        let gridTemplate = node.prop.startsWith('grid-template')\r\n        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop)\r\n        return displayGrid || gridTemplate || gridGap\r\n      })\r\n    }\r\n\r\n    let gridPrefixes =\r\n      this.gridStatus(css, result) &&\r\n      this.prefixes.add['grid-area'] &&\r\n      this.prefixes.add['grid-area'].prefixes\r\n\r\n    css.walkDecls(decl => {\r\n      if (this.disabledDecl(decl, result)) return undefined\r\n\r\n      let parent = decl.parent\r\n      let prop = decl.prop\r\n      let value = decl.value\r\n\r\n      if (prop === 'color-adjust') {\r\n        if (parent.every(i => i.prop !== 'print-color-adjust')) {\r\n          result.warn(\r\n            'Replace color-adjust to print-color-adjust. ' +\r\n              'The color-adjust shorthand is currently deprecated.',\r\n            { node: decl }\r\n          )\r\n        }\r\n      } else if (prop === 'grid-row-span') {\r\n        result.warn(\r\n          'grid-row-span is not part of final Grid Layout. Use grid-row.',\r\n          { node: decl }\r\n        )\r\n        return undefined\r\n      } else if (prop === 'grid-column-span') {\r\n        result.warn(\r\n          'grid-column-span is not part of final Grid Layout. Use grid-column.',\r\n          { node: decl }\r\n        )\r\n        return undefined\r\n      } else if (prop === 'display' && value === 'box') {\r\n        result.warn(\r\n          'You should write display: flex by final spec ' +\r\n            'instead of display: box',\r\n          { node: decl }\r\n        )\r\n        return undefined\r\n      } else if (prop === 'text-emphasis-position') {\r\n        if (value === 'under' || value === 'over') {\r\n          result.warn(\r\n            'You should use 2 values for text-emphasis-position ' +\r\n              'For example, `under left` instead of just `under`.',\r\n            { node: decl }\r\n          )\r\n        }\r\n      } else if (prop === 'text-decoration-skip' && value === 'ink') {\r\n        result.warn(\r\n          'Replace text-decoration-skip: ink to ' +\r\n            'text-decoration-skip-ink: auto, because spec had been changed',\r\n          { node: decl }\r\n        )\r\n      } else {\r\n        if (gridPrefixes && this.gridStatus(decl, result)) {\r\n          if (decl.value === 'subgrid') {\r\n            result.warn('IE does not support subgrid', { node: decl })\r\n          }\r\n          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\r\n            let fixed = prop.replace('-items', '-self')\r\n            result.warn(\r\n              `IE does not support ${prop} on grid containers. ` +\r\n                `Try using ${fixed} on child elements instead: ` +\r\n                `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`,\r\n              { node: decl }\r\n            )\r\n          } else if (\r\n            /^(align|justify|place)-content$/.test(prop) &&\r\n            insideGrid(decl)\r\n          ) {\r\n            result.warn(`IE does not support ${decl.prop} on grid containers`, {\r\n              node: decl\r\n            })\r\n          } else if (prop === 'display' && decl.value === 'contents') {\r\n            result.warn(\r\n              'Please do not use display: contents; ' +\r\n                'if you have grid setting enabled',\r\n              { node: decl }\r\n            )\r\n            return undefined\r\n          } else if (decl.prop === 'grid-gap') {\r\n            let status = this.gridStatus(decl, result)\r\n            if (\r\n              status === 'autoplace' &&\r\n              !hasRowsAndColumns(decl) &&\r\n              !hasGridTemplate(decl)\r\n            ) {\r\n              result.warn(\r\n                'grid-gap only works if grid-template(-areas) is being ' +\r\n                  'used or both rows and columns have been declared ' +\r\n                  'and cells have not been manually ' +\r\n                  'placed inside the explicit grid',\r\n                { node: decl }\r\n              )\r\n            } else if (\r\n              (status === true || status === 'no-autoplace') &&\r\n              !hasGridTemplate(decl)\r\n            ) {\r\n              result.warn(\r\n                'grid-gap only works if grid-template(-areas) is being used',\r\n                { node: decl }\r\n              )\r\n            }\r\n          } else if (prop === 'grid-auto-columns') {\r\n            result.warn('grid-auto-columns is not supported by IE', {\r\n              node: decl\r\n            })\r\n            return undefined\r\n          } else if (prop === 'grid-auto-rows') {\r\n            result.warn('grid-auto-rows is not supported by IE', { node: decl })\r\n            return undefined\r\n          } else if (prop === 'grid-auto-flow') {\r\n            let hasRows = parent.some(i => i.prop === 'grid-template-rows')\r\n            let hasCols = parent.some(i => i.prop === 'grid-template-columns')\r\n\r\n            if (hasGridTemplate(decl)) {\r\n              result.warn('grid-auto-flow is not supported by IE', {\r\n                node: decl\r\n              })\r\n            } else if (value.includes('dense')) {\r\n              result.warn('grid-auto-flow: dense is not supported by IE', {\r\n                node: decl\r\n              })\r\n            } else if (!hasRows && !hasCols) {\r\n              result.warn(\r\n                'grid-auto-flow works only if grid-template-rows and ' +\r\n                  'grid-template-columns are present in the same rule',\r\n                { node: decl }\r\n              )\r\n            }\r\n            return undefined\r\n          } else if (value.includes('auto-fit')) {\r\n            result.warn('auto-fit value is not supported by IE', {\r\n              node: decl,\r\n              word: 'auto-fit'\r\n            })\r\n            return undefined\r\n          } else if (value.includes('auto-fill')) {\r\n            result.warn('auto-fill value is not supported by IE', {\r\n              node: decl,\r\n              word: 'auto-fill'\r\n            })\r\n            return undefined\r\n          } else if (prop.startsWith('grid-template') && value.includes('[')) {\r\n            result.warn(\r\n              'Autoprefixer currently does not support line names. ' +\r\n                'Try using grid-template-areas instead.',\r\n              { node: decl, word: '[' }\r\n            )\r\n          }\r\n        }\r\n        if (value.includes('radial-gradient')) {\r\n          if (OLD_RADIAL.test(decl.value)) {\r\n            result.warn(\r\n              'Gradient has outdated direction syntax. ' +\r\n                'New syntax is like `closest-side at 0 0` ' +\r\n                'instead of `0 0, closest-side`.',\r\n              { node: decl }\r\n            )\r\n          } else {\r\n            let ast = parser(value)\r\n\r\n            for (let i of ast.nodes) {\r\n              if (i.type === 'function' && i.value === 'radial-gradient') {\r\n                for (let word of i.nodes) {\r\n                  if (word.type === 'word') {\r\n                    if (word.value === 'cover') {\r\n                      result.warn(\r\n                        'Gradient has outdated direction syntax. ' +\r\n                          'Replace `cover` to `farthest-corner`.',\r\n                        { node: decl }\r\n                      )\r\n                    } else if (word.value === 'contain') {\r\n                      result.warn(\r\n                        'Gradient has outdated direction syntax. ' +\r\n                          'Replace `contain` to `closest-side`.',\r\n                        { node: decl }\r\n                      )\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (value.includes('linear-gradient')) {\r\n          if (OLD_LINEAR.test(value)) {\r\n            result.warn(\r\n              'Gradient has outdated direction syntax. ' +\r\n                'New syntax is like `to left` instead of `right`.',\r\n              { node: decl }\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      if (SIZES.includes(decl.prop)) {\r\n        if (!decl.value.includes('-fill-available')) {\r\n          if (decl.value.includes('fill-available')) {\r\n            result.warn(\r\n              'Replace fill-available to stretch, ' +\r\n                'because spec had been changed',\r\n              { node: decl }\r\n            )\r\n          } else if (decl.value.includes('fill')) {\r\n            let ast = parser(value)\r\n            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {\r\n              result.warn(\r\n                'Replace fill to stretch, because spec had been changed',\r\n                { node: decl }\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      let prefixer\r\n\r\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\r\n        // Transition\r\n        return this.prefixes.transition.add(decl, result)\r\n      } else if (decl.prop === 'align-self') {\r\n        // align-self flexbox or grid\r\n        let display = this.displayType(decl)\r\n        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {\r\n          prefixer = this.prefixes.add['align-self']\r\n          if (prefixer && prefixer.prefixes) {\r\n            prefixer.process(decl)\r\n          }\r\n        }\r\n        if (this.gridStatus(decl, result) !== false) {\r\n          prefixer = this.prefixes.add['grid-row-align']\r\n          if (prefixer && prefixer.prefixes) {\r\n            return prefixer.process(decl, result)\r\n          }\r\n        }\r\n      } else if (decl.prop === 'justify-self') {\r\n        // justify-self flexbox or grid\r\n        if (this.gridStatus(decl, result) !== false) {\r\n          prefixer = this.prefixes.add['grid-column-align']\r\n          if (prefixer && prefixer.prefixes) {\r\n            return prefixer.process(decl, result)\r\n          }\r\n        }\r\n      } else if (decl.prop === 'place-self') {\r\n        prefixer = this.prefixes.add['place-self']\r\n        if (\r\n          prefixer &&\r\n          prefixer.prefixes &&\r\n          this.gridStatus(decl, result) !== false\r\n        ) {\r\n          return prefixer.process(decl, result)\r\n        }\r\n      } else {\r\n        // Properties\r\n        prefixer = this.prefixes.add[decl.prop]\r\n        if (prefixer && prefixer.prefixes) {\r\n          return prefixer.process(decl, result)\r\n        }\r\n      }\r\n\r\n      return undefined\r\n    })\r\n\r\n    // Insert grid-area prefixes. We need to be able to store the different\r\n    // rules as a data and hack API is not enough for this\r\n    if (this.gridStatus(css, result)) {\r\n      insertAreas(css, this.disabled)\r\n    }\r\n\r\n    // Values\r\n    return css.walkDecls(decl => {\r\n      if (this.disabledValue(decl, result)) return\r\n\r\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\r\n      let list = this.prefixes.values('add', unprefixed)\r\n      if (Array.isArray(list)) {\r\n        for (let value of list) {\r\n          if (value.process) value.process(decl, result)\r\n        }\r\n      }\r\n      Value.save(this.prefixes, decl)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Check for control comment and global options\r\n   */\r\n  disabled(node, result) {\r\n    if (!node) return false\r\n\r\n    if (node._autoprefixerDisabled !== undefined) {\r\n      return node._autoprefixerDisabled\r\n    }\r\n\r\n    if (node.parent) {\r\n      let p = node.prev()\r\n      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {\r\n        node._autoprefixerDisabled = true\r\n        node._autoprefixerSelfDisabled = true\r\n        return true\r\n      }\r\n    }\r\n\r\n    let value = null\r\n    if (node.nodes) {\r\n      let status\r\n      node.each(i => {\r\n        if (i.type !== 'comment') return\r\n        if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\r\n          if (typeof status !== 'undefined') {\r\n            result.warn(\r\n              'Second Autoprefixer control comment ' +\r\n                'was ignored. Autoprefixer applies control ' +\r\n                'comment to whole block, not to next rules.',\r\n              { node: i }\r\n            )\r\n          } else {\r\n            status = /on/i.test(i.text)\r\n          }\r\n        }\r\n      })\r\n\r\n      if (status !== undefined) {\r\n        value = !status\r\n      }\r\n    }\r\n    if (!node.nodes || value === null) {\r\n      if (node.parent) {\r\n        let isParentDisabled = this.disabled(node.parent, result)\r\n        if (node.parent._autoprefixerSelfDisabled === true) {\r\n          value = false\r\n        } else {\r\n          value = isParentDisabled\r\n        }\r\n      } else {\r\n        value = false\r\n      }\r\n    }\r\n    node._autoprefixerDisabled = value\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Check for grid/flexbox options.\r\n   */\r\n  disabledDecl(node, result) {\r\n    if (node.type === 'decl' && this.gridStatus(node, result) === false) {\r\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\r\n        return true\r\n      }\r\n    }\r\n    if (node.type === 'decl' && this.prefixes.options.flexbox === false) {\r\n      let other = ['order', 'justify-content', 'align-items', 'align-content']\r\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return this.disabled(node, result)\r\n  }\r\n\r\n  /**\r\n   * Check for grid/flexbox options.\r\n   */\r\n  disabledValue(node, result) {\r\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\r\n      if (node.prop === 'display' && node.value.includes('grid')) {\r\n        return true\r\n      }\r\n    }\r\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\r\n      if (node.prop === 'display' && node.value.includes('flex')) {\r\n        return true\r\n      }\r\n    }\r\n    if (node.type === 'decl' && node.prop === 'content') {\r\n      return true\r\n    }\r\n\r\n    return this.disabled(node, result)\r\n  }\r\n\r\n  /**\r\n   * Is it flebox or grid rule\r\n   */\r\n  displayType(decl) {\r\n    for (let i of decl.parent.nodes) {\r\n      if (i.prop !== 'display') {\r\n        continue\r\n      }\r\n\r\n      if (i.value.includes('flex')) {\r\n        return 'flex'\r\n      }\r\n\r\n      if (i.value.includes('grid')) {\r\n        return 'grid'\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Set grid option via control comment\r\n   */\r\n  gridStatus(node, result) {\r\n    if (!node) return false\r\n\r\n    if (node._autoprefixerGridStatus !== undefined) {\r\n      return node._autoprefixerGridStatus\r\n    }\r\n\r\n    let value = null\r\n    if (node.nodes) {\r\n      let status\r\n      node.each(i => {\r\n        if (i.type !== 'comment') return\r\n        if (GRID_REGEX.test(i.text)) {\r\n          let hasAutoplace = /:\\s*autoplace/i.test(i.text)\r\n          let noAutoplace = /no-autoplace/i.test(i.text)\r\n          if (typeof status !== 'undefined') {\r\n            result.warn(\r\n              'Second Autoprefixer grid control comment was ' +\r\n                'ignored. Autoprefixer applies control comments to the whole ' +\r\n                'block, not to the next rules.',\r\n              { node: i }\r\n            )\r\n          } else if (hasAutoplace) {\r\n            status = 'autoplace'\r\n          } else if (noAutoplace) {\r\n            status = true\r\n          } else {\r\n            status = /on/i.test(i.text)\r\n          }\r\n        }\r\n      })\r\n\r\n      if (status !== undefined) {\r\n        value = status\r\n      }\r\n    }\r\n\r\n    if (node.type === 'atrule' && node.name === 'supports') {\r\n      let params = node.params\r\n      if (params.includes('grid') && params.includes('auto')) {\r\n        value = false\r\n      }\r\n    }\r\n\r\n    if (!node.nodes || value === null) {\r\n      if (node.parent) {\r\n        let isParentGrid = this.gridStatus(node.parent, result)\r\n        if (node.parent._autoprefixerSelfDisabled === true) {\r\n          value = false\r\n        } else {\r\n          value = isParentGrid\r\n        }\r\n      } else if (typeof this.prefixes.options.grid !== 'undefined') {\r\n        value = this.prefixes.options.grid\r\n      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {\r\n        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {\r\n          value = 'autoplace'\r\n        } else {\r\n          value = true\r\n        }\r\n      } else {\r\n        value = false\r\n      }\r\n    }\r\n\r\n    node._autoprefixerGridStatus = value\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Normalize spaces in cascade declaration group\r\n   */\r\n  reduceSpaces(decl) {\r\n    let stop = false\r\n    this.prefixes.group(decl).up(() => {\r\n      stop = true\r\n      return true\r\n    })\r\n    if (stop) {\r\n      return\r\n    }\r\n\r\n    let parts = decl.raw('before').split('\\n')\r\n    let prevMin = parts[parts.length - 1].length\r\n    let diff = false\r\n\r\n    this.prefixes.group(decl).down(other => {\r\n      parts = other.raw('before').split('\\n')\r\n      let last = parts.length - 1\r\n\r\n      if (parts[last].length > prevMin) {\r\n        if (diff === false) {\r\n          diff = parts[last].length - prevMin\r\n        }\r\n\r\n        parts[last] = parts[last].slice(0, -diff)\r\n        other.raws.before = parts.join('\\n')\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Remove unnecessary pefixes\r\n   */\r\n  remove(css, result) {\r\n    // At-rules\r\n    let resolution = this.prefixes.remove['@resolution']\r\n\r\n    css.walkAtRules((rule, i) => {\r\n      if (this.prefixes.remove[`@${rule.name}`]) {\r\n        if (!this.disabled(rule, result)) {\r\n          rule.parent.removeChild(i)\r\n        }\r\n      } else if (\r\n        rule.name === 'media' &&\r\n        rule.params.includes('-resolution') &&\r\n        resolution\r\n      ) {\r\n        resolution.clean(rule)\r\n      }\r\n    })\r\n\r\n    // Selectors\r\n    css.walkRules((rule, i) => {\r\n      if (this.disabled(rule, result)) return\r\n\r\n      for (let checker of this.prefixes.remove.selectors) {\r\n        if (checker.check(rule)) {\r\n          rule.parent.removeChild(i)\r\n          return\r\n        }\r\n      }\r\n    })\r\n\r\n    return css.walkDecls((decl, i) => {\r\n      if (this.disabled(decl, result)) return\r\n\r\n      let rule = decl.parent\r\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\r\n\r\n      // Transition\r\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\r\n        this.prefixes.transition.remove(decl)\r\n      }\r\n\r\n      // Properties\r\n      if (\r\n        this.prefixes.remove[decl.prop] &&\r\n        this.prefixes.remove[decl.prop].remove\r\n      ) {\r\n        let notHack = this.prefixes.group(decl).down(other => {\r\n          return this.prefixes.normalize(other.prop) === unprefixed\r\n        })\r\n\r\n        if (unprefixed === 'flex-flow') {\r\n          notHack = true\r\n        }\r\n\r\n        if (decl.prop === '-webkit-box-orient') {\r\n          let hacks = { 'flex-direction': true, 'flex-flow': true }\r\n          if (!decl.parent.some(j => hacks[j.prop])) return\r\n        }\r\n\r\n        if (notHack && !this.withHackValue(decl)) {\r\n          if (decl.raw('before').includes('\\n')) {\r\n            this.reduceSpaces(decl)\r\n          }\r\n          rule.removeChild(i)\r\n          return\r\n        }\r\n      }\r\n\r\n      // Values\r\n      for (let checker of this.prefixes.values('remove', unprefixed)) {\r\n        if (!checker.check) continue\r\n        if (!checker.check(decl.value)) continue\r\n\r\n        unprefixed = checker.unprefixed\r\n        let notHack = this.prefixes.group(decl).down(other => {\r\n          return other.value.includes(unprefixed)\r\n        })\r\n\r\n        if (notHack) {\r\n          rule.removeChild(i)\r\n          return\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Some rare old values, which is not in standard\r\n   */\r\n  withHackValue(decl) {\r\n    return (\r\n      (decl.prop === '-webkit-background-clip' && decl.value === 'text') ||\r\n      // Do not remove -webkit-box-orient when -webkit-line-clamp is present.\r\n      // https://github.com/postcss/autoprefixer/issues/1510\r\n      (decl.prop === '-webkit-box-orient' &&\r\n        decl.parent.some(d => d.prop === '-webkit-line-clamp'))\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = Processor\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}