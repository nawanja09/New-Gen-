{"ast":null,"code":"let vendor = require('./vendor');\nlet Declaration = require('./declaration');\nlet Resolution = require('./resolution');\nlet Transition = require('./transition');\nlet Processor = require('./processor');\nlet Supports = require('./supports');\nlet Browsers = require('./browsers');\nlet Selector = require('./selector');\nlet AtRule = require('./at-rule');\nlet Value = require('./value');\nlet utils = require('./utils');\nlet hackFullscreen = require('./hacks/fullscreen');\nlet hackPlaceholder = require('./hacks/placeholder');\nlet hackPlaceholderShown = require('./hacks/placeholder-shown');\nlet hackFileSelectorButton = require('./hacks/file-selector-button');\nlet hackFlex = require('./hacks/flex');\nlet hackOrder = require('./hacks/order');\nlet hackFilter = require('./hacks/filter');\nlet hackGridEnd = require('./hacks/grid-end');\nlet hackAnimation = require('./hacks/animation');\nlet hackFlexFlow = require('./hacks/flex-flow');\nlet hackFlexGrow = require('./hacks/flex-grow');\nlet hackFlexWrap = require('./hacks/flex-wrap');\nlet hackGridArea = require('./hacks/grid-area');\nlet hackPlaceSelf = require('./hacks/place-self');\nlet hackGridStart = require('./hacks/grid-start');\nlet hackAlignSelf = require('./hacks/align-self');\nlet hackAppearance = require('./hacks/appearance');\nlet hackFlexBasis = require('./hacks/flex-basis');\nlet hackMaskBorder = require('./hacks/mask-border');\nlet hackMaskComposite = require('./hacks/mask-composite');\nlet hackAlignItems = require('./hacks/align-items');\nlet hackUserSelect = require('./hacks/user-select');\nlet hackFlexShrink = require('./hacks/flex-shrink');\nlet hackBreakProps = require('./hacks/break-props');\nlet hackWritingMode = require('./hacks/writing-mode');\nlet hackBorderImage = require('./hacks/border-image');\nlet hackAlignContent = require('./hacks/align-content');\nlet hackBorderRadius = require('./hacks/border-radius');\nlet hackBlockLogical = require('./hacks/block-logical');\nlet hackGridTemplate = require('./hacks/grid-template');\nlet hackInlineLogical = require('./hacks/inline-logical');\nlet hackGridRowAlign = require('./hacks/grid-row-align');\nlet hackTransformDecl = require('./hacks/transform-decl');\nlet hackFlexDirection = require('./hacks/flex-direction');\nlet hackImageRendering = require('./hacks/image-rendering');\nlet hackBackdropFilter = require('./hacks/backdrop-filter');\nlet hackBackgroundClip = require('./hacks/background-clip');\nlet hackTextDecoration = require('./hacks/text-decoration');\nlet hackJustifyContent = require('./hacks/justify-content');\nlet hackBackgroundSize = require('./hacks/background-size');\nlet hackGridRowColumn = require('./hacks/grid-row-column');\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns');\nlet hackGridColumnAlign = require('./hacks/grid-column-align');\nlet hackPrintColorAdjust = require('./hacks/print-color-adjust');\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior');\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas');\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position');\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink');\nlet hackGradient = require('./hacks/gradient');\nlet hackIntrinsic = require('./hacks/intrinsic');\nlet hackPixelated = require('./hacks/pixelated');\nlet hackImageSet = require('./hacks/image-set');\nlet hackCrossFade = require('./hacks/cross-fade');\nlet hackDisplayFlex = require('./hacks/display-flex');\nlet hackDisplayGrid = require('./hacks/display-grid');\nlet hackFilterValue = require('./hacks/filter-value');\nlet hackAutofill = require('./hacks/autofill');\nSelector.hack(hackAutofill);\nSelector.hack(hackFullscreen);\nSelector.hack(hackPlaceholder);\nSelector.hack(hackPlaceholderShown);\nSelector.hack(hackFileSelectorButton);\nDeclaration.hack(hackFlex);\nDeclaration.hack(hackOrder);\nDeclaration.hack(hackFilter);\nDeclaration.hack(hackGridEnd);\nDeclaration.hack(hackAnimation);\nDeclaration.hack(hackFlexFlow);\nDeclaration.hack(hackFlexGrow);\nDeclaration.hack(hackFlexWrap);\nDeclaration.hack(hackGridArea);\nDeclaration.hack(hackPlaceSelf);\nDeclaration.hack(hackGridStart);\nDeclaration.hack(hackAlignSelf);\nDeclaration.hack(hackAppearance);\nDeclaration.hack(hackFlexBasis);\nDeclaration.hack(hackMaskBorder);\nDeclaration.hack(hackMaskComposite);\nDeclaration.hack(hackAlignItems);\nDeclaration.hack(hackUserSelect);\nDeclaration.hack(hackFlexShrink);\nDeclaration.hack(hackBreakProps);\nDeclaration.hack(hackWritingMode);\nDeclaration.hack(hackBorderImage);\nDeclaration.hack(hackAlignContent);\nDeclaration.hack(hackBorderRadius);\nDeclaration.hack(hackBlockLogical);\nDeclaration.hack(hackGridTemplate);\nDeclaration.hack(hackInlineLogical);\nDeclaration.hack(hackGridRowAlign);\nDeclaration.hack(hackTransformDecl);\nDeclaration.hack(hackFlexDirection);\nDeclaration.hack(hackImageRendering);\nDeclaration.hack(hackBackdropFilter);\nDeclaration.hack(hackBackgroundClip);\nDeclaration.hack(hackTextDecoration);\nDeclaration.hack(hackJustifyContent);\nDeclaration.hack(hackBackgroundSize);\nDeclaration.hack(hackGridRowColumn);\nDeclaration.hack(hackGridRowsColumns);\nDeclaration.hack(hackGridColumnAlign);\nDeclaration.hack(hackOverscrollBehavior);\nDeclaration.hack(hackGridTemplateAreas);\nDeclaration.hack(hackPrintColorAdjust);\nDeclaration.hack(hackTextEmphasisPosition);\nDeclaration.hack(hackTextDecorationSkipInk);\nValue.hack(hackGradient);\nValue.hack(hackIntrinsic);\nValue.hack(hackPixelated);\nValue.hack(hackImageSet);\nValue.hack(hackCrossFade);\nValue.hack(hackDisplayFlex);\nValue.hack(hackDisplayGrid);\nValue.hack(hackFilterValue);\nlet declsCache = new Map();\nclass Prefixes {\n  constructor(data, browsers, options = {}) {\n    this.data = data;\n    this.browsers = browsers;\n    this.options = options;\n    [this.add, this.remove] = this.preprocess(this.select(this.data));\n    this.transition = new Transition(this);\n    this.processor = new Processor(this);\n  }\n\n  /**\r\n   * Return clone instance to remove all prefixes\r\n   */\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache;\n    }\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, []);\n      this.cleanerCache = new Prefixes(this.data, empty, this.options);\n    } else {\n      return this;\n    }\n    return this.cleanerCache;\n  }\n\n  /**\r\n   * Declaration loader with caching\r\n   */\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop));\n    }\n    return declsCache.get(prop);\n  }\n\n  /**\r\n   * Group declaration by unprefixed property to check them\r\n   */\n  group(decl) {\n    let rule = decl.parent;\n    let index = rule.index(decl);\n    let {\n      length\n    } = rule.nodes;\n    let unprefixed = this.unprefixed(decl.prop);\n    let checker = (step, callback) => {\n      index += step;\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index];\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break;\n          } else if (callback(other) === true) {\n            return true;\n          }\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n        }\n        index += step;\n      }\n      return false;\n    };\n    return {\n      down(callback) {\n        return checker(+1, callback);\n      },\n      up(callback) {\n        return checker(-1, callback);\n      }\n    };\n  }\n\n  /**\r\n   * Normalize prefix for remover\r\n   */\n  normalize(prop) {\n    return this.decl(prop).normalize(prop);\n  }\n\n  /**\r\n   * Return prefixed version of property\r\n   */\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop);\n    return this.decl(prop).prefixed(prop, prefix);\n  }\n\n  /**\r\n   * Cache prefixes data to fast CSS processing\r\n   */\n  preprocess(selected) {\n    let add = {\n      '@supports': new Supports(Prefixes, this),\n      'selectors': []\n    };\n    for (let name in selected.add) {\n      let prefixes = selected.add[name];\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this);\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this);\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this));\n      } else {\n        let props = this.data[name].props;\n        if (props) {\n          let value = Value.load(name, prefixes, this);\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = {\n                values: []\n              };\n            }\n            add[prop].values.push(value);\n          }\n        } else {\n          let values = add[name] && add[name].values || [];\n          add[name] = Declaration.load(name, prefixes, this);\n          add[name].values = values;\n        }\n      }\n    }\n    let remove = {\n      selectors: []\n    };\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name];\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes);\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix));\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`;\n          remove[prefixed] = {\n            remove: true\n          };\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this);\n      } else {\n        let props = this.data[name].props;\n        if (props) {\n          let value = Value.load(name, [], this);\n          for (let prefix of prefixes) {\n            let old = value.old(prefix);\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {};\n                }\n                if (!remove[prop].values) {\n                  remove[prop].values = [];\n                }\n                remove[prop].values.push(old);\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p);\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes;\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue;\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue;\n                }\n              }\n            }\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {};\n              }\n              remove[prefixed].remove = true;\n            }\n          }\n        }\n      }\n    }\n    return [add, remove];\n  }\n\n  /**\r\n   * Select prefixes from data, which is necessary for selected browsers\r\n   */\n  select(list) {\n    let selected = {\n      add: {},\n      remove: {}\n    };\n    for (let name in list) {\n      let data = list[name];\n      let add = data.browsers.map(i => {\n        let params = i.split(' ');\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        };\n      });\n      let notes = add.filter(i => i.note).map(i => `${this.browsers.prefix(i.browser)} ${i.note}`);\n      notes = utils.uniq(notes);\n      add = add.filter(i => this.browsers.isSelected(i.browser)).map(i => {\n        let prefix = this.browsers.prefix(i.browser);\n        if (i.note) {\n          return `${prefix} ${i.note}`;\n        } else {\n          return prefix;\n        }\n      });\n      add = this.sort(utils.uniq(add));\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'));\n      }\n      let all = data.browsers.map(i => this.browsers.prefix(i));\n      if (data.mistakes) {\n        all = all.concat(data.mistakes);\n      }\n      all = all.concat(notes);\n      all = utils.uniq(all);\n      if (add.length) {\n        selected.add[name] = add;\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i));\n        }\n      } else {\n        selected.remove[name] = all;\n      }\n    }\n    return selected;\n  }\n\n  /**\r\n   * Sort vendor prefixes\r\n   */\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length;\n      let bLength = utils.removeNote(b).length;\n      if (aLength === bLength) {\n        return b.length - a.length;\n      } else {\n        return bLength - aLength;\n      }\n    });\n  }\n\n  /**\r\n   * Return unprefixed version of property\r\n   */\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop));\n    if (value === 'flex-direction') {\n      value = 'flex-flow';\n    }\n    return value;\n  }\n\n  /**\r\n   * Return values, which must be prefixed in selected property\r\n   */\n  values(type, prop) {\n    let data = this[type];\n    let global = data['*'] && data['*'].values;\n    let values = data[prop] && data[prop].values;\n    if (global && values) {\n      return utils.uniq(global.concat(values));\n    } else {\n      return global || values || [];\n    }\n  }\n}\nmodule.exports = Prefixes;","map":{"version":3,"names":["vendor","require","Declaration","Resolution","Transition","Processor","Supports","Browsers","Selector","AtRule","Value","utils","hackFullscreen","hackPlaceholder","hackPlaceholderShown","hackFileSelectorButton","hackFlex","hackOrder","hackFilter","hackGridEnd","hackAnimation","hackFlexFlow","hackFlexGrow","hackFlexWrap","hackGridArea","hackPlaceSelf","hackGridStart","hackAlignSelf","hackAppearance","hackFlexBasis","hackMaskBorder","hackMaskComposite","hackAlignItems","hackUserSelect","hackFlexShrink","hackBreakProps","hackWritingMode","hackBorderImage","hackAlignContent","hackBorderRadius","hackBlockLogical","hackGridTemplate","hackInlineLogical","hackGridRowAlign","hackTransformDecl","hackFlexDirection","hackImageRendering","hackBackdropFilter","hackBackgroundClip","hackTextDecoration","hackJustifyContent","hackBackgroundSize","hackGridRowColumn","hackGridRowsColumns","hackGridColumnAlign","hackPrintColorAdjust","hackOverscrollBehavior","hackGridTemplateAreas","hackTextEmphasisPosition","hackTextDecorationSkipInk","hackGradient","hackIntrinsic","hackPixelated","hackImageSet","hackCrossFade","hackDisplayFlex","hackDisplayGrid","hackFilterValue","hackAutofill","hack","declsCache","Map","Prefixes","constructor","data","browsers","options","add","remove","preprocess","select","transition","processor","cleaner","cleanerCache","selected","length","empty","decl","prop","has","set","load","get","group","rule","parent","index","nodes","unprefixed","checker","step","callback","other","type","withPrefix","value","down","up","normalize","prefixed","prefix","name","prefixes","selector","selectors","push","props","values","old","slice","p","olds","a","includes","list","map","i","params","split","browser","note","notes","filter","uniq","isSelected","sort","flexbox","all","mistakes","concat","b","aLength","removeNote","bLength","global","module","exports"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/autoprefixer/lib/prefixes.js"],"sourcesContent":["let vendor = require('./vendor')\r\nlet Declaration = require('./declaration')\r\nlet Resolution = require('./resolution')\r\nlet Transition = require('./transition')\r\nlet Processor = require('./processor')\r\nlet Supports = require('./supports')\r\nlet Browsers = require('./browsers')\r\nlet Selector = require('./selector')\r\nlet AtRule = require('./at-rule')\r\nlet Value = require('./value')\r\nlet utils = require('./utils')\r\nlet hackFullscreen = require('./hacks/fullscreen')\r\nlet hackPlaceholder = require('./hacks/placeholder')\r\nlet hackPlaceholderShown = require('./hacks/placeholder-shown')\r\nlet hackFileSelectorButton = require('./hacks/file-selector-button')\r\nlet hackFlex = require('./hacks/flex')\r\nlet hackOrder = require('./hacks/order')\r\nlet hackFilter = require('./hacks/filter')\r\nlet hackGridEnd = require('./hacks/grid-end')\r\nlet hackAnimation = require('./hacks/animation')\r\nlet hackFlexFlow = require('./hacks/flex-flow')\r\nlet hackFlexGrow = require('./hacks/flex-grow')\r\nlet hackFlexWrap = require('./hacks/flex-wrap')\r\nlet hackGridArea = require('./hacks/grid-area')\r\nlet hackPlaceSelf = require('./hacks/place-self')\r\nlet hackGridStart = require('./hacks/grid-start')\r\nlet hackAlignSelf = require('./hacks/align-self')\r\nlet hackAppearance = require('./hacks/appearance')\r\nlet hackFlexBasis = require('./hacks/flex-basis')\r\nlet hackMaskBorder = require('./hacks/mask-border')\r\nlet hackMaskComposite = require('./hacks/mask-composite')\r\nlet hackAlignItems = require('./hacks/align-items')\r\nlet hackUserSelect = require('./hacks/user-select')\r\nlet hackFlexShrink = require('./hacks/flex-shrink')\r\nlet hackBreakProps = require('./hacks/break-props')\r\nlet hackWritingMode = require('./hacks/writing-mode')\r\nlet hackBorderImage = require('./hacks/border-image')\r\nlet hackAlignContent = require('./hacks/align-content')\r\nlet hackBorderRadius = require('./hacks/border-radius')\r\nlet hackBlockLogical = require('./hacks/block-logical')\r\nlet hackGridTemplate = require('./hacks/grid-template')\r\nlet hackInlineLogical = require('./hacks/inline-logical')\r\nlet hackGridRowAlign = require('./hacks/grid-row-align')\r\nlet hackTransformDecl = require('./hacks/transform-decl')\r\nlet hackFlexDirection = require('./hacks/flex-direction')\r\nlet hackImageRendering = require('./hacks/image-rendering')\r\nlet hackBackdropFilter = require('./hacks/backdrop-filter')\r\nlet hackBackgroundClip = require('./hacks/background-clip')\r\nlet hackTextDecoration = require('./hacks/text-decoration')\r\nlet hackJustifyContent = require('./hacks/justify-content')\r\nlet hackBackgroundSize = require('./hacks/background-size')\r\nlet hackGridRowColumn = require('./hacks/grid-row-column')\r\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns')\r\nlet hackGridColumnAlign = require('./hacks/grid-column-align')\r\nlet hackPrintColorAdjust = require('./hacks/print-color-adjust')\r\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior')\r\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas')\r\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position')\r\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink')\r\nlet hackGradient = require('./hacks/gradient')\r\nlet hackIntrinsic = require('./hacks/intrinsic')\r\nlet hackPixelated = require('./hacks/pixelated')\r\nlet hackImageSet = require('./hacks/image-set')\r\nlet hackCrossFade = require('./hacks/cross-fade')\r\nlet hackDisplayFlex = require('./hacks/display-flex')\r\nlet hackDisplayGrid = require('./hacks/display-grid')\r\nlet hackFilterValue = require('./hacks/filter-value')\r\nlet hackAutofill = require('./hacks/autofill')\r\n\r\nSelector.hack(hackAutofill)\r\nSelector.hack(hackFullscreen)\r\nSelector.hack(hackPlaceholder)\r\nSelector.hack(hackPlaceholderShown)\r\nSelector.hack(hackFileSelectorButton)\r\nDeclaration.hack(hackFlex)\r\nDeclaration.hack(hackOrder)\r\nDeclaration.hack(hackFilter)\r\nDeclaration.hack(hackGridEnd)\r\nDeclaration.hack(hackAnimation)\r\nDeclaration.hack(hackFlexFlow)\r\nDeclaration.hack(hackFlexGrow)\r\nDeclaration.hack(hackFlexWrap)\r\nDeclaration.hack(hackGridArea)\r\nDeclaration.hack(hackPlaceSelf)\r\nDeclaration.hack(hackGridStart)\r\nDeclaration.hack(hackAlignSelf)\r\nDeclaration.hack(hackAppearance)\r\nDeclaration.hack(hackFlexBasis)\r\nDeclaration.hack(hackMaskBorder)\r\nDeclaration.hack(hackMaskComposite)\r\nDeclaration.hack(hackAlignItems)\r\nDeclaration.hack(hackUserSelect)\r\nDeclaration.hack(hackFlexShrink)\r\nDeclaration.hack(hackBreakProps)\r\nDeclaration.hack(hackWritingMode)\r\nDeclaration.hack(hackBorderImage)\r\nDeclaration.hack(hackAlignContent)\r\nDeclaration.hack(hackBorderRadius)\r\nDeclaration.hack(hackBlockLogical)\r\nDeclaration.hack(hackGridTemplate)\r\nDeclaration.hack(hackInlineLogical)\r\nDeclaration.hack(hackGridRowAlign)\r\nDeclaration.hack(hackTransformDecl)\r\nDeclaration.hack(hackFlexDirection)\r\nDeclaration.hack(hackImageRendering)\r\nDeclaration.hack(hackBackdropFilter)\r\nDeclaration.hack(hackBackgroundClip)\r\nDeclaration.hack(hackTextDecoration)\r\nDeclaration.hack(hackJustifyContent)\r\nDeclaration.hack(hackBackgroundSize)\r\nDeclaration.hack(hackGridRowColumn)\r\nDeclaration.hack(hackGridRowsColumns)\r\nDeclaration.hack(hackGridColumnAlign)\r\nDeclaration.hack(hackOverscrollBehavior)\r\nDeclaration.hack(hackGridTemplateAreas)\r\nDeclaration.hack(hackPrintColorAdjust)\r\nDeclaration.hack(hackTextEmphasisPosition)\r\nDeclaration.hack(hackTextDecorationSkipInk)\r\nValue.hack(hackGradient)\r\nValue.hack(hackIntrinsic)\r\nValue.hack(hackPixelated)\r\nValue.hack(hackImageSet)\r\nValue.hack(hackCrossFade)\r\nValue.hack(hackDisplayFlex)\r\nValue.hack(hackDisplayGrid)\r\nValue.hack(hackFilterValue)\r\n\r\nlet declsCache = new Map()\r\n\r\nclass Prefixes {\r\n  constructor(data, browsers, options = {}) {\r\n    this.data = data\r\n    this.browsers = browsers\r\n    this.options = options\r\n    ;[this.add, this.remove] = this.preprocess(this.select(this.data))\r\n    this.transition = new Transition(this)\r\n    this.processor = new Processor(this)\r\n  }\r\n\r\n  /**\r\n   * Return clone instance to remove all prefixes\r\n   */\r\n  cleaner() {\r\n    if (this.cleanerCache) {\r\n      return this.cleanerCache\r\n    }\r\n\r\n    if (this.browsers.selected.length) {\r\n      let empty = new Browsers(this.browsers.data, [])\r\n      this.cleanerCache = new Prefixes(this.data, empty, this.options)\r\n    } else {\r\n      return this\r\n    }\r\n\r\n    return this.cleanerCache\r\n  }\r\n\r\n  /**\r\n   * Declaration loader with caching\r\n   */\r\n  decl(prop) {\r\n    if (!declsCache.has(prop)) {\r\n      declsCache.set(prop, Declaration.load(prop))\r\n    }\r\n\r\n    return declsCache.get(prop)\r\n  }\r\n\r\n  /**\r\n   * Group declaration by unprefixed property to check them\r\n   */\r\n  group(decl) {\r\n    let rule = decl.parent\r\n    let index = rule.index(decl)\r\n    let { length } = rule.nodes\r\n    let unprefixed = this.unprefixed(decl.prop)\r\n\r\n    let checker = (step, callback) => {\r\n      index += step\r\n      while (index >= 0 && index < length) {\r\n        let other = rule.nodes[index]\r\n        if (other.type === 'decl') {\r\n          if (step === -1 && other.prop === unprefixed) {\r\n            if (!Browsers.withPrefix(other.value)) {\r\n              break\r\n            }\r\n          }\r\n\r\n          if (this.unprefixed(other.prop) !== unprefixed) {\r\n            break\r\n          } else if (callback(other) === true) {\r\n            return true\r\n          }\r\n\r\n          if (step === +1 && other.prop === unprefixed) {\r\n            if (!Browsers.withPrefix(other.value)) {\r\n              break\r\n            }\r\n          }\r\n        }\r\n\r\n        index += step\r\n      }\r\n      return false\r\n    }\r\n\r\n    return {\r\n      down(callback) {\r\n        return checker(+1, callback)\r\n      },\r\n      up(callback) {\r\n        return checker(-1, callback)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Normalize prefix for remover\r\n   */\r\n  normalize(prop) {\r\n    return this.decl(prop).normalize(prop)\r\n  }\r\n\r\n  /**\r\n   * Return prefixed version of property\r\n   */\r\n  prefixed(prop, prefix) {\r\n    prop = vendor.unprefixed(prop)\r\n    return this.decl(prop).prefixed(prop, prefix)\r\n  }\r\n\r\n  /**\r\n   * Cache prefixes data to fast CSS processing\r\n   */\r\n  preprocess(selected) {\r\n    let add = {\r\n      '@supports': new Supports(Prefixes, this),\r\n      'selectors': []\r\n    }\r\n    for (let name in selected.add) {\r\n      let prefixes = selected.add[name]\r\n      if (name === '@keyframes' || name === '@viewport') {\r\n        add[name] = new AtRule(name, prefixes, this)\r\n      } else if (name === '@resolution') {\r\n        add[name] = new Resolution(name, prefixes, this)\r\n      } else if (this.data[name].selector) {\r\n        add.selectors.push(Selector.load(name, prefixes, this))\r\n      } else {\r\n        let props = this.data[name].props\r\n\r\n        if (props) {\r\n          let value = Value.load(name, prefixes, this)\r\n          for (let prop of props) {\r\n            if (!add[prop]) {\r\n              add[prop] = { values: [] }\r\n            }\r\n            add[prop].values.push(value)\r\n          }\r\n        } else {\r\n          let values = (add[name] && add[name].values) || []\r\n          add[name] = Declaration.load(name, prefixes, this)\r\n          add[name].values = values\r\n        }\r\n      }\r\n    }\r\n\r\n    let remove = { selectors: [] }\r\n    for (let name in selected.remove) {\r\n      let prefixes = selected.remove[name]\r\n      if (this.data[name].selector) {\r\n        let selector = Selector.load(name, prefixes)\r\n        for (let prefix of prefixes) {\r\n          remove.selectors.push(selector.old(prefix))\r\n        }\r\n      } else if (name === '@keyframes' || name === '@viewport') {\r\n        for (let prefix of prefixes) {\r\n          let prefixed = `@${prefix}${name.slice(1)}`\r\n          remove[prefixed] = { remove: true }\r\n        }\r\n      } else if (name === '@resolution') {\r\n        remove[name] = new Resolution(name, prefixes, this)\r\n      } else {\r\n        let props = this.data[name].props\r\n        if (props) {\r\n          let value = Value.load(name, [], this)\r\n          for (let prefix of prefixes) {\r\n            let old = value.old(prefix)\r\n            if (old) {\r\n              for (let prop of props) {\r\n                if (!remove[prop]) {\r\n                  remove[prop] = {}\r\n                }\r\n                if (!remove[prop].values) {\r\n                  remove[prop].values = []\r\n                }\r\n                remove[prop].values.push(old)\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          for (let p of prefixes) {\r\n            let olds = this.decl(name).old(name, p)\r\n            if (name === 'align-self') {\r\n              let a = add[name] && add[name].prefixes\r\n              if (a) {\r\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\r\n                  continue\r\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\r\n                  continue\r\n                }\r\n              }\r\n            }\r\n            for (let prefixed of olds) {\r\n              if (!remove[prefixed]) {\r\n                remove[prefixed] = {}\r\n              }\r\n              remove[prefixed].remove = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [add, remove]\r\n  }\r\n\r\n  /**\r\n   * Select prefixes from data, which is necessary for selected browsers\r\n   */\r\n  select(list) {\r\n    let selected = { add: {}, remove: {} }\r\n\r\n    for (let name in list) {\r\n      let data = list[name]\r\n      let add = data.browsers.map(i => {\r\n        let params = i.split(' ')\r\n        return {\r\n          browser: `${params[0]} ${params[1]}`,\r\n          note: params[2]\r\n        }\r\n      })\r\n\r\n      let notes = add\r\n        .filter(i => i.note)\r\n        .map(i => `${this.browsers.prefix(i.browser)} ${i.note}`)\r\n      notes = utils.uniq(notes)\r\n\r\n      add = add\r\n        .filter(i => this.browsers.isSelected(i.browser))\r\n        .map(i => {\r\n          let prefix = this.browsers.prefix(i.browser)\r\n          if (i.note) {\r\n            return `${prefix} ${i.note}`\r\n          } else {\r\n            return prefix\r\n          }\r\n        })\r\n      add = this.sort(utils.uniq(add))\r\n\r\n      if (this.options.flexbox === 'no-2009') {\r\n        add = add.filter(i => !i.includes('2009'))\r\n      }\r\n\r\n      let all = data.browsers.map(i => this.browsers.prefix(i))\r\n      if (data.mistakes) {\r\n        all = all.concat(data.mistakes)\r\n      }\r\n      all = all.concat(notes)\r\n      all = utils.uniq(all)\r\n\r\n      if (add.length) {\r\n        selected.add[name] = add\r\n        if (add.length < all.length) {\r\n          selected.remove[name] = all.filter(i => !add.includes(i))\r\n        }\r\n      } else {\r\n        selected.remove[name] = all\r\n      }\r\n    }\r\n\r\n    return selected\r\n  }\r\n\r\n  /**\r\n   * Sort vendor prefixes\r\n   */\r\n  sort(prefixes) {\r\n    return prefixes.sort((a, b) => {\r\n      let aLength = utils.removeNote(a).length\r\n      let bLength = utils.removeNote(b).length\r\n\r\n      if (aLength === bLength) {\r\n        return b.length - a.length\r\n      } else {\r\n        return bLength - aLength\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Return unprefixed version of property\r\n   */\r\n  unprefixed(prop) {\r\n    let value = this.normalize(vendor.unprefixed(prop))\r\n    if (value === 'flex-direction') {\r\n      value = 'flex-flow'\r\n    }\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Return values, which must be prefixed in selected property\r\n   */\r\n  values(type, prop) {\r\n    let data = this[type]\r\n\r\n    let global = data['*'] && data['*'].values\r\n    let values = data[prop] && data[prop].values\r\n\r\n    if (global && values) {\r\n      return utils.uniq(global.concat(values))\r\n    } else {\r\n      return global || values || []\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Prefixes\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}