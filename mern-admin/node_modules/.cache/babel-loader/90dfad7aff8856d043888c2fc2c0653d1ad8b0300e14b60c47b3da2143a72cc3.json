{"ast":null,"code":"import { Base } from './Base.js';\nimport { Number as NumberT } from './Number.js';\nimport * as utils from './utils.js';\nclass StringT extends Base {\n  constructor(length, encoding = 'ascii') {\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n  decode(stream, parent) {\n    let length, pos;\n    let {\n      encoding\n    } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n    let width = encodingWidth(encoding);\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({\n        buffer,\n        length,\n        pos\n      } = stream);\n      while (pos < length - width + 1 && (buffer[pos] !== 0x00 || width === 2 && buffer[pos + 1] !== 0x00)) {\n        pos += width;\n      }\n      length = pos - stream.pos;\n    }\n    const string = stream.readString(length, encoding);\n    if (this.length == null && stream.pos < stream.length) {\n      stream.pos += width;\n    }\n    return string;\n  }\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (val === undefined || val === null) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n    let {\n      encoding\n    } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n    let size = byteLength(val, encoding);\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n    if (this.length == null) {\n      size += encodingWidth(encoding);\n    }\n    return size;\n  }\n  encode(stream, val, parent) {\n    let {\n      encoding\n    } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n    stream.writeString(val, encoding);\n    if (this.length == null) {\n      return encodingWidth(encoding) == 2 ? stream.writeUInt16LE(0x0000) : stream.writeUInt8(0x00);\n    }\n  }\n}\nfunction encodingWidth(encoding) {\n  switch (encoding) {\n    case 'ascii':\n    case 'utf8':\n      // utf8 is a byte-based encoding for zero-term string\n      return 1;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n    case 'utf8':\n      let len = 0;\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n      return len;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\nexport { StringT as String };","map":{"version":3,"names":["Base","Number","NumberT","utils","StringT","constructor","length","encoding","decode","stream","parent","pos","call","width","encodingWidth","resolveLength","buffer","string","readString","size","val","undefined","byteLength","encode","writeString","writeUInt16LE","writeUInt8","Error","len","i","c","charCodeAt","c2","String"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/restructure/src/String.js"],"sourcesContent":["import {Base} from './Base.js';\r\nimport {Number as NumberT} from './Number.js';\r\nimport * as utils from './utils.js';\r\n\r\nclass StringT extends Base {\r\n  constructor(length, encoding = 'ascii') {\r\n    super();\r\n    this.length = length;\r\n    this.encoding = encoding;\r\n  }\r\n\r\n  decode(stream, parent) {\r\n    let length, pos;\r\n\r\n    let { encoding } = this;\r\n    if (typeof encoding === 'function') {\r\n      encoding = encoding.call(parent, parent) || 'ascii';\r\n    }\r\n    let width = encodingWidth(encoding);\r\n\r\n    if (this.length != null) {\r\n      length = utils.resolveLength(this.length, stream, parent);\r\n    } else {\r\n      let buffer;\r\n      ({buffer, length, pos} = stream);\r\n\r\n      while ((pos < length - width + 1) &&\r\n        (buffer[pos] !== 0x00 ||\r\n        (width === 2 && buffer[pos+1] !== 0x00)\r\n        )) {\r\n        pos += width;\r\n      }\r\n\r\n      length = pos - stream.pos;\r\n    }\r\n\r\n\r\n    const string = stream.readString(length, encoding);\r\n\r\n    if ((this.length == null) && (stream.pos < stream.length)) {\r\n      stream.pos+=width;\r\n    }\r\n\r\n    return string;\r\n  }\r\n\r\n  size(val, parent) {\r\n    // Use the defined value if no value was given\r\n    if (val === undefined || val === null) {\r\n      return utils.resolveLength(this.length, null, parent);\r\n    }\r\n\r\n    let { encoding } = this;\r\n    if (typeof encoding === 'function') {\r\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\r\n    }\r\n\r\n    if (encoding === 'utf16be') {\r\n      encoding = 'utf16le';\r\n    }\r\n\r\n    let size = byteLength(val, encoding);\r\n    if (this.length instanceof NumberT) {\r\n      size += this.length.size();\r\n    }\r\n\r\n    if ((this.length == null)) {\r\n      size += encodingWidth(encoding);\r\n    }\r\n\r\n    return size;\r\n  }\r\n\r\n  encode(stream, val, parent) {\r\n    let { encoding } = this;\r\n    if (typeof encoding === 'function') {\r\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\r\n    }\r\n\r\n    if (this.length instanceof NumberT) {\r\n      this.length.encode(stream, byteLength(val, encoding));\r\n    }\r\n\r\n    stream.writeString(val, encoding);\r\n\r\n    if ((this.length == null)) {\r\n      return encodingWidth(encoding) == 2 ?\r\n        stream.writeUInt16LE(0x0000) :\r\n        stream.writeUInt8(0x00);\r\n    }\r\n  }\r\n}\r\n\r\nfunction encodingWidth(encoding) {\r\n  switch(encoding) {\r\n    case 'ascii':\r\n    case 'utf8': // utf8 is a byte-based encoding for zero-term string\r\n      return 1;\r\n    case 'utf16le':\r\n    case 'utf16-le':\r\n    case 'utf16be':\r\n    case 'utf16-be':\r\n    case 'ucs2':\r\n      return 2;\r\n    default:\r\n      throw new Error('Unknown encoding ' + encoding);\r\n  }\r\n}\r\n\r\nfunction byteLength(string, encoding) {\r\n  switch (encoding) {\r\n    case 'ascii':\r\n      return string.length;\r\n    case 'utf8':\r\n      let len = 0;\r\n      for (let i = 0; i < string.length; i++) {\r\n        let c = string.charCodeAt(i);\r\n\r\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\r\n          let c2 = string.charCodeAt(++i);\r\n          if ((c2 & 0xfc00) === 0xdc00) {\r\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\r\n          } else {\r\n            // unmatched surrogate.\r\n            i--;\r\n          }\r\n        }\r\n\r\n        if ((c & 0xffffff80) === 0) {\r\n          len++;\r\n        } else if ((c & 0xfffff800) === 0) {\r\n          len += 2;\r\n        } else if ((c & 0xffff0000) === 0) {\r\n          len += 3;\r\n        } else if ((c & 0xffe00000) === 0) {\r\n          len += 4;\r\n        }\r\n      }\r\n      return len;\r\n    case 'utf16le':\r\n    case 'utf16-le':\r\n    case 'utf16be':\r\n    case 'utf16-be':\r\n    case 'ucs2':\r\n      return string.length * 2;\r\n    default:\r\n      throw new Error('Unknown encoding ' + encoding);\r\n  }\r\n}\r\n\r\nexport {StringT as String};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}