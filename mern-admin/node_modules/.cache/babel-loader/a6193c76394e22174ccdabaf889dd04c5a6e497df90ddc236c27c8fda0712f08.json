{"ast":null,"code":"let Declaration = require('../declaration');\nclass ImageRendering extends Declaration {\n  /**\r\n   * Add hack only for crisp-edges\r\n   */\n  check(decl) {\n    return decl.value === 'pixelated';\n  }\n\n  /**\r\n   * Return property name by spec\r\n   */\n  normalize() {\n    return 'image-rendering';\n  }\n\n  /**\r\n   * Change property name for IE\r\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return '-ms-interpolation-mode';\n    }\n    return super.prefixed(prop, prefix);\n  }\n\n  /**\r\n   * Warn on old value\r\n   */\n  process(node, result) {\n    return super.process(node, result);\n  }\n\n  /**\r\n   * Change property and value for IE\r\n   */\n  set(decl, prefix) {\n    if (prefix !== '-ms-') return super.set(decl, prefix);\n    decl.prop = '-ms-interpolation-mode';\n    decl.value = 'nearest-neighbor';\n    return decl;\n  }\n}\nImageRendering.names = ['image-rendering', 'interpolation-mode'];\nmodule.exports = ImageRendering;","map":{"version":3,"names":["Declaration","require","ImageRendering","check","decl","value","normalize","prefixed","prop","prefix","process","node","result","set","names","module","exports"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/autoprefixer/lib/hacks/image-rendering.js"],"sourcesContent":["let Declaration = require('../declaration')\r\n\r\nclass ImageRendering extends Declaration {\r\n  /**\r\n   * Add hack only for crisp-edges\r\n   */\r\n  check(decl) {\r\n    return decl.value === 'pixelated'\r\n  }\r\n\r\n  /**\r\n   * Return property name by spec\r\n   */\r\n  normalize() {\r\n    return 'image-rendering'\r\n  }\r\n\r\n  /**\r\n   * Change property name for IE\r\n   */\r\n  prefixed(prop, prefix) {\r\n    if (prefix === '-ms-') {\r\n      return '-ms-interpolation-mode'\r\n    }\r\n    return super.prefixed(prop, prefix)\r\n  }\r\n\r\n  /**\r\n   * Warn on old value\r\n   */\r\n  process(node, result) {\r\n    return super.process(node, result)\r\n  }\r\n\r\n  /**\r\n   * Change property and value for IE\r\n   */\r\n  set(decl, prefix) {\r\n    if (prefix !== '-ms-') return super.set(decl, prefix)\r\n    decl.prop = '-ms-interpolation-mode'\r\n    decl.value = 'nearest-neighbor'\r\n    return decl\r\n  }\r\n}\r\n\r\nImageRendering.names = ['image-rendering', 'interpolation-mode']\r\n\r\nmodule.exports = ImageRendering\r\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE3C,MAAMC,cAAc,SAASF,WAAW,CAAC;EACvC;AACF;AACA;EACEG,KAAKA,CAACC,IAAI,EAAE;IACV,OAAOA,IAAI,CAACC,KAAK,KAAK,WAAW;EACnC;;EAEA;AACF;AACA;EACEC,SAASA,CAAA,EAAG;IACV,OAAO,iBAAiB;EAC1B;;EAEA;AACF;AACA;EACEC,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAE;IACrB,IAAIA,MAAM,KAAK,MAAM,EAAE;MACrB,OAAO,wBAAwB;IACjC;IACA,OAAO,KAAK,CAACF,QAAQ,CAACC,IAAI,EAAEC,MAAM,CAAC;EACrC;;EAEA;AACF;AACA;EACEC,OAAOA,CAACC,IAAI,EAAEC,MAAM,EAAE;IACpB,OAAO,KAAK,CAACF,OAAO,CAACC,IAAI,EAAEC,MAAM,CAAC;EACpC;;EAEA;AACF;AACA;EACEC,GAAGA,CAACT,IAAI,EAAEK,MAAM,EAAE;IAChB,IAAIA,MAAM,KAAK,MAAM,EAAE,OAAO,KAAK,CAACI,GAAG,CAACT,IAAI,EAAEK,MAAM,CAAC;IACrDL,IAAI,CAACI,IAAI,GAAG,wBAAwB;IACpCJ,IAAI,CAACC,KAAK,GAAG,kBAAkB;IAC/B,OAAOD,IAAI;EACb;AACF;AAEAF,cAAc,CAACY,KAAK,GAAG,CAAC,iBAAiB,EAAE,oBAAoB,CAAC;AAEhEC,MAAM,CAACC,OAAO,GAAGd,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}