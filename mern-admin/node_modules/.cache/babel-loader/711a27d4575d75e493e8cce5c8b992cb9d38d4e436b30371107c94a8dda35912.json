{"ast":null,"code":"var _jsxFileName = \"D:\\\\SLIIT IT\\\\Year 2 semster 2\\\\ITP\\\\Project\\\\Smart TechHub Management System\\\\New-Gen-\\\\mern-admin\\\\src\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// Import React, useEffect, useState, and useRef\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Sidebar } from \"flowbite-react\";\n\n// NavigationBar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationBar = () => {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-white p-4 text-black\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"flex justify-between\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n// Dashboard component\n_c = NavigationBar;\nconst Dashboard = () => {\n  _s();\n  // State to store the full stock level\n  const [fullStockLevel, setFullStockLevel] = useState(null);\n\n  // Function to fetch full stock level from the database\n  const fetchFullStockLevel = async () => {\n    try {\n      const response = await fetch(\"/api/fullStockLevel\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch full stock level\");\n      }\n      const data = await response.json();\n      console.log(\"Full Stock Level data:\", data); // Log the received data\n      setFullStockLevel(data.fullStockLevel);\n    } catch (error) {\n      console.error(\"Error fetching full stock level:\", error.message);\n    }\n  };\n  useEffect(() => {\n    fetchFullStockLevel(); // Fetch full stock level when the component mounts\n  }, []);\n\n  // Rest of your component code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-10 my-12\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold\",\n        children: [\"Full Stock Level: \", fullStockLevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"TfhSFgP80ebLXpSvhWqE3tx5WUk=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavigationBar\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Chart","Sidebar","jsxDEV","_jsxDEV","NavigationBar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","_s","fullStockLevel","setFullStockLevel","fetchFullStockLevel","response","fetch","ok","Error","data","json","console","log","error","message","_c2","$RefreshReg$"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/src/dashboard/Dashboard.js"],"sourcesContent":["// Import React, useEffect, useState, and useRef\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { Sidebar } from \"flowbite-react\";\r\n\r\n// NavigationBar component\r\nconst NavigationBar = () => {\r\n  return (\r\n    <nav className=\"bg-white p-4 text-black\">\r\n      {/* Navigation items */}\r\n      <ul className=\"flex justify-between\">\r\n        <li>\r\n          <nav />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// Dashboard component\r\nconst Dashboard = () => {\r\n  // State to store the full stock level\r\n  const [fullStockLevel, setFullStockLevel] = useState(null);\r\n\r\n  // Function to fetch full stock level from the database\r\n  const fetchFullStockLevel = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/fullStockLevel\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch full stock level\");\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Full Stock Level data:\", data); // Log the received data\r\n      setFullStockLevel(data.fullStockLevel);\r\n    } catch (error) {\r\n      console.error(\"Error fetching full stock level:\", error.message);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchFullStockLevel(); // Fetch full stock level when the component mounts\r\n  }, []);\r\n\r\n  // Rest of your component code...\r\n\r\n  return (\r\n    <div className=\"py-10 my-12\">\r\n      {/* Include the NavigationBar component */}\r\n      <NavigationBar />\r\n      {/* Display Full Stock Level */}\r\n      <div className=\"flex justify-center items-center mb-4\">\r\n        <h2 className=\"text-2xl font-semibold\">Full Stock Level: {fullStockLevel}</h2>\r\n      </div>\r\n      {/* Dashboard content */}\r\n      {/* Rest of your component code... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,OAAO,QAAQ,gBAAgB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA;IAAKE,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eAEtCH,OAAA;MAAIE,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eAClCH,OAAA;QAAAG,QAAA,eACEH,OAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GAbMP,aAAa;AAcnB,MAAMQ,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMkB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,CAAC;MACnD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MACrD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,IAAI,CAAC,CAAC,CAAC;MAC7CN,iBAAiB,CAACM,IAAI,CAACP,cAAc,CAAC;IACxC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACC,OAAO,CAAC;IAClE;EACF,CAAC;EAGD7B,SAAS,CAAC,MAAM;IACdmB,mBAAmB,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACEb,OAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAE1BH,OAAA,CAACC,aAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEjBP,OAAA;MAAKE,SAAS,EAAC,uCAAuC;MAAAC,QAAA,eACpDH,OAAA;QAAIE,SAAS,EAAC,wBAAwB;QAAAC,QAAA,GAAC,oBAAkB,EAACQ,cAAc;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV,CAAC;AAACG,EAAA,CAtCID,SAAS;AAAAe,GAAA,GAATf,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}