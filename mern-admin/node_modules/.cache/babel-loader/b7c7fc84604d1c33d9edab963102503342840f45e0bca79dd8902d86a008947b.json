{"ast":null,"code":"let Declaration = require('../declaration');\nlet utils = require('./grid-utils');\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes);\n    let values = utils.parse(decl);\n    let [start, span] = utils.translate(values, 0, 1);\n    let hasStartValueSpan = values[0] && values[0].includes('span');\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '');\n    }\n    ;\n    [[decl.prop, start], [\"\".concat(decl.prop, \"-span\"), span]].forEach(_ref => {\n      let [prop, value] = _ref;\n      utils.insertDecl(decl, prop, value);\n    });\n    return undefined;\n  }\n}\nGridRowColumn.names = ['grid-row', 'grid-column'];\nmodule.exports = GridRowColumn;","map":{"version":3,"names":["Declaration","require","utils","GridRowColumn","insert","decl","prefix","prefixes","values","parse","start","span","translate","hasStartValueSpan","includes","join","replace","prop","concat","forEach","_ref","value","insertDecl","undefined","names","module","exports"],"sources":["C:/Users/USER/Desktop/New folder (2)/mern-admin/node_modules/autoprefixer/lib/hacks/grid-row-column.js"],"sourcesContent":["let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n    let [start, span] = utils.translate(values, 0, 1)\n\n    let hasStartValueSpan = values[0] && values[0].includes('span')\n\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '')\n    }\n\n    ;[\n      [decl.prop, start],\n      [`${decl.prop}-span`, span]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    return undefined\n  }\n}\n\nGridRowColumn.names = ['grid-row', 'grid-column']\n\nmodule.exports = GridRowColumn\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAIC,KAAK,GAAGD,OAAO,CAAC,cAAc,CAAC;AAEnC,MAAME,aAAa,SAASH,WAAW,CAAC;EACtC;AACF;AACA;EACEI,MAAMA,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IAC7B,IAAID,MAAM,KAAK,MAAM,EAAE,OAAO,KAAK,CAACF,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IAElE,IAAIC,MAAM,GAAGN,KAAK,CAACO,KAAK,CAACJ,IAAI,CAAC;IAC9B,IAAI,CAACK,KAAK,EAAEC,IAAI,CAAC,GAAGT,KAAK,CAACU,SAAS,CAACJ,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IAEjD,IAAIK,iBAAiB,GAAGL,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,CAACM,QAAQ,CAAC,MAAM,CAAC;IAE/D,IAAID,iBAAiB,EAAE;MACrBF,IAAI,GAAGH,MAAM,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC9C;IAEA;IAAC,CACC,CAACX,IAAI,CAACY,IAAI,EAAEP,KAAK,CAAC,EAClB,IAAAQ,MAAA,CAAIb,IAAI,CAACY,IAAI,YAASN,IAAI,CAAC,CAC5B,CAACQ,OAAO,CAACC,IAAA,IAAmB;MAAA,IAAlB,CAACH,IAAI,EAAEI,KAAK,CAAC,GAAAD,IAAA;MACtBlB,KAAK,CAACoB,UAAU,CAACjB,IAAI,EAAEY,IAAI,EAAEI,KAAK,CAAC;IACrC,CAAC,CAAC;IAEF,OAAOE,SAAS;EAClB;AACF;AAEApB,aAAa,CAACqB,KAAK,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC;AAEjDC,MAAM,CAACC,OAAO,GAAGvB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}