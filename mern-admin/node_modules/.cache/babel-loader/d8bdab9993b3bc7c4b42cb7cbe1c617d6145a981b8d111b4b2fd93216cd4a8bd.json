{"ast":null,"code":"var _jsxFileName = \"D:\\\\SLIIT IT\\\\Year 2 semster 2\\\\ITP\\\\Project\\\\Smart TechHub Management System\\\\New-Gen-\\\\mern-admin\\\\src\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// Inside your Dashboard component\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [fullStockLevel, setFullStockLevel] = useState(null);\n  useEffect(() => {\n    fetchFullStockLevel();\n  }, []);\n  const fetchFullStockLevel = async () => {\n    try {\n      const response = await fetch(\"/api/fullStockLevel\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch full stock level\");\n      }\n      const data = await response.json();\n      setFullStockLevel(data.fullStockLevel);\n    } catch (error) {\n      console.error(\"Error fetching full stock level:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Full Stock Level: \", fullStockLevel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"TfhSFgP80ebLXpSvhWqE3tx5WUk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","fullStockLevel","setFullStockLevel","fetchFullStockLevel","response","fetch","ok","Error","data","json","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/src/dashboard/Dashboard.js"],"sourcesContent":["// Inside your Dashboard component\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [fullStockLevel, setFullStockLevel] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchFullStockLevel();\r\n  }, []);\r\n\r\n  const fetchFullStockLevel = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/fullStockLevel\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch full stock level\");\r\n      }\r\n      const data = await response.json();\r\n      setFullStockLevel(data.fullStockLevel);\r\n    } catch (error) {\r\n      console.error(\"Error fetching full stock level:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Render other components */}\r\n      <p>Full Stock Level: {fullStockLevel}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACdQ,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,CAAC;MACnD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MACrD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,iBAAiB,CAACM,IAAI,CAACP,cAAc,CAAC;IACxC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAClE;EACF,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,eAEEf,OAAA;MAAAe,QAAA,GAAG,oBAAkB,EAACZ,cAAc;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA1BID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}