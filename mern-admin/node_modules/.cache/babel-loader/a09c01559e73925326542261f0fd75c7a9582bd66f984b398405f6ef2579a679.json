{"ast":null,"code":"import { Base } from './Base.js';\nimport { Number as NumberT } from './Number.js';\nimport * as utils from './utils.js';\nclass ArrayT extends Base {\n  constructor(type, length, lengthType = 'count') {\n    super();\n    this.type = type;\n    this.length = length;\n    this.lengthType = lengthType;\n  }\n  decode(stream, parent) {\n    let length;\n    const {\n      pos\n    } = stream;\n    const res = [];\n    let ctx = parent;\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    }\n    if (this.length instanceof NumberT) {\n      // define hidden properties\n      Object.defineProperties(res, {\n        parent: {\n          value: parent\n        },\n        _startOffset: {\n          value: pos\n        },\n        _currentOffset: {\n          value: 0,\n          writable: true\n        },\n        _length: {\n          value: length\n        }\n      });\n      ctx = res;\n    }\n    if (length == null || this.lengthType === 'bytes') {\n      const target = length != null ? stream.pos + length : (parent != null ? parent._length : undefined) ? parent._startOffset + parent._length : stream.length;\n      while (stream.pos < target) {\n        res.push(this.type.decode(stream, ctx));\n      }\n    } else {\n      for (let i = 0, end = length; i < end; i++) {\n        res.push(this.type.decode(stream, ctx));\n      }\n    }\n    return res;\n  }\n  size(array, ctx, includePointers = true) {\n    if (!array) {\n      return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);\n    }\n    let size = 0;\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n      ctx = {\n        parent: ctx,\n        pointerSize: 0\n      };\n    }\n    for (let item of array) {\n      size += this.type.size(item, ctx);\n    }\n    if (ctx && includePointers && this.length instanceof NumberT) {\n      size += ctx.pointerSize;\n    }\n    return size;\n  }\n  encode(stream, array, parent) {\n    let ctx = parent;\n    if (this.length instanceof NumberT) {\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent\n      };\n      ctx.pointerOffset = stream.pos + this.size(array, ctx, false);\n      this.length.encode(stream, array.length);\n    }\n    for (let item of array) {\n      this.type.encode(stream, item, ctx);\n    }\n    if (this.length instanceof NumberT) {\n      let i = 0;\n      while (i < ctx.pointers.length) {\n        const ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    }\n  }\n}\nexport { ArrayT as Array };","map":{"version":3,"names":["Base","Number","NumberT","utils","ArrayT","constructor","type","length","lengthType","decode","stream","parent","pos","res","ctx","resolveLength","Object","defineProperties","value","_startOffset","_currentOffset","writable","_length","target","undefined","push","i","end","size","array","includePointers","pointerSize","item","encode","pointers","startOffset","pointerOffset","ptr","val","Array"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/restructure/src/Array.js"],"sourcesContent":["import {Base} from './Base.js';\r\nimport {Number as NumberT} from './Number.js';\r\nimport * as utils from './utils.js';\r\n\r\nclass ArrayT extends Base {\r\n  constructor(type, length, lengthType = 'count') {\r\n    super();\r\n    this.type = type;\r\n    this.length = length;\r\n    this.lengthType = lengthType;\r\n  }\r\n\r\n  decode(stream, parent) {\r\n    let length;\r\n    const { pos } = stream;\r\n\r\n    const res = [];\r\n    let ctx = parent;\r\n\r\n    if (this.length != null) {\r\n      length = utils.resolveLength(this.length, stream, parent);\r\n    }\r\n\r\n    if (this.length instanceof NumberT) {\r\n      // define hidden properties\r\n      Object.defineProperties(res, {\r\n        parent:         { value: parent },\r\n        _startOffset:   { value: pos },\r\n        _currentOffset: { value: 0, writable: true },\r\n        _length:        { value: length }\r\n      });\r\n\r\n      ctx = res;\r\n    }\r\n\r\n    if ((length == null) || (this.lengthType === 'bytes')) {\r\n      const target = (length != null) ?\r\n        stream.pos + length\r\n      : (parent != null ? parent._length : undefined) ?\r\n        parent._startOffset + parent._length\r\n      :\r\n        stream.length;\r\n\r\n      while (stream.pos < target) {\r\n        res.push(this.type.decode(stream, ctx));\r\n      }\r\n\r\n    } else {\r\n      for (let i = 0, end = length; i < end; i++) {\r\n        res.push(this.type.decode(stream, ctx));\r\n      }\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  size(array, ctx, includePointers = true) {\r\n    if (!array) {\r\n      return this.type.size(null, ctx) * utils.resolveLength(this.length, null, ctx);\r\n    }\r\n\r\n    let size = 0;\r\n    if (this.length instanceof NumberT) {\r\n      size += this.length.size();\r\n      ctx = {parent: ctx, pointerSize: 0};\r\n    }\r\n\r\n    for (let item of array) {\r\n      size += this.type.size(item, ctx);\r\n    }\r\n\r\n    if (ctx && includePointers && this.length instanceof NumberT) {\r\n      size += ctx.pointerSize;\r\n    }\r\n    \r\n    return size;\r\n  }\r\n\r\n  encode(stream, array, parent) {\r\n    let ctx = parent;\r\n    if (this.length instanceof NumberT) {\r\n      ctx = {\r\n        pointers: [],\r\n        startOffset: stream.pos,\r\n        parent\r\n      };\r\n\r\n      ctx.pointerOffset = stream.pos + this.size(array, ctx, false);\r\n      this.length.encode(stream, array.length);\r\n    }\r\n\r\n    for (let item of array) {\r\n      this.type.encode(stream, item, ctx);\r\n    }\r\n\r\n    if (this.length instanceof NumberT) {\r\n      let i = 0;\r\n      while (i < ctx.pointers.length) {\r\n        const ptr = ctx.pointers[i++];\r\n        ptr.type.encode(stream, ptr.val, ptr.parent);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport {ArrayT as Array};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}