{"ast":null,"code":"module.exports = absolutize;\n\n/**\r\n * redefine `path` with absolute coordinates\r\n *\r\n * @param {Array} path\r\n * @return {Array}\r\n */\n\nfunction absolutize(path) {\n  var startX = 0;\n  var startY = 0;\n  var x = 0;\n  var y = 0;\n  return path.map(function (seg) {\n    seg = seg.slice();\n    var type = seg[0];\n    var command = type.toUpperCase();\n\n    // is relative\n    if (type != command) {\n      seg[0] = command;\n      switch (type) {\n        case 'a':\n          seg[6] += x;\n          seg[7] += y;\n          break;\n        case 'v':\n          seg[1] += y;\n          break;\n        case 'h':\n          seg[1] += x;\n          break;\n        default:\n          for (var i = 1; i < seg.length;) {\n            seg[i++] += x;\n            seg[i++] += y;\n          }\n      }\n    }\n\n    // update cursor state\n    switch (command) {\n      case 'Z':\n        x = startX;\n        y = startY;\n        break;\n      case 'H':\n        x = seg[1];\n        break;\n      case 'V':\n        y = seg[1];\n        break;\n      case 'M':\n        x = startX = seg[1];\n        y = startY = seg[2];\n        break;\n      default:\n        x = seg[seg.length - 2];\n        y = seg[seg.length - 1];\n    }\n    return seg;\n  });\n}","map":{"version":3,"names":["module","exports","absolutize","path","startX","startY","x","y","map","seg","slice","type","command","toUpperCase","i","length"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/abs-svg-path/index.js"],"sourcesContent":["\r\nmodule.exports = absolutize\r\n\r\n/**\r\n * redefine `path` with absolute coordinates\r\n *\r\n * @param {Array} path\r\n * @return {Array}\r\n */\r\n\r\nfunction absolutize(path){\r\n\tvar startX = 0\r\n\tvar startY = 0\r\n\tvar x = 0\r\n\tvar y = 0\r\n\r\n\treturn path.map(function(seg){\r\n\t\tseg = seg.slice()\r\n\t\tvar type = seg[0]\r\n\t\tvar command = type.toUpperCase()\r\n\r\n\t\t// is relative\r\n\t\tif (type != command) {\r\n\t\t\tseg[0] = command\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'a':\r\n\t\t\t\t\tseg[6] += x\r\n\t\t\t\t\tseg[7] += y\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'v':\r\n\t\t\t\t\tseg[1] += y\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'h':\r\n\t\t\t\t\tseg[1] += x\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tfor (var i = 1; i < seg.length;) {\r\n\t\t\t\t\t\tseg[i++] += x\r\n\t\t\t\t\t\tseg[i++] += y\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// update cursor state\r\n\t\tswitch (command) {\r\n\t\t\tcase 'Z':\r\n\t\t\t\tx = startX\r\n\t\t\t\ty = startY\r\n\t\t\t\tbreak\r\n\t\t\tcase 'H':\r\n\t\t\t\tx = seg[1]\r\n\t\t\t\tbreak\r\n\t\t\tcase 'V':\r\n\t\t\t\ty = seg[1]\r\n\t\t\t\tbreak\r\n\t\t\tcase 'M':\r\n\t\t\t\tx = startX = seg[1]\r\n\t\t\t\ty = startY = seg[2]\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tx = seg[seg.length - 2]\r\n\t\t\t\ty = seg[seg.length - 1]\r\n\t\t}\r\n\r\n\t\treturn seg\r\n\t})\r\n}\r\n"],"mappings":"AACAA,MAAM,CAACC,OAAO,GAAGC,UAAU;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAUA,CAACC,IAAI,EAAC;EACxB,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EAET,OAAOJ,IAAI,CAACK,GAAG,CAAC,UAASC,GAAG,EAAC;IAC5BA,GAAG,GAAGA,GAAG,CAACC,KAAK,CAAC,CAAC;IACjB,IAAIC,IAAI,GAAGF,GAAG,CAAC,CAAC,CAAC;IACjB,IAAIG,OAAO,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;;IAEhC;IACA,IAAIF,IAAI,IAAIC,OAAO,EAAE;MACpBH,GAAG,CAAC,CAAC,CAAC,GAAGG,OAAO;MAChB,QAAQD,IAAI;QACX,KAAK,GAAG;UACPF,GAAG,CAAC,CAAC,CAAC,IAAIH,CAAC;UACXG,GAAG,CAAC,CAAC,CAAC,IAAIF,CAAC;UACX;QACD,KAAK,GAAG;UACPE,GAAG,CAAC,CAAC,CAAC,IAAIF,CAAC;UACX;QACD,KAAK,GAAG;UACPE,GAAG,CAAC,CAAC,CAAC,IAAIH,CAAC;UACX;QACD;UACC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACM,MAAM,GAAG;YAChCN,GAAG,CAACK,CAAC,EAAE,CAAC,IAAIR,CAAC;YACbG,GAAG,CAACK,CAAC,EAAE,CAAC,IAAIP,CAAC;UACd;MACF;IACD;;IAEA;IACA,QAAQK,OAAO;MACd,KAAK,GAAG;QACPN,CAAC,GAAGF,MAAM;QACVG,CAAC,GAAGF,MAAM;QACV;MACD,KAAK,GAAG;QACPC,CAAC,GAAGG,GAAG,CAAC,CAAC,CAAC;QACV;MACD,KAAK,GAAG;QACPF,CAAC,GAAGE,GAAG,CAAC,CAAC,CAAC;QACV;MACD,KAAK,GAAG;QACPH,CAAC,GAAGF,MAAM,GAAGK,GAAG,CAAC,CAAC,CAAC;QACnBF,CAAC,GAAGF,MAAM,GAAGI,GAAG,CAAC,CAAC,CAAC;QACnB;MACD;QACCH,CAAC,GAAGG,GAAG,CAACA,GAAG,CAACM,MAAM,GAAG,CAAC,CAAC;QACvBR,CAAC,GAAGE,GAAG,CAACA,GAAG,CAACM,MAAM,GAAG,CAAC,CAAC;IACzB;IAEA,OAAON,GAAG;EACX,CAAC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}