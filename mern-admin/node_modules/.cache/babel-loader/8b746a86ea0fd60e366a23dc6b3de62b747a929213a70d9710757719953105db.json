{"ast":null,"code":"let Declaration = require('../declaration');\nclass BlockLogical extends Declaration {\n  /**\r\n   * Return property name by spec\r\n   */\n  normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start');\n    }\n    return prop.replace('-after', '-block-end');\n  }\n\n  /**\r\n   * Use old syntax for -moz- and -webkit-\r\n   */\n  prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before');\n    }\n    return prefix + prop.replace('-block-end', '-after');\n  }\n}\nBlockLogical.names = ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after'];\nmodule.exports = BlockLogical;","map":{"version":3,"names":["Declaration","require","BlockLogical","normalize","prop","includes","replace","prefixed","prefix","names","module","exports"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/autoprefixer/lib/hacks/block-logical.js"],"sourcesContent":["let Declaration = require('../declaration')\r\n\r\nclass BlockLogical extends Declaration {\r\n  /**\r\n   * Return property name by spec\r\n   */\r\n  normalize(prop) {\r\n    if (prop.includes('-before')) {\r\n      return prop.replace('-before', '-block-start')\r\n    }\r\n    return prop.replace('-after', '-block-end')\r\n  }\r\n\r\n  /**\r\n   * Use old syntax for -moz- and -webkit-\r\n   */\r\n  prefixed(prop, prefix) {\r\n    if (prop.includes('-start')) {\r\n      return prefix + prop.replace('-block-start', '-before')\r\n    }\r\n    return prefix + prop.replace('-block-end', '-after')\r\n  }\r\n}\r\n\r\nBlockLogical.names = [\r\n  'border-block-start',\r\n  'border-block-end',\r\n  'margin-block-start',\r\n  'margin-block-end',\r\n  'padding-block-start',\r\n  'padding-block-end',\r\n  'border-before',\r\n  'border-after',\r\n  'margin-before',\r\n  'margin-after',\r\n  'padding-before',\r\n  'padding-after'\r\n]\r\n\r\nmodule.exports = BlockLogical\r\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE3C,MAAMC,YAAY,SAASF,WAAW,CAAC;EACrC;AACF;AACA;EACEG,SAASA,CAACC,IAAI,EAAE;IACd,IAAIA,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC5B,OAAOD,IAAI,CAACE,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC;IAChD;IACA,OAAOF,IAAI,CAACE,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC;EAC7C;;EAEA;AACF;AACA;EACEC,QAAQA,CAACH,IAAI,EAAEI,MAAM,EAAE;IACrB,IAAIJ,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC3B,OAAOG,MAAM,GAAGJ,IAAI,CAACE,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC;IACzD;IACA,OAAOE,MAAM,GAAGJ,IAAI,CAACE,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC;EACtD;AACF;AAEAJ,YAAY,CAACO,KAAK,GAAG,CACnB,oBAAoB,EACpB,kBAAkB,EAClB,oBAAoB,EACpB,kBAAkB,EAClB,qBAAqB,EACrB,mBAAmB,EACnB,eAAe,EACf,cAAc,EACd,eAAe,EACf,cAAc,EACd,gBAAgB,EAChB,eAAe,CAChB;AAEDC,MAAM,CAACC,OAAO,GAAGT,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}