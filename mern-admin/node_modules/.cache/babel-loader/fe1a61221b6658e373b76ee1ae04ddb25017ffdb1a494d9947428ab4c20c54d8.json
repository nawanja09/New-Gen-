{"ast":null,"code":"var _jsxFileName = \"D:\\\\SLIIT IT\\\\Year 2 semster 2\\\\ITP\\\\Project\\\\Smart TechHub Management System\\\\New-Gen-\\\\mern-admin\\\\src\\\\dashboard\\\\UploadAccessories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Label, TextInput, Textarea } from \"flowbite-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadAccessories = () => {\n  _s();\n  const category = [\"Computer Accessories\", \"Laptop Accessories\", \"CCTV Accessories\"];\n  const [selectedCategory, setSelectedCategory] = useState(category[0]);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [outOfStockCount, setOutOfStockCount] = useState(0);\n  const [totalValue, setTotalValue] = useState(0);\n  useEffect(() => {\n    // Fetch initial values from the backend when the component mounts\n    fetchInitialValues();\n  }, []);\n  const fetchInitialValues = () => {\n    fetch(\"http://localhost:8000/initial-values\") // Replace with your backend endpoint\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch initial values.\");\n      }\n      return res.json();\n    }).then(data => {\n      // Set initial values fetched from the database\n      setTotalQuantity(data.totalQuantity);\n      setOutOfStockCount(data.outOfStockCount);\n      setTotalValue(data.totalValue);\n    }).catch(error => {\n      console.error(\"Error fetching initial values:\", error);\n    });\n  };\n\n  // Rest of your component code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-10 my-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totalQuantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Out of Stock Count: \", outOfStockCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Value: \", totalValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadAccessories, \"1tv6fSsFHUv+3yIT407GDBz/L+Y=\");\n_c = UploadAccessories;\nexport default UploadAccessories;\nvar _c;\n$RefreshReg$(_c, \"UploadAccessories\");","map":{"version":3,"names":["React","useState","useEffect","Button","Label","TextInput","Textarea","jsxDEV","_jsxDEV","UploadAccessories","_s","category","selectedCategory","setSelectedCategory","totalQuantity","setTotalQuantity","outOfStockCount","setOutOfStockCount","totalValue","setTotalValue","fetchInitialValues","fetch","then","res","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/src/dashboard/UploadAccessories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Label, TextInput, Textarea } from \"flowbite-react\";\r\n\r\nconst UploadAccessories = () => {\r\n  const category = [\r\n    \"Computer Accessories\",\r\n    \"Laptop Accessories\",\r\n    \"CCTV Accessories\",\r\n  ];\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState(category[0]);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [outOfStockCount, setOutOfStockCount] = useState(0);\r\n  const [totalValue, setTotalValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch initial values from the backend when the component mounts\r\n    fetchInitialValues();\r\n  }, []);\r\n\r\n  const fetchInitialValues = () => {\r\n    fetch(\"http://localhost:8000/initial-values\") // Replace with your backend endpoint\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Failed to fetch initial values.\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // Set initial values fetched from the database\r\n        setTotalQuantity(data.totalQuantity);\r\n        setOutOfStockCount(data.outOfStockCount);\r\n        setTotalValue(data.totalValue);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching initial values:\", error);\r\n      });\r\n  };\r\n\r\n  // Rest of your component code...\r\n\r\n  return (\r\n    <div className=\"py-10 my-12\">\r\n      {/* Your component JSX */}\r\n      <div>\r\n        <p>Total Quantity: {totalQuantity}</p>\r\n        <p>Out of Stock Count: {outOfStockCount}</p>\r\n        <p>Total Value: {totalValue}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadAccessories;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAG,CACf,sBAAsB,EACtB,oBAAoB,EACpB,kBAAkB,CACnB;EAED,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrE,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACAkB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,kBAAkB,GAAGA,CAAA,KAAM;IAC/BC,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAAA,CAC3CC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACpD;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACAZ,gBAAgB,CAACY,IAAI,CAACb,aAAa,CAAC;MACpCG,kBAAkB,CAACU,IAAI,CAACX,eAAe,CAAC;MACxCG,aAAa,CAACQ,IAAI,CAACT,UAAU,CAAC;IAChC,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACN,CAAC;;EAED;;EAEA,oBACErB,OAAA;IAAKuB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAE1BxB,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,GAAG,kBAAgB,EAAClB,aAAa;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC5B,OAAA;QAAAwB,QAAA,GAAG,sBAAoB,EAAChB,eAAe;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5C5B,OAAA;QAAAwB,QAAA,GAAG,eAAa,EAACd,UAAU;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAhDID,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAkDvB,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}