{"ast":null,"code":"let Declaration = require('../declaration');\nconst BASIC = ['none', 'underline', 'overline', 'line-through', 'blink', 'inherit', 'initial', 'unset'];\nclass TextDecoration extends Declaration {\n  /**\r\n   * Do not add prefixes for basic values.\r\n   */\n  check(decl) {\n    return decl.value.split(/\\s+/).some(i => !BASIC.includes(i));\n  }\n}\nTextDecoration.names = ['text-decoration'];\nmodule.exports = TextDecoration;","map":{"version":3,"names":["Declaration","require","BASIC","TextDecoration","check","decl","value","split","some","i","includes","names","module","exports"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/autoprefixer/lib/hacks/text-decoration.js"],"sourcesContent":["let Declaration = require('../declaration')\r\n\r\nconst BASIC = [\r\n  'none',\r\n  'underline',\r\n  'overline',\r\n  'line-through',\r\n  'blink',\r\n  'inherit',\r\n  'initial',\r\n  'unset'\r\n]\r\n\r\nclass TextDecoration extends Declaration {\r\n  /**\r\n   * Do not add prefixes for basic values.\r\n   */\r\n  check(decl) {\r\n    return decl.value.split(/\\s+/).some(i => !BASIC.includes(i))\r\n  }\r\n}\r\n\r\nTextDecoration.names = ['text-decoration']\r\n\r\nmodule.exports = TextDecoration\r\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE3C,MAAMC,KAAK,GAAG,CACZ,MAAM,EACN,WAAW,EACX,UAAU,EACV,cAAc,EACd,OAAO,EACP,SAAS,EACT,SAAS,EACT,OAAO,CACR;AAED,MAAMC,cAAc,SAASH,WAAW,CAAC;EACvC;AACF;AACA;EACEI,KAAKA,CAACC,IAAI,EAAE;IACV,OAAOA,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,IAAI,CAACC,CAAC,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACD,CAAC,CAAC,CAAC;EAC9D;AACF;AAEAN,cAAc,CAACQ,KAAK,GAAG,CAAC,iBAAiB,CAAC;AAE1CC,MAAM,CAACC,OAAO,GAAGV,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}