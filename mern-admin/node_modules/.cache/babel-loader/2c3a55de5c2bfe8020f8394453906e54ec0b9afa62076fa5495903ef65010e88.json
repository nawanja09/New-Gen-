{"ast":null,"code":"let Declaration = require('../declaration');\nlet utils = require('./grid-utils');\nclass GridRowColumn extends Declaration {\n  /**\r\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\r\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes);\n    let values = utils.parse(decl);\n    let [start, span] = utils.translate(values, 0, 1);\n    let hasStartValueSpan = values[0] && values[0].includes('span');\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '');\n    }\n    ;\n    [[decl.prop, start], [`${decl.prop}-span`, span]].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value);\n    });\n    return undefined;\n  }\n}\nGridRowColumn.names = ['grid-row', 'grid-column'];\nmodule.exports = GridRowColumn;","map":{"version":3,"names":["Declaration","require","utils","GridRowColumn","insert","decl","prefix","prefixes","values","parse","start","span","translate","hasStartValueSpan","includes","join","replace","prop","forEach","value","insertDecl","undefined","names","module","exports"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/autoprefixer/lib/hacks/grid-row-column.js"],"sourcesContent":["let Declaration = require('../declaration')\r\nlet utils = require('./grid-utils')\r\n\r\nclass GridRowColumn extends Declaration {\r\n  /**\r\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\r\n   */\r\n  insert(decl, prefix, prefixes) {\r\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\r\n\r\n    let values = utils.parse(decl)\r\n    let [start, span] = utils.translate(values, 0, 1)\r\n\r\n    let hasStartValueSpan = values[0] && values[0].includes('span')\r\n\r\n    if (hasStartValueSpan) {\r\n      span = values[0].join('').replace(/\\D/g, '')\r\n    }\r\n\r\n    ;[\r\n      [decl.prop, start],\r\n      [`${decl.prop}-span`, span]\r\n    ].forEach(([prop, value]) => {\r\n      utils.insertDecl(decl, prop, value)\r\n    })\r\n\r\n    return undefined\r\n  }\r\n}\r\n\r\nGridRowColumn.names = ['grid-row', 'grid-column']\r\n\r\nmodule.exports = GridRowColumn\r\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAIC,KAAK,GAAGD,OAAO,CAAC,cAAc,CAAC;AAEnC,MAAME,aAAa,SAASH,WAAW,CAAC;EACtC;AACF;AACA;EACEI,MAAMA,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IAC7B,IAAID,MAAM,KAAK,MAAM,EAAE,OAAO,KAAK,CAACF,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IAElE,IAAIC,MAAM,GAAGN,KAAK,CAACO,KAAK,CAACJ,IAAI,CAAC;IAC9B,IAAI,CAACK,KAAK,EAAEC,IAAI,CAAC,GAAGT,KAAK,CAACU,SAAS,CAACJ,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IAEjD,IAAIK,iBAAiB,GAAGL,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,CAACM,QAAQ,CAAC,MAAM,CAAC;IAE/D,IAAID,iBAAiB,EAAE;MACrBF,IAAI,GAAGH,MAAM,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC9C;IAEA;IAAC,CACC,CAACX,IAAI,CAACY,IAAI,EAAEP,KAAK,CAAC,EAClB,CAAE,GAAEL,IAAI,CAACY,IAAK,OAAM,EAAEN,IAAI,CAAC,CAC5B,CAACO,OAAO,CAAC,CAAC,CAACD,IAAI,EAAEE,KAAK,CAAC,KAAK;MAC3BjB,KAAK,CAACkB,UAAU,CAACf,IAAI,EAAEY,IAAI,EAAEE,KAAK,CAAC;IACrC,CAAC,CAAC;IAEF,OAAOE,SAAS;EAClB;AACF;AAEAlB,aAAa,CAACmB,KAAK,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC;AAEjDC,MAAM,CAACC,OAAO,GAAGrB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}