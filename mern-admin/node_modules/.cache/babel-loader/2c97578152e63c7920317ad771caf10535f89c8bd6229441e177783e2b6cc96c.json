{"ast":null,"code":"var _jsxFileName = \"D:\\\\SLIIT IT\\\\Year 2 semster 2\\\\ITP\\\\Project\\\\Smart TechHub Management System\\\\New-Gen-\\\\mern-admin\\\\src\\\\dashboard\\\\UploadAccessories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Label, TextInput, Textarea } from \"flowbite-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadAccessories = () => {\n  _s();\n  const category = [\"Computer Accessories\", \"Laptop Accessories\", \"CCTV Accessories\"];\n  const [selectedCategory, setSelectedCategory] = useState(category[0]);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [outOfStockCount, setOutOfStockCount] = useState(0);\n  const [totalValue, setTotalValue] = useState(0);\n  useEffect(() => {\n    // Fetch initial values from the backend when the component mounts\n    fetchInitialValues();\n  }, []);\n  const fetchInitialValues = () => {\n    fetch(\"http://localhost:8000/initial-values\") // Replace with your backend endpoint\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch initial values.\");\n      }\n      return res.json();\n    }).then(data => {\n      // Set initial values fetched from the database\n      setTotalQuantity(data.totalQuantity);\n      setOutOfStockCount(data.outOfStockCount);\n      setTotalValue(data.totalValue);\n    }).catch(error => {\n      console.error(\"Error fetching initial values:\", error);\n    });\n  };\n\n  // Rest of your component code...\n\n  // Handle Accessories Submission\n  const handleAccessoriesSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const AccessoriesID = form.AccessoriesID.value;\n    const AccessoriesName = form.AccessoriesName.value;\n    const Category = form.Category.value;\n    const Quantity = parseInt(form.Quantity.value);\n    const Price_per_unit = parseFloat(form.Price_per_unit.value);\n    const Description = form.Description.value;\n    const accessoriesObj = {\n      AccessoriesID,\n      AccessoriesName,\n      Category,\n      Quantity,\n      Price_per_unit,\n      Description\n    };\n\n    // Calculate totalValue\n    const itemTotalValue = Quantity * Price_per_unit;\n    const newTotalValue = totalValue + itemTotalValue;\n    setTotalValue(newTotalValue);\n\n    // Update totalQuantity\n    const newTotalQuantity = totalQuantity + Quantity;\n    setTotalQuantity(newTotalQuantity);\n\n    // Update outOfStockCount\n    const newOutOfStockCount = Quantity === 0 ? outOfStockCount + 1 : outOfStockCount;\n    setOutOfStockCount(newOutOfStockCount);\n\n    // Send data to the database\n    fetch(\"http://localhost:8000/upload-accessories\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(accessoriesObj)\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(\"Failed to upload accessories. Please try again later.\");\n      }\n      return res.json();\n    }).then(data => {\n      alert(\"Accessories Uploaded Successfully\");\n\n      // Reset the form\n      form.reset();\n    }).catch(error => {\n      console.error(\"Error during fetch:\", error);\n      alert(error.message); // Display the error message to the user\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-10 my-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-8 text-3xl font-bold\",\n      children: \"Upload Accessories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAccessoriesSubmit,\n      className: \"flex lg:w-[1180px] flex-col flex-wrap gap-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totalQuantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Out of Stock Count: \", outOfStockCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Value: \", totalValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadAccessories, \"1tv6fSsFHUv+3yIT407GDBz/L+Y=\");\n_c = UploadAccessories;\nexport default UploadAccessories;\nvar _c;\n$RefreshReg$(_c, \"UploadAccessories\");","map":{"version":3,"names":["React","useState","useEffect","Button","Label","TextInput","Textarea","jsxDEV","_jsxDEV","UploadAccessories","_s","category","selectedCategory","setSelectedCategory","totalQuantity","setTotalQuantity","outOfStockCount","setOutOfStockCount","totalValue","setTotalValue","fetchInitialValues","fetch","then","res","ok","Error","json","data","catch","error","console","handleAccessoriesSubmit","event","preventDefault","form","target","AccessoriesID","value","AccessoriesName","Category","Quantity","parseInt","Price_per_unit","parseFloat","Description","accessoriesObj","itemTotalValue","newTotalValue","newTotalQuantity","newOutOfStockCount","method","headers","body","JSON","stringify","alert","reset","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/src/dashboard/UploadAccessories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Label, TextInput, Textarea } from \"flowbite-react\";\r\n\r\nconst UploadAccessories = () => {\r\n  const category = [\r\n    \"Computer Accessories\",\r\n    \"Laptop Accessories\",\r\n    \"CCTV Accessories\",\r\n  ];\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState(category[0]);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [outOfStockCount, setOutOfStockCount] = useState(0);\r\n  const [totalValue, setTotalValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch initial values from the backend when the component mounts\r\n    fetchInitialValues();\r\n  }, []);\r\n\r\n  const fetchInitialValues = () => {\r\n    fetch(\"http://localhost:8000/initial-values\") // Replace with your backend endpoint\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Failed to fetch initial values.\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // Set initial values fetched from the database\r\n        setTotalQuantity(data.totalQuantity);\r\n        setOutOfStockCount(data.outOfStockCount);\r\n        setTotalValue(data.totalValue);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching initial values:\", error);\r\n      });\r\n  };\r\n\r\n  // Rest of your component code...\r\n\r\n  // Handle Accessories Submission\r\n  const handleAccessoriesSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n\r\n    const AccessoriesID = form.AccessoriesID.value;\r\n    const AccessoriesName = form.AccessoriesName.value;\r\n    const Category = form.Category.value;\r\n    const Quantity = parseInt(form.Quantity.value);\r\n    const Price_per_unit = parseFloat(form.Price_per_unit.value);\r\n    const Description = form.Description.value;\r\n\r\n    const accessoriesObj = {\r\n      AccessoriesID,\r\n      AccessoriesName,\r\n      Category,\r\n      Quantity,\r\n      Price_per_unit,\r\n      Description,\r\n    };\r\n\r\n    // Calculate totalValue\r\n    const itemTotalValue = Quantity * Price_per_unit;\r\n    const newTotalValue = totalValue + itemTotalValue;\r\n    setTotalValue(newTotalValue);\r\n\r\n    // Update totalQuantity\r\n    const newTotalQuantity = totalQuantity + Quantity;\r\n    setTotalQuantity(newTotalQuantity);\r\n\r\n    // Update outOfStockCount\r\n    const newOutOfStockCount =\r\n      Quantity === 0 ? outOfStockCount + 1 : outOfStockCount;\r\n    setOutOfStockCount(newOutOfStockCount);\r\n\r\n    // Send data to the database\r\n    fetch(\"http://localhost:8000/upload-accessories\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(accessoriesObj),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\r\n            \"Failed to upload accessories. Please try again later.\"\r\n          );\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        alert(\"Accessories Uploaded Successfully\");\r\n\r\n        // Reset the form\r\n        form.reset();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error during fetch:\", error);\r\n        alert(error.message); // Display the error message to the user\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-10 my-12\">\r\n      <h2 className=\"mb-8 text-3xl font-bold\">Upload Accessories</h2>\r\n      <form\r\n        onSubmit={handleAccessoriesSubmit}\r\n        className=\"flex lg:w-[1180px] flex-col flex-wrap gap-4\"\r\n      >\r\n        {/* Form inputs */}\r\n      </form>\r\n      <div>\r\n        <p>Total Quantity: {totalQuantity}</p>\r\n        <p>Out of Stock Count: {outOfStockCount}</p>\r\n        <p>Total Value: {totalValue}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadAccessories;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}