{"ast":null,"code":"import { DecodeStream } from './DecodeStream.js';\nimport { Base } from './Base.js';\nclass NumberT extends Base {\n  constructor(type, endian = 'BE') {\n    super();\n    this.type = type;\n    this.endian = endian;\n    this.fn = this.type;\n    if (this.type[this.type.length - 1] !== '8') {\n      this.fn += this.endian;\n    }\n  }\n  size() {\n    return DecodeStream.TYPES[this.type];\n  }\n  decode(stream) {\n    return stream[`read${this.fn}`]();\n  }\n  encode(stream, val) {\n    return stream[`write${this.fn}`](val);\n  }\n}\nexport { NumberT as Number };\nexport const uint8 = new NumberT('UInt8');\nexport const uint16be = new NumberT('UInt16', 'BE');\nexport const uint16 = uint16be;\nexport const uint16le = new NumberT('UInt16', 'LE');\nexport const uint24be = new NumberT('UInt24', 'BE');\nexport const uint24 = uint24be;\nexport const uint24le = new NumberT('UInt24', 'LE');\nexport const uint32be = new NumberT('UInt32', 'BE');\nexport const uint32 = uint32be;\nexport const uint32le = new NumberT('UInt32', 'LE');\nexport const int8 = new NumberT('Int8');\nexport const int16be = new NumberT('Int16', 'BE');\nexport const int16 = int16be;\nexport const int16le = new NumberT('Int16', 'LE');\nexport const int24be = new NumberT('Int24', 'BE');\nexport const int24 = int24be;\nexport const int24le = new NumberT('Int24', 'LE');\nexport const int32be = new NumberT('Int32', 'BE');\nexport const int32 = int32be;\nexport const int32le = new NumberT('Int32', 'LE');\nexport const floatbe = new NumberT('Float', 'BE');\nexport const float = floatbe;\nexport const floatle = new NumberT('Float', 'LE');\nexport const doublebe = new NumberT('Double', 'BE');\nexport const double = doublebe;\nexport const doublele = new NumberT('Double', 'LE');\nexport class Fixed extends NumberT {\n  constructor(size, endian, fracBits = size >> 1) {\n    super(`Int${size}`, endian);\n    this._point = 1 << fracBits;\n  }\n  decode(stream) {\n    return super.decode(stream) / this._point;\n  }\n  encode(stream, val) {\n    return super.encode(stream, val * this._point | 0);\n  }\n}\nexport const fixed16be = new Fixed(16, 'BE');\nexport const fixed16 = fixed16be;\nexport const fixed16le = new Fixed(16, 'LE');\nexport const fixed32be = new Fixed(32, 'BE');\nexport const fixed32 = fixed32be;\nexport const fixed32le = new Fixed(32, 'LE');","map":{"version":3,"names":["DecodeStream","Base","NumberT","constructor","type","endian","fn","length","size","TYPES","decode","stream","encode","val","Number","uint8","uint16be","uint16","uint16le","uint24be","uint24","uint24le","uint32be","uint32","uint32le","int8","int16be","int16","int16le","int24be","int24","int24le","int32be","int32","int32le","floatbe","float","floatle","doublebe","double","doublele","Fixed","fracBits","_point","fixed16be","fixed16","fixed16le","fixed32be","fixed32","fixed32le"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/restructure/src/Number.js"],"sourcesContent":["import {DecodeStream} from './DecodeStream.js';\r\nimport {Base} from './Base.js';\r\n\r\nclass NumberT extends Base {\r\n  constructor(type, endian = 'BE') {\r\n    super();\r\n    this.type = type;\r\n    this.endian = endian;\r\n    this.fn = this.type;\r\n    if (this.type[this.type.length - 1] !== '8') {\r\n      this.fn += this.endian;\r\n    }\r\n  }\r\n\r\n  size() {\r\n    return DecodeStream.TYPES[this.type];\r\n  }\r\n\r\n  decode(stream) {\r\n    return stream[`read${this.fn}`]();\r\n  }\r\n\r\n  encode(stream, val) {\r\n    return stream[`write${this.fn}`](val);\r\n  }\r\n}\r\n\r\nexport {NumberT as Number};\r\n\r\nexport const uint8 = new NumberT('UInt8');\r\nexport const uint16be = new NumberT('UInt16', 'BE');\r\nexport const uint16 = uint16be;\r\nexport const uint16le = new NumberT('UInt16', 'LE');\r\nexport const uint24be = new NumberT('UInt24', 'BE');\r\nexport const uint24 = uint24be;\r\nexport const uint24le = new NumberT('UInt24', 'LE');\r\nexport const uint32be = new NumberT('UInt32', 'BE');\r\nexport const uint32 = uint32be;\r\nexport const uint32le = new NumberT('UInt32', 'LE');\r\nexport const int8 = new NumberT('Int8');\r\nexport const int16be = new NumberT('Int16', 'BE');\r\nexport const int16 = int16be;\r\nexport const int16le = new NumberT('Int16', 'LE');\r\nexport const int24be = new NumberT('Int24', 'BE');\r\nexport const int24 = int24be;\r\nexport const int24le = new NumberT('Int24', 'LE');\r\nexport const int32be = new NumberT('Int32', 'BE');\r\nexport const int32 = int32be;\r\nexport const int32le = new NumberT('Int32', 'LE');\r\nexport const floatbe = new NumberT('Float', 'BE');\r\nexport const float = floatbe;\r\nexport const floatle = new NumberT('Float', 'LE');\r\nexport const doublebe = new NumberT('Double', 'BE');\r\nexport const double = doublebe;\r\nexport const doublele = new NumberT('Double', 'LE');\r\n\r\nexport class Fixed extends NumberT {\r\n  constructor(size, endian, fracBits = size >> 1) {\r\n    super(`Int${size}`, endian);\r\n    this._point = 1 << fracBits;\r\n  }\r\n\r\n  decode(stream) {\r\n    return super.decode(stream) / this._point;\r\n  }\r\n\r\n  encode(stream, val) {\r\n    return super.encode(stream, (val * this._point) | 0);\r\n  }\r\n}\r\n\r\nexport const fixed16be = new Fixed(16, 'BE');\r\nexport const fixed16 = fixed16be;\r\nexport const fixed16le = new Fixed(16, 'LE');\r\nexport const fixed32be = new Fixed(32, 'BE');\r\nexport const fixed32 = fixed32be;\r\nexport const fixed32le = new Fixed(32, 'LE');\r\n"],"mappings":"AAAA,SAAQA,YAAY,QAAO,mBAAmB;AAC9C,SAAQC,IAAI,QAAO,WAAW;AAE9B,MAAMC,OAAO,SAASD,IAAI,CAAC;EACzBE,WAAWA,CAACC,IAAI,EAAEC,MAAM,GAAG,IAAI,EAAE;IAC/B,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,EAAE,GAAG,IAAI,CAACF,IAAI;IACnB,IAAI,IAAI,CAACA,IAAI,CAAC,IAAI,CAACA,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;MAC3C,IAAI,CAACD,EAAE,IAAI,IAAI,CAACD,MAAM;IACxB;EACF;EAEAG,IAAIA,CAAA,EAAG;IACL,OAAOR,YAAY,CAACS,KAAK,CAAC,IAAI,CAACL,IAAI,CAAC;EACtC;EAEAM,MAAMA,CAACC,MAAM,EAAE;IACb,OAAOA,MAAM,CAAE,OAAM,IAAI,CAACL,EAAG,EAAC,CAAC,CAAC,CAAC;EACnC;EAEAM,MAAMA,CAACD,MAAM,EAAEE,GAAG,EAAE;IAClB,OAAOF,MAAM,CAAE,QAAO,IAAI,CAACL,EAAG,EAAC,CAAC,CAACO,GAAG,CAAC;EACvC;AACF;AAEA,SAAQX,OAAO,IAAIY,MAAM;AAEzB,OAAO,MAAMC,KAAK,GAAG,IAAIb,OAAO,CAAC,OAAO,CAAC;AACzC,OAAO,MAAMc,QAAQ,GAAG,IAAId,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACnD,OAAO,MAAMe,MAAM,GAAGD,QAAQ;AAC9B,OAAO,MAAME,QAAQ,GAAG,IAAIhB,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACnD,OAAO,MAAMiB,QAAQ,GAAG,IAAIjB,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACnD,OAAO,MAAMkB,MAAM,GAAGD,QAAQ;AAC9B,OAAO,MAAME,QAAQ,GAAG,IAAInB,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACnD,OAAO,MAAMoB,QAAQ,GAAG,IAAIpB,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACnD,OAAO,MAAMqB,MAAM,GAAGD,QAAQ;AAC9B,OAAO,MAAME,QAAQ,GAAG,IAAItB,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACnD,OAAO,MAAMuB,IAAI,GAAG,IAAIvB,OAAO,CAAC,MAAM,CAAC;AACvC,OAAO,MAAMwB,OAAO,GAAG,IAAIxB,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,OAAO,MAAMyB,KAAK,GAAGD,OAAO;AAC5B,OAAO,MAAME,OAAO,GAAG,IAAI1B,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,OAAO,MAAM2B,OAAO,GAAG,IAAI3B,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,OAAO,MAAM4B,KAAK,GAAGD,OAAO;AAC5B,OAAO,MAAME,OAAO,GAAG,IAAI7B,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,OAAO,MAAM8B,OAAO,GAAG,IAAI9B,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,OAAO,MAAM+B,KAAK,GAAGD,OAAO;AAC5B,OAAO,MAAME,OAAO,GAAG,IAAIhC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,OAAO,MAAMiC,OAAO,GAAG,IAAIjC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,OAAO,MAAMkC,KAAK,GAAGD,OAAO;AAC5B,OAAO,MAAME,OAAO,GAAG,IAAInC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;AACjD,OAAO,MAAMoC,QAAQ,GAAG,IAAIpC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACnD,OAAO,MAAMqC,MAAM,GAAGD,QAAQ;AAC9B,OAAO,MAAME,QAAQ,GAAG,IAAItC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AAEnD,OAAO,MAAMuC,KAAK,SAASvC,OAAO,CAAC;EACjCC,WAAWA,CAACK,IAAI,EAAEH,MAAM,EAAEqC,QAAQ,GAAGlC,IAAI,IAAI,CAAC,EAAE;IAC9C,KAAK,CAAE,MAAKA,IAAK,EAAC,EAAEH,MAAM,CAAC;IAC3B,IAAI,CAACsC,MAAM,GAAG,CAAC,IAAID,QAAQ;EAC7B;EAEAhC,MAAMA,CAACC,MAAM,EAAE;IACb,OAAO,KAAK,CAACD,MAAM,CAACC,MAAM,CAAC,GAAG,IAAI,CAACgC,MAAM;EAC3C;EAEA/B,MAAMA,CAACD,MAAM,EAAEE,GAAG,EAAE;IAClB,OAAO,KAAK,CAACD,MAAM,CAACD,MAAM,EAAGE,GAAG,GAAG,IAAI,CAAC8B,MAAM,GAAI,CAAC,CAAC;EACtD;AACF;AAEA,OAAO,MAAMC,SAAS,GAAG,IAAIH,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AAC5C,OAAO,MAAMI,OAAO,GAAGD,SAAS;AAChC,OAAO,MAAME,SAAS,GAAG,IAAIL,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AAC5C,OAAO,MAAMM,SAAS,GAAG,IAAIN,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC;AAC5C,OAAO,MAAMO,OAAO,GAAGD,SAAS;AAChC,OAAO,MAAME,SAAS,GAAG,IAAIR,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}