{"ast":null,"code":"const CLASS_PART_SEPARATOR = '-';\nfunction createClassUtils(config) {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  function getClassGroupId(className) {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  }\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n}\nfunction getGroupRecursive(classParts, classPartObject) {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n}\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\r\n * Exported for testing only\r\n */\nfunction createClassMap(config) {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\nfunction getPart(classPartObject, path) {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n}\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nfunction createLruCache(maxCacheSize) {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  function update(key, value) {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n}\nconst IMPORTANT_MODIFIER = '!';\nfunction createSplitModifiers(config) {\n  const separator = config.separator;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  return function splitModifiers(className) {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n}\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */\nfunction sortModifiers(modifiers) {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n}\nfunction createConfigUtils(config) {\n  return {\n    cache: createLruCache(config.cacheSize),\n    splitModifiers: createSplitModifiers(config),\n    ...createClassUtils(config)\n  };\n}\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nfunction mergeClassList(classList, configUtils) {\n  const {\n    splitModifiers,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example 'md:!pr'\r\n   */\n  const classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(originalClassName => {\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = splitModifiers(originalClassName);\n    let classGroupId = getClassGroupId(maybePostfixModifierPosition ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    if (!classGroupId) {\n      if (!maybePostfixModifierPosition) {\n        return {\n          isTailwindClass: false,\n          originalClassName\n        };\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        return {\n          isTailwindClass: false,\n          originalClassName\n        };\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifierId,\n      classGroupId,\n      originalClassName,\n      hasPostfixModifier\n    };\n  }).reverse()\n  // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(parsed => {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n    const {\n      modifierId,\n      classGroupId,\n      hasPostfixModifier\n    } = parsed;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach(group => classGroupsInConflict.add(modifierId + group));\n    return true;\n  }).reverse().map(parsed => parsed.originalClassName).join(' ');\n}\n\n/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nfunction fromTheme(key) {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nfunction isLength(value) {\n  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\n}\nfunction isArbitraryLength(value) {\n  return getIsArbitraryValue(value, 'length', isLengthOnly);\n}\nfunction isNumber(value) {\n  return Boolean(value) && !Number.isNaN(Number(value));\n}\nfunction isArbitraryNumber(value) {\n  return getIsArbitraryValue(value, 'number', isNumber);\n}\nfunction isInteger(value) {\n  return Boolean(value) && Number.isInteger(Number(value));\n}\nfunction isPercent(value) {\n  return value.endsWith('%') && isNumber(value.slice(0, -1));\n}\nfunction isArbitraryValue(value) {\n  return arbitraryValueRegex.test(value);\n}\nfunction isTshirtSize(value) {\n  return tshirtUnitRegex.test(value);\n}\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nfunction isArbitrarySize(value) {\n  return getIsArbitraryValue(value, sizeLabels, isNever);\n}\nfunction isArbitraryPosition(value) {\n  return getIsArbitraryValue(value, 'position', isNever);\n}\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nfunction isArbitraryImage(value) {\n  return getIsArbitraryValue(value, imageLabels, isImage);\n}\nfunction isArbitraryShadow(value) {\n  return getIsArbitraryValue(value, '', isShadow);\n}\nfunction isAny() {\n  return true;\n}\nfunction getIsArbitraryValue(value, label, testValue) {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n}\nfunction isLengthOnly(value) {\n  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n  return lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\n}\nfunction isNever() {\n  return false;\n}\nfunction isShadow(value) {\n  return shadowRegex.test(value);\n}\nfunction isImage(value) {\n  return imageRegex.test(value);\n}\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nfunction getDefaultConfig() {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity', 'plus-lighter'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumber = () => [isNumber, isArbitraryNumber];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumber(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumber(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumber(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumber(),\n      scale: getNumber(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */\n      container: ['container'],\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\r\n       * Start\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\r\n       * End\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\r\n       * Padding Start\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\r\n       * Padding End\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\r\n       * Margin Start\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\r\n       * Margin End\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\r\n       * Size\r\n       * @see https://tailwindcss.com/docs/size\r\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\r\n       * Line Clamp\r\n       * @see https://tailwindcss.com/docs/line-clamp\r\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\r\n       * List Style Image\r\n       * @see https://tailwindcss.com/docs/list-style-image\r\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\r\n       * Text Wrap\r\n       * @see https://tailwindcss.com/docs/text-wrap\r\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\r\n       * Hyphens\r\n       * @see https://tailwindcss.com/docs/hyphens\r\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\r\n       * Gradient Color Stops From Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\r\n       * Gradient Color Stops Via Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\r\n       * Gradient Color Stops To Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\r\n       * Border Radius Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\r\n       * Border Radius End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Start Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Start End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\r\n       * Border Radius End End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\r\n       * Border Radius End Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\r\n       * Border Width Start\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\r\n       * Border Width End\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\r\n       * Mix Blend Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\r\n       * Border Spacing\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\r\n       * Border Spacing X\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\r\n       * Border Spacing Y\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\r\n       * Caption Side\r\n       * @see https://tailwindcss.com/docs/caption-side\r\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Margin Start\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Margin End\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding Start\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding End\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\r\n       * Touch Action X\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\r\n       * Touch Action Y\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\r\n       * Touch Action Pinch Zoom\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\r\n       * Forced Color Adjust\r\n       * @see https://tailwindcss.com/docs/forced-color-adjust\r\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n}\n\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\nfunction mergeConfigs(baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  extend = {},\n  override = {}\n}) {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n}\nfunction overrideProperty(baseObject, overrideKey, overrideValue) {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n}\nfunction overrideConfigProperties(baseObject, overrideObject) {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n}\nfunction mergeConfigProperties(baseObject, mergeObject) {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n}\nfunction extendTailwindMerge(configExtension, ...createConfig) {\n  return typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\n}\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };","map":{"version":3,"names":["CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","Map","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","entries","classGroups","forEach","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","key","path","currentClassPartObject","pathPart","has","set","func","classGroupEntries","map","prefixedClassGroup","fromEntries","value","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createSplitModifiers","separator","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","splitModifiers","modifiers","bracketDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","startsWith","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","isArbitraryVariant","sort","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","Set","trim","originalClassName","Boolean","isTailwindClass","variantModifier","modifierId","reverse","filter","parsed","classId","add","group","twJoin","argument","resolvedValue","string","arguments","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","result","callTailwindMerge","apply","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","Number","isNaN","isArbitraryNumber","isInteger","isPercent","endsWith","isArbitraryValue","isTshirtSize","sizeLabels","isArbitrarySize","isNever","isArbitraryPosition","imageLabels","isArbitraryImage","isImage","isArbitraryShadow","isShadow","isAny","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmptyAndArbitrary","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumber","getNumberAndArbitrary","aspect","container","columns","box","display","float","clear","isolation","object","overflow","overscroll","position","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","items","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","size","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","break","hyphens","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","table","caption","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","select","fill","stroke","sr","mergeConfigs","baseConfig","extend","override","overrideProperty","configKey","overrideConfigProperties","mergeConfigProperties","baseObject","overrideKey","overrideValue","overrideObject","mergeObject","mergeValue","concat","extendTailwindMerge","configExtension","createConfig","twMerge"],"sources":["D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\class-utils.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\lru-cache.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\modifier-utils.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\config-utils.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\merge-classlist.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\tw-join.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\create-tailwind-merge.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\from-theme.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\validators.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\default-config.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\merge-configs.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\extend-tailwind-merge.ts","D:\\SLIIT IT\\Year 2 semster 2\\ITP\\Project\\Smart TechHub Management System\\New-Gen-\\mern-admin\\node_modules\\tailwind-merge\\src\\lib\\tw-merge.ts"],"sourcesContent":["import {\r\n    ClassGroup,\r\n    ClassValidator,\r\n    Config,\r\n    GenericClassGroupIds,\r\n    GenericConfig,\r\n    GenericThemeGroupIds,\r\n    ThemeGetter,\r\n    ThemeObject,\r\n} from './types'\r\n\r\nexport interface ClassPartObject {\r\n    nextPart: Map<string, ClassPartObject>\r\n    validators: ClassValidatorObject[]\r\n    classGroupId?: GenericClassGroupIds\r\n}\r\n\r\ninterface ClassValidatorObject {\r\n    classGroupId: GenericClassGroupIds\r\n    validator: ClassValidator\r\n}\r\n\r\nconst CLASS_PART_SEPARATOR = '-'\r\n\r\nexport function createClassUtils(config: GenericConfig) {\r\n    const classMap = createClassMap(config)\r\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config\r\n\r\n    function getClassGroupId(className: string) {\r\n        const classParts = className.split(CLASS_PART_SEPARATOR)\r\n\r\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\r\n        if (classParts[0] === '' && classParts.length !== 1) {\r\n            classParts.shift()\r\n        }\r\n\r\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\r\n    }\r\n\r\n    function getConflictingClassGroupIds(\r\n        classGroupId: GenericClassGroupIds,\r\n        hasPostfixModifier: boolean,\r\n    ) {\r\n        const conflicts = conflictingClassGroups[classGroupId] || []\r\n\r\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\r\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\r\n        }\r\n\r\n        return conflicts\r\n    }\r\n\r\n    return {\r\n        getClassGroupId,\r\n        getConflictingClassGroupIds,\r\n    }\r\n}\r\n\r\nfunction getGroupRecursive(\r\n    classParts: string[],\r\n    classPartObject: ClassPartObject,\r\n): GenericClassGroupIds | undefined {\r\n    if (classParts.length === 0) {\r\n        return classPartObject.classGroupId\r\n    }\r\n\r\n    const currentClassPart = classParts[0]!\r\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\r\n    const classGroupFromNextClassPart = nextClassPartObject\r\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\r\n        : undefined\r\n\r\n    if (classGroupFromNextClassPart) {\r\n        return classGroupFromNextClassPart\r\n    }\r\n\r\n    if (classPartObject.validators.length === 0) {\r\n        return undefined\r\n    }\r\n\r\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\r\n\r\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\r\n}\r\n\r\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\r\n\r\nfunction getGroupIdForArbitraryProperty(className: string) {\r\n    if (arbitraryPropertyRegex.test(className)) {\r\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\r\n        const property = arbitraryPropertyClassName?.substring(\r\n            0,\r\n            arbitraryPropertyClassName.indexOf(':'),\r\n        )\r\n\r\n        if (property) {\r\n            // I use two dots here because one dot is used as prefix for class groups in plugins\r\n            return 'arbitrary..' + property\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Exported for testing only\r\n */\r\nexport function createClassMap(config: Config<GenericClassGroupIds, GenericThemeGroupIds>) {\r\n    const { theme, prefix } = config\r\n    const classMap: ClassPartObject = {\r\n        nextPart: new Map<string, ClassPartObject>(),\r\n        validators: [],\r\n    }\r\n\r\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\r\n        Object.entries(config.classGroups),\r\n        prefix,\r\n    )\r\n\r\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\r\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\r\n    })\r\n\r\n    return classMap\r\n}\r\n\r\nfunction processClassesRecursively(\r\n    classGroup: ClassGroup<GenericThemeGroupIds>,\r\n    classPartObject: ClassPartObject,\r\n    classGroupId: GenericClassGroupIds,\r\n    theme: ThemeObject<GenericThemeGroupIds>,\r\n) {\r\n    classGroup.forEach((classDefinition) => {\r\n        if (typeof classDefinition === 'string') {\r\n            const classPartObjectToEdit =\r\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\r\n            classPartObjectToEdit.classGroupId = classGroupId\r\n            return\r\n        }\r\n\r\n        if (typeof classDefinition === 'function') {\r\n            if (isThemeGetter(classDefinition)) {\r\n                processClassesRecursively(\r\n                    classDefinition(theme),\r\n                    classPartObject,\r\n                    classGroupId,\r\n                    theme,\r\n                )\r\n                return\r\n            }\r\n\r\n            classPartObject.validators.push({\r\n                validator: classDefinition,\r\n                classGroupId,\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\r\n            processClassesRecursively(\r\n                classGroup,\r\n                getPart(classPartObject, key),\r\n                classGroupId,\r\n                theme,\r\n            )\r\n        })\r\n    })\r\n}\r\n\r\nfunction getPart(classPartObject: ClassPartObject, path: string) {\r\n    let currentClassPartObject = classPartObject\r\n\r\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\r\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\r\n            currentClassPartObject.nextPart.set(pathPart, {\r\n                nextPart: new Map(),\r\n                validators: [],\r\n            })\r\n        }\r\n\r\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\r\n    })\r\n\r\n    return currentClassPartObject\r\n}\r\n\r\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\r\n    return (func as ThemeGetter).isThemeGetter\r\n}\r\n\r\nfunction getPrefixedClassGroupEntries(\r\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup<GenericThemeGroupIds>]>,\r\n    prefix: string | undefined,\r\n): Array<[classGroupId: string, classGroup: ClassGroup<GenericThemeGroupIds>]> {\r\n    if (!prefix) {\r\n        return classGroupEntries\r\n    }\r\n\r\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\r\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\r\n            if (typeof classDefinition === 'string') {\r\n                return prefix + classDefinition\r\n            }\r\n\r\n            if (typeof classDefinition === 'object') {\r\n                return Object.fromEntries(\r\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\r\n                )\r\n            }\r\n\r\n            return classDefinition\r\n        })\r\n\r\n        return [classGroupId, prefixedClassGroup]\r\n    })\r\n}\r\n","// Export is needed because TypeScript complains about an error otherwise:\r\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\r\nexport interface LruCache<Key, Value> {\r\n    get(key: Key): Value | undefined\r\n    set(key: Key, value: Value): void\r\n}\r\n\r\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\r\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\r\n    if (maxCacheSize < 1) {\r\n        return {\r\n            get: () => undefined,\r\n            set: () => {},\r\n        }\r\n    }\r\n\r\n    let cacheSize = 0\r\n    let cache = new Map<Key, Value>()\r\n    let previousCache = new Map<Key, Value>()\r\n\r\n    function update(key: Key, value: Value) {\r\n        cache.set(key, value)\r\n        cacheSize++\r\n\r\n        if (cacheSize > maxCacheSize) {\r\n            cacheSize = 0\r\n            previousCache = cache\r\n            cache = new Map()\r\n        }\r\n    }\r\n\r\n    return {\r\n        get(key) {\r\n            let value = cache.get(key)\r\n\r\n            if (value !== undefined) {\r\n                return value\r\n            }\r\n            if ((value = previousCache.get(key)) !== undefined) {\r\n                update(key, value)\r\n                return value\r\n            }\r\n        },\r\n        set(key, value) {\r\n            if (cache.has(key)) {\r\n                cache.set(key, value)\r\n            } else {\r\n                update(key, value)\r\n            }\r\n        },\r\n    }\r\n}\r\n","import { GenericConfig } from './types'\r\n\r\nexport const IMPORTANT_MODIFIER = '!'\r\n\r\nexport function createSplitModifiers(config: GenericConfig) {\r\n    const separator = config.separator\r\n    const isSeparatorSingleCharacter = separator.length === 1\r\n    const firstSeparatorCharacter = separator[0]\r\n    const separatorLength = separator.length\r\n\r\n    // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\r\n    return function splitModifiers(className: string) {\r\n        const modifiers = []\r\n\r\n        let bracketDepth = 0\r\n        let modifierStart = 0\r\n        let postfixModifierPosition: number | undefined\r\n\r\n        for (let index = 0; index < className.length; index++) {\r\n            let currentCharacter = className[index]\r\n\r\n            if (bracketDepth === 0) {\r\n                if (\r\n                    currentCharacter === firstSeparatorCharacter &&\r\n                    (isSeparatorSingleCharacter ||\r\n                        className.slice(index, index + separatorLength) === separator)\r\n                ) {\r\n                    modifiers.push(className.slice(modifierStart, index))\r\n                    modifierStart = index + separatorLength\r\n                    continue\r\n                }\r\n\r\n                if (currentCharacter === '/') {\r\n                    postfixModifierPosition = index\r\n                    continue\r\n                }\r\n            }\r\n\r\n            if (currentCharacter === '[') {\r\n                bracketDepth++\r\n            } else if (currentCharacter === ']') {\r\n                bracketDepth--\r\n            }\r\n        }\r\n\r\n        const baseClassNameWithImportantModifier =\r\n            modifiers.length === 0 ? className : className.substring(modifierStart)\r\n        const hasImportantModifier =\r\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\r\n        const baseClassName = hasImportantModifier\r\n            ? baseClassNameWithImportantModifier.substring(1)\r\n            : baseClassNameWithImportantModifier\r\n\r\n        const maybePostfixModifierPosition =\r\n            postfixModifierPosition && postfixModifierPosition > modifierStart\r\n                ? postfixModifierPosition - modifierStart\r\n                : undefined\r\n\r\n        return {\r\n            modifiers,\r\n            hasImportantModifier,\r\n            baseClassName,\r\n            maybePostfixModifierPosition,\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */\r\nexport function sortModifiers(modifiers: string[]) {\r\n    if (modifiers.length <= 1) {\r\n        return modifiers\r\n    }\r\n\r\n    const sortedModifiers: string[] = []\r\n    let unsortedModifiers: string[] = []\r\n\r\n    modifiers.forEach((modifier) => {\r\n        const isArbitraryVariant = modifier[0] === '['\r\n\r\n        if (isArbitraryVariant) {\r\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\r\n            unsortedModifiers = []\r\n        } else {\r\n            unsortedModifiers.push(modifier)\r\n        }\r\n    })\r\n\r\n    sortedModifiers.push(...unsortedModifiers.sort())\r\n\r\n    return sortedModifiers\r\n}\r\n","import { createClassUtils } from './class-utils'\r\nimport { createLruCache } from './lru-cache'\r\nimport { createSplitModifiers } from './modifier-utils'\r\nimport { GenericConfig } from './types'\r\n\r\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\r\n\r\nexport function createConfigUtils(config: GenericConfig) {\r\n    return {\r\n        cache: createLruCache<string, string>(config.cacheSize),\r\n        splitModifiers: createSplitModifiers(config),\r\n        ...createClassUtils(config),\r\n    }\r\n}\r\n","import { ConfigUtils } from './config-utils'\r\nimport { IMPORTANT_MODIFIER, sortModifiers } from './modifier-utils'\r\n\r\nconst SPLIT_CLASSES_REGEX = /\\s+/\r\n\r\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\r\n    const { splitModifiers, getClassGroupId, getConflictingClassGroupIds } = configUtils\r\n\r\n    /**\r\n     * Set of classGroupIds in following format:\r\n     * `{importantModifier}{variantModifiers}{classGroupId}`\r\n     * @example 'float'\r\n     * @example 'hover:focus:bg-color'\r\n     * @example 'md:!pr'\r\n     */\r\n    const classGroupsInConflict = new Set<string>()\r\n\r\n    return (\r\n        classList\r\n            .trim()\r\n            .split(SPLIT_CLASSES_REGEX)\r\n            .map((originalClassName) => {\r\n                const {\r\n                    modifiers,\r\n                    hasImportantModifier,\r\n                    baseClassName,\r\n                    maybePostfixModifierPosition,\r\n                } = splitModifiers(originalClassName)\r\n\r\n                let classGroupId = getClassGroupId(\r\n                    maybePostfixModifierPosition\r\n                        ? baseClassName.substring(0, maybePostfixModifierPosition)\r\n                        : baseClassName,\r\n                )\r\n\r\n                let hasPostfixModifier = Boolean(maybePostfixModifierPosition)\r\n\r\n                if (!classGroupId) {\r\n                    if (!maybePostfixModifierPosition) {\r\n                        return {\r\n                            isTailwindClass: false as const,\r\n                            originalClassName,\r\n                        }\r\n                    }\r\n\r\n                    classGroupId = getClassGroupId(baseClassName)\r\n\r\n                    if (!classGroupId) {\r\n                        return {\r\n                            isTailwindClass: false as const,\r\n                            originalClassName,\r\n                        }\r\n                    }\r\n\r\n                    hasPostfixModifier = false\r\n                }\r\n\r\n                const variantModifier = sortModifiers(modifiers).join(':')\r\n\r\n                const modifierId = hasImportantModifier\r\n                    ? variantModifier + IMPORTANT_MODIFIER\r\n                    : variantModifier\r\n\r\n                return {\r\n                    isTailwindClass: true as const,\r\n                    modifierId,\r\n                    classGroupId,\r\n                    originalClassName,\r\n                    hasPostfixModifier,\r\n                }\r\n            })\r\n            .reverse()\r\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\r\n            .filter((parsed) => {\r\n                if (!parsed.isTailwindClass) {\r\n                    return true\r\n                }\r\n\r\n                const { modifierId, classGroupId, hasPostfixModifier } = parsed\r\n\r\n                const classId = modifierId + classGroupId\r\n\r\n                if (classGroupsInConflict.has(classId)) {\r\n                    return false\r\n                }\r\n\r\n                classGroupsInConflict.add(classId)\r\n\r\n                getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach((group) =>\r\n                    classGroupsInConflict.add(modifierId + group),\r\n                )\r\n\r\n                return true\r\n            })\r\n            .reverse()\r\n            .map((parsed) => parsed.originalClassName)\r\n            .join(' ')\r\n    )\r\n}\r\n","/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\r\n\r\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\r\ntype ClassNameArray = ClassNameValue[]\r\n\r\nexport function twJoin(...classLists: ClassNameValue[]): string\r\nexport function twJoin() {\r\n    let index = 0\r\n    let argument: ClassNameValue\r\n    let resolvedValue: string\r\n    let string = ''\r\n\r\n    while (index < arguments.length) {\r\n        if ((argument = arguments[index++])) {\r\n            if ((resolvedValue = toValue(argument))) {\r\n                string && (string += ' ')\r\n                string += resolvedValue\r\n            }\r\n        }\r\n    }\r\n    return string\r\n}\r\n\r\nfunction toValue(mix: ClassNameArray | string) {\r\n    if (typeof mix === 'string') {\r\n        return mix\r\n    }\r\n\r\n    let resolvedValue: string\r\n    let string = ''\r\n\r\n    for (let k = 0; k < mix.length; k++) {\r\n        if (mix[k]) {\r\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\r\n                string && (string += ' ')\r\n                string += resolvedValue\r\n            }\r\n        }\r\n    }\r\n\r\n    return string\r\n}\r\n","import { createConfigUtils } from './config-utils'\r\nimport { mergeClassList } from './merge-classlist'\r\nimport { ClassNameValue, twJoin } from './tw-join'\r\nimport { GenericConfig } from './types'\r\n\r\ntype CreateConfigFirst = () => GenericConfig\r\ntype CreateConfigSubsequent = (config: GenericConfig) => GenericConfig\r\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\r\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\r\n\r\nexport function createTailwindMerge(\r\n    createConfigFirst: CreateConfigFirst,\r\n    ...createConfigRest: CreateConfigSubsequent[]\r\n): TailwindMerge {\r\n    let configUtils: ConfigUtils\r\n    let cacheGet: ConfigUtils['cache']['get']\r\n    let cacheSet: ConfigUtils['cache']['set']\r\n    let functionToCall = initTailwindMerge\r\n\r\n    function initTailwindMerge(classList: string) {\r\n        const config = createConfigRest.reduce(\r\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\r\n            createConfigFirst() as GenericConfig,\r\n        )\r\n\r\n        configUtils = createConfigUtils(config)\r\n        cacheGet = configUtils.cache.get\r\n        cacheSet = configUtils.cache.set\r\n        functionToCall = tailwindMerge\r\n\r\n        return tailwindMerge(classList)\r\n    }\r\n\r\n    function tailwindMerge(classList: string) {\r\n        const cachedResult = cacheGet(classList)\r\n\r\n        if (cachedResult) {\r\n            return cachedResult\r\n        }\r\n\r\n        const result = mergeClassList(classList, configUtils)\r\n        cacheSet(classList, result)\r\n\r\n        return result\r\n    }\r\n\r\n    return function callTailwindMerge() {\r\n        return functionToCall(twJoin.apply(null, arguments as any))\r\n    }\r\n}\r\n","import { DefaultThemeGroupIds, NoInfer, ThemeGetter, ThemeObject } from './types'\r\n\r\nexport function fromTheme<\r\n    AdditionalThemeGroupIds extends string = never,\r\n    DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds,\r\n>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>): ThemeGetter {\r\n    const themeGetter = (theme: ThemeObject<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) =>\r\n        theme[key] || []\r\n\r\n    themeGetter.isThemeGetter = true as const\r\n\r\n    return themeGetter\r\n}\r\n","const arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i\r\nconst fractionRegex = /^\\d+\\/\\d+$/\r\nconst stringLengths = new Set(['px', 'full', 'screen'])\r\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\r\nconst lengthUnitRegex =\r\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\r\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/\r\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\r\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\r\nconst imageRegex =\r\n    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/\r\n\r\nexport function isLength(value: string) {\r\n    return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value)\r\n}\r\n\r\nexport function isArbitraryLength(value: string) {\r\n    return getIsArbitraryValue(value, 'length', isLengthOnly)\r\n}\r\n\r\nexport function isNumber(value: string) {\r\n    return Boolean(value) && !Number.isNaN(Number(value))\r\n}\r\n\r\nexport function isArbitraryNumber(value: string) {\r\n    return getIsArbitraryValue(value, 'number', isNumber)\r\n}\r\n\r\nexport function isInteger(value: string) {\r\n    return Boolean(value) && Number.isInteger(Number(value))\r\n}\r\n\r\nexport function isPercent(value: string) {\r\n    return value.endsWith('%') && isNumber(value.slice(0, -1))\r\n}\r\n\r\nexport function isArbitraryValue(value: string) {\r\n    return arbitraryValueRegex.test(value)\r\n}\r\n\r\nexport function isTshirtSize(value: string) {\r\n    return tshirtUnitRegex.test(value)\r\n}\r\n\r\nconst sizeLabels = new Set(['length', 'size', 'percentage'])\r\n\r\nexport function isArbitrarySize(value: string) {\r\n    return getIsArbitraryValue(value, sizeLabels, isNever)\r\n}\r\n\r\nexport function isArbitraryPosition(value: string) {\r\n    return getIsArbitraryValue(value, 'position', isNever)\r\n}\r\n\r\nconst imageLabels = new Set(['image', 'url'])\r\n\r\nexport function isArbitraryImage(value: string) {\r\n    return getIsArbitraryValue(value, imageLabels, isImage)\r\n}\r\n\r\nexport function isArbitraryShadow(value: string) {\r\n    return getIsArbitraryValue(value, '', isShadow)\r\n}\r\n\r\nexport function isAny() {\r\n    return true\r\n}\r\n\r\nfunction getIsArbitraryValue(\r\n    value: string,\r\n    label: string | Set<string>,\r\n    testValue: (value: string) => boolean,\r\n) {\r\n    const result = arbitraryValueRegex.exec(value)\r\n\r\n    if (result) {\r\n        if (result[1]) {\r\n            return typeof label === 'string' ? result[1] === label : label.has(result[1])\r\n        }\r\n\r\n        return testValue(result[2]!)\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nfunction isLengthOnly(value: string) {\r\n    // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\r\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\r\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\r\n    return lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)\r\n}\r\n\r\nfunction isNever() {\r\n    return false\r\n}\r\n\r\nfunction isShadow(value: string) {\r\n    return shadowRegex.test(value)\r\n}\r\n\r\nfunction isImage(value: string) {\r\n    return imageRegex.test(value)\r\n}\r\n","import { fromTheme } from './from-theme'\r\nimport { Config, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\r\nimport {\r\n    isAny,\r\n    isArbitraryImage,\r\n    isArbitraryLength,\r\n    isArbitraryNumber,\r\n    isArbitraryPosition,\r\n    isArbitraryShadow,\r\n    isArbitrarySize,\r\n    isArbitraryValue,\r\n    isInteger,\r\n    isLength,\r\n    isNumber,\r\n    isPercent,\r\n    isTshirtSize,\r\n} from './validators'\r\n\r\nexport function getDefaultConfig() {\r\n    const colors = fromTheme('colors')\r\n    const spacing = fromTheme('spacing')\r\n    const blur = fromTheme('blur')\r\n    const brightness = fromTheme('brightness')\r\n    const borderColor = fromTheme('borderColor')\r\n    const borderRadius = fromTheme('borderRadius')\r\n    const borderSpacing = fromTheme('borderSpacing')\r\n    const borderWidth = fromTheme('borderWidth')\r\n    const contrast = fromTheme('contrast')\r\n    const grayscale = fromTheme('grayscale')\r\n    const hueRotate = fromTheme('hueRotate')\r\n    const invert = fromTheme('invert')\r\n    const gap = fromTheme('gap')\r\n    const gradientColorStops = fromTheme('gradientColorStops')\r\n    const gradientColorStopPositions = fromTheme('gradientColorStopPositions')\r\n    const inset = fromTheme('inset')\r\n    const margin = fromTheme('margin')\r\n    const opacity = fromTheme('opacity')\r\n    const padding = fromTheme('padding')\r\n    const saturate = fromTheme('saturate')\r\n    const scale = fromTheme('scale')\r\n    const sepia = fromTheme('sepia')\r\n    const skew = fromTheme('skew')\r\n    const space = fromTheme('space')\r\n    const translate = fromTheme('translate')\r\n\r\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\r\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\r\n    const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing] as const\r\n    const getSpacingWithArbitrary = () => [isArbitraryValue, spacing] as const\r\n    const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength] as const\r\n    const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue] as const\r\n    const getPositions = () =>\r\n        [\r\n            'bottom',\r\n            'center',\r\n            'left',\r\n            'left-bottom',\r\n            'left-top',\r\n            'right',\r\n            'right-bottom',\r\n            'right-top',\r\n            'top',\r\n        ] as const\r\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\r\n    const getBlendModes = () =>\r\n        [\r\n            'normal',\r\n            'multiply',\r\n            'screen',\r\n            'overlay',\r\n            'darken',\r\n            'lighten',\r\n            'color-dodge',\r\n            'color-burn',\r\n            'hard-light',\r\n            'soft-light',\r\n            'difference',\r\n            'exclusion',\r\n            'hue',\r\n            'saturation',\r\n            'color',\r\n            'luminosity',\r\n            'plus-lighter',\r\n        ] as const\r\n    const getAlign = () =>\r\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'] as const\r\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\r\n    const getBreaks = () =>\r\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\r\n    const getNumber = () => [isNumber, isArbitraryNumber]\r\n    const getNumberAndArbitrary = () => [isNumber, isArbitraryValue]\r\n\r\n    return {\r\n        cacheSize: 500,\r\n        separator: ':',\r\n        theme: {\r\n            colors: [isAny],\r\n            spacing: [isLength, isArbitraryLength],\r\n            blur: ['none', '', isTshirtSize, isArbitraryValue],\r\n            brightness: getNumber(),\r\n            borderColor: [colors],\r\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\r\n            borderSpacing: getSpacingWithArbitrary(),\r\n            borderWidth: getLengthWithEmptyAndArbitrary(),\r\n            contrast: getNumber(),\r\n            grayscale: getZeroAndEmpty(),\r\n            hueRotate: getNumberAndArbitrary(),\r\n            invert: getZeroAndEmpty(),\r\n            gap: getSpacingWithArbitrary(),\r\n            gradientColorStops: [colors],\r\n            gradientColorStopPositions: [isPercent, isArbitraryLength],\r\n            inset: getSpacingWithAutoAndArbitrary(),\r\n            margin: getSpacingWithAutoAndArbitrary(),\r\n            opacity: getNumber(),\r\n            padding: getSpacingWithArbitrary(),\r\n            saturate: getNumber(),\r\n            scale: getNumber(),\r\n            sepia: getZeroAndEmpty(),\r\n            skew: getNumberAndArbitrary(),\r\n            space: getSpacingWithArbitrary(),\r\n            translate: getSpacingWithArbitrary(),\r\n        },\r\n        classGroups: {\r\n            // Layout\r\n            /**\r\n             * Aspect Ratio\r\n             * @see https://tailwindcss.com/docs/aspect-ratio\r\n             */\r\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\r\n            /**\r\n             * Container\r\n             * @see https://tailwindcss.com/docs/container\r\n             */\r\n            container: ['container'],\r\n            /**\r\n             * Columns\r\n             * @see https://tailwindcss.com/docs/columns\r\n             */\r\n            columns: [{ columns: [isTshirtSize] }],\r\n            /**\r\n             * Break After\r\n             * @see https://tailwindcss.com/docs/break-after\r\n             */\r\n            'break-after': [{ 'break-after': getBreaks() }],\r\n            /**\r\n             * Break Before\r\n             * @see https://tailwindcss.com/docs/break-before\r\n             */\r\n            'break-before': [{ 'break-before': getBreaks() }],\r\n            /**\r\n             * Break Inside\r\n             * @see https://tailwindcss.com/docs/break-inside\r\n             */\r\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\r\n            /**\r\n             * Box Decoration Break\r\n             * @see https://tailwindcss.com/docs/box-decoration-break\r\n             */\r\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\r\n            /**\r\n             * Box Sizing\r\n             * @see https://tailwindcss.com/docs/box-sizing\r\n             */\r\n            box: [{ box: ['border', 'content'] }],\r\n            /**\r\n             * Display\r\n             * @see https://tailwindcss.com/docs/display\r\n             */\r\n            display: [\r\n                'block',\r\n                'inline-block',\r\n                'inline',\r\n                'flex',\r\n                'inline-flex',\r\n                'table',\r\n                'inline-table',\r\n                'table-caption',\r\n                'table-cell',\r\n                'table-column',\r\n                'table-column-group',\r\n                'table-footer-group',\r\n                'table-header-group',\r\n                'table-row-group',\r\n                'table-row',\r\n                'flow-root',\r\n                'grid',\r\n                'inline-grid',\r\n                'contents',\r\n                'list-item',\r\n                'hidden',\r\n            ],\r\n            /**\r\n             * Floats\r\n             * @see https://tailwindcss.com/docs/float\r\n             */\r\n            float: [{ float: ['right', 'left', 'none', 'start', 'end'] }],\r\n            /**\r\n             * Clear\r\n             * @see https://tailwindcss.com/docs/clear\r\n             */\r\n            clear: [{ clear: ['left', 'right', 'both', 'none', 'start', 'end'] }],\r\n            /**\r\n             * Isolation\r\n             * @see https://tailwindcss.com/docs/isolation\r\n             */\r\n            isolation: ['isolate', 'isolation-auto'],\r\n            /**\r\n             * Object Fit\r\n             * @see https://tailwindcss.com/docs/object-fit\r\n             */\r\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\r\n            /**\r\n             * Object Position\r\n             * @see https://tailwindcss.com/docs/object-position\r\n             */\r\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\r\n            /**\r\n             * Overflow\r\n             * @see https://tailwindcss.com/docs/overflow\r\n             */\r\n            overflow: [{ overflow: getOverflow() }],\r\n            /**\r\n             * Overflow X\r\n             * @see https://tailwindcss.com/docs/overflow\r\n             */\r\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\r\n            /**\r\n             * Overflow Y\r\n             * @see https://tailwindcss.com/docs/overflow\r\n             */\r\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\r\n            /**\r\n             * Overscroll Behavior\r\n             * @see https://tailwindcss.com/docs/overscroll-behavior\r\n             */\r\n            overscroll: [{ overscroll: getOverscroll() }],\r\n            /**\r\n             * Overscroll Behavior X\r\n             * @see https://tailwindcss.com/docs/overscroll-behavior\r\n             */\r\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\r\n            /**\r\n             * Overscroll Behavior Y\r\n             * @see https://tailwindcss.com/docs/overscroll-behavior\r\n             */\r\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\r\n            /**\r\n             * Position\r\n             * @see https://tailwindcss.com/docs/position\r\n             */\r\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\r\n            /**\r\n             * Top / Right / Bottom / Left\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            inset: [{ inset: [inset] }],\r\n            /**\r\n             * Right / Left\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            'inset-x': [{ 'inset-x': [inset] }],\r\n            /**\r\n             * Top / Bottom\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            'inset-y': [{ 'inset-y': [inset] }],\r\n            /**\r\n             * Start\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            start: [{ start: [inset] }],\r\n            /**\r\n             * End\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            end: [{ end: [inset] }],\r\n            /**\r\n             * Top\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            top: [{ top: [inset] }],\r\n            /**\r\n             * Right\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            right: [{ right: [inset] }],\r\n            /**\r\n             * Bottom\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            bottom: [{ bottom: [inset] }],\r\n            /**\r\n             * Left\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            left: [{ left: [inset] }],\r\n            /**\r\n             * Visibility\r\n             * @see https://tailwindcss.com/docs/visibility\r\n             */\r\n            visibility: ['visible', 'invisible', 'collapse'],\r\n            /**\r\n             * Z-Index\r\n             * @see https://tailwindcss.com/docs/z-index\r\n             */\r\n            z: [{ z: ['auto', isInteger, isArbitraryValue] }],\r\n            // Flexbox and Grid\r\n            /**\r\n             * Flex Basis\r\n             * @see https://tailwindcss.com/docs/flex-basis\r\n             */\r\n            basis: [{ basis: getSpacingWithAutoAndArbitrary() }],\r\n            /**\r\n             * Flex Direction\r\n             * @see https://tailwindcss.com/docs/flex-direction\r\n             */\r\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\r\n            /**\r\n             * Flex Wrap\r\n             * @see https://tailwindcss.com/docs/flex-wrap\r\n             */\r\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\r\n            /**\r\n             * Flex\r\n             * @see https://tailwindcss.com/docs/flex\r\n             */\r\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\r\n            /**\r\n             * Flex Grow\r\n             * @see https://tailwindcss.com/docs/flex-grow\r\n             */\r\n            grow: [{ grow: getZeroAndEmpty() }],\r\n            /**\r\n             * Flex Shrink\r\n             * @see https://tailwindcss.com/docs/flex-shrink\r\n             */\r\n            shrink: [{ shrink: getZeroAndEmpty() }],\r\n            /**\r\n             * Order\r\n             * @see https://tailwindcss.com/docs/order\r\n             */\r\n            order: [{ order: ['first', 'last', 'none', isInteger, isArbitraryValue] }],\r\n            /**\r\n             * Grid Template Columns\r\n             * @see https://tailwindcss.com/docs/grid-template-columns\r\n             */\r\n            'grid-cols': [{ 'grid-cols': [isAny] }],\r\n            /**\r\n             * Grid Column Start / End\r\n             * @see https://tailwindcss.com/docs/grid-column\r\n             */\r\n            'col-start-end': [\r\n                {\r\n                    col: [\r\n                        'auto',\r\n                        { span: ['full', isInteger, isArbitraryValue] },\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Grid Column Start\r\n             * @see https://tailwindcss.com/docs/grid-column\r\n             */\r\n            'col-start': [{ 'col-start': getNumberWithAutoAndArbitrary() }],\r\n            /**\r\n             * Grid Column End\r\n             * @see https://tailwindcss.com/docs/grid-column\r\n             */\r\n            'col-end': [{ 'col-end': getNumberWithAutoAndArbitrary() }],\r\n            /**\r\n             * Grid Template Rows\r\n             * @see https://tailwindcss.com/docs/grid-template-rows\r\n             */\r\n            'grid-rows': [{ 'grid-rows': [isAny] }],\r\n            /**\r\n             * Grid Row Start / End\r\n             * @see https://tailwindcss.com/docs/grid-row\r\n             */\r\n            'row-start-end': [\r\n                { row: ['auto', { span: [isInteger, isArbitraryValue] }, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Grid Row Start\r\n             * @see https://tailwindcss.com/docs/grid-row\r\n             */\r\n            'row-start': [{ 'row-start': getNumberWithAutoAndArbitrary() }],\r\n            /**\r\n             * Grid Row End\r\n             * @see https://tailwindcss.com/docs/grid-row\r\n             */\r\n            'row-end': [{ 'row-end': getNumberWithAutoAndArbitrary() }],\r\n            /**\r\n             * Grid Auto Flow\r\n             * @see https://tailwindcss.com/docs/grid-auto-flow\r\n             */\r\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\r\n            /**\r\n             * Grid Auto Columns\r\n             * @see https://tailwindcss.com/docs/grid-auto-columns\r\n             */\r\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\r\n            /**\r\n             * Grid Auto Rows\r\n             * @see https://tailwindcss.com/docs/grid-auto-rows\r\n             */\r\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\r\n            /**\r\n             * Gap\r\n             * @see https://tailwindcss.com/docs/gap\r\n             */\r\n            gap: [{ gap: [gap] }],\r\n            /**\r\n             * Gap X\r\n             * @see https://tailwindcss.com/docs/gap\r\n             */\r\n            'gap-x': [{ 'gap-x': [gap] }],\r\n            /**\r\n             * Gap Y\r\n             * @see https://tailwindcss.com/docs/gap\r\n             */\r\n            'gap-y': [{ 'gap-y': [gap] }],\r\n            /**\r\n             * Justify Content\r\n             * @see https://tailwindcss.com/docs/justify-content\r\n             */\r\n            'justify-content': [{ justify: ['normal', ...getAlign()] }],\r\n            /**\r\n             * Justify Items\r\n             * @see https://tailwindcss.com/docs/justify-items\r\n             */\r\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\r\n            /**\r\n             * Justify Self\r\n             * @see https://tailwindcss.com/docs/justify-self\r\n             */\r\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\r\n            /**\r\n             * Align Content\r\n             * @see https://tailwindcss.com/docs/align-content\r\n             */\r\n            'align-content': [{ content: ['normal', ...getAlign(), 'baseline'] }],\r\n            /**\r\n             * Align Items\r\n             * @see https://tailwindcss.com/docs/align-items\r\n             */\r\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\r\n            /**\r\n             * Align Self\r\n             * @see https://tailwindcss.com/docs/align-self\r\n             */\r\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\r\n            /**\r\n             * Place Content\r\n             * @see https://tailwindcss.com/docs/place-content\r\n             */\r\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline'] }],\r\n            /**\r\n             * Place Items\r\n             * @see https://tailwindcss.com/docs/place-items\r\n             */\r\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\r\n            /**\r\n             * Place Self\r\n             * @see https://tailwindcss.com/docs/place-self\r\n             */\r\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\r\n            // Spacing\r\n            /**\r\n             * Padding\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            p: [{ p: [padding] }],\r\n            /**\r\n             * Padding X\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            px: [{ px: [padding] }],\r\n            /**\r\n             * Padding Y\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            py: [{ py: [padding] }],\r\n            /**\r\n             * Padding Start\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            ps: [{ ps: [padding] }],\r\n            /**\r\n             * Padding End\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pe: [{ pe: [padding] }],\r\n            /**\r\n             * Padding Top\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pt: [{ pt: [padding] }],\r\n            /**\r\n             * Padding Right\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pr: [{ pr: [padding] }],\r\n            /**\r\n             * Padding Bottom\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pb: [{ pb: [padding] }],\r\n            /**\r\n             * Padding Left\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pl: [{ pl: [padding] }],\r\n            /**\r\n             * Margin\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            m: [{ m: [margin] }],\r\n            /**\r\n             * Margin X\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            mx: [{ mx: [margin] }],\r\n            /**\r\n             * Margin Y\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            my: [{ my: [margin] }],\r\n            /**\r\n             * Margin Start\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            ms: [{ ms: [margin] }],\r\n            /**\r\n             * Margin End\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            me: [{ me: [margin] }],\r\n            /**\r\n             * Margin Top\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            mt: [{ mt: [margin] }],\r\n            /**\r\n             * Margin Right\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            mr: [{ mr: [margin] }],\r\n            /**\r\n             * Margin Bottom\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            mb: [{ mb: [margin] }],\r\n            /**\r\n             * Margin Left\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            ml: [{ ml: [margin] }],\r\n            /**\r\n             * Space Between X\r\n             * @see https://tailwindcss.com/docs/space\r\n             */\r\n            'space-x': [{ 'space-x': [space] }],\r\n            /**\r\n             * Space Between X Reverse\r\n             * @see https://tailwindcss.com/docs/space\r\n             */\r\n            'space-x-reverse': ['space-x-reverse'],\r\n            /**\r\n             * Space Between Y\r\n             * @see https://tailwindcss.com/docs/space\r\n             */\r\n            'space-y': [{ 'space-y': [space] }],\r\n            /**\r\n             * Space Between Y Reverse\r\n             * @see https://tailwindcss.com/docs/space\r\n             */\r\n            'space-y-reverse': ['space-y-reverse'],\r\n            // Sizing\r\n            /**\r\n             * Width\r\n             * @see https://tailwindcss.com/docs/width\r\n             */\r\n            w: [\r\n                {\r\n                    w: [\r\n                        'auto',\r\n                        'min',\r\n                        'max',\r\n                        'fit',\r\n                        'svw',\r\n                        'lvw',\r\n                        'dvw',\r\n                        isArbitraryValue,\r\n                        spacing,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Min-Width\r\n             * @see https://tailwindcss.com/docs/min-width\r\n             */\r\n            'min-w': [{ 'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit'] }],\r\n            /**\r\n             * Max-Width\r\n             * @see https://tailwindcss.com/docs/max-width\r\n             */\r\n            'max-w': [\r\n                {\r\n                    'max-w': [\r\n                        isArbitraryValue,\r\n                        spacing,\r\n                        'none',\r\n                        'full',\r\n                        'min',\r\n                        'max',\r\n                        'fit',\r\n                        'prose',\r\n                        { screen: [isTshirtSize] },\r\n                        isTshirtSize,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Height\r\n             * @see https://tailwindcss.com/docs/height\r\n             */\r\n            h: [\r\n                {\r\n                    h: [\r\n                        isArbitraryValue,\r\n                        spacing,\r\n                        'auto',\r\n                        'min',\r\n                        'max',\r\n                        'fit',\r\n                        'svh',\r\n                        'lvh',\r\n                        'dvh',\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Min-Height\r\n             * @see https://tailwindcss.com/docs/min-height\r\n             */\r\n            'min-h': [\r\n                { 'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh'] },\r\n            ],\r\n            /**\r\n             * Max-Height\r\n             * @see https://tailwindcss.com/docs/max-height\r\n             */\r\n            'max-h': [\r\n                { 'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh'] },\r\n            ],\r\n            /**\r\n             * Size\r\n             * @see https://tailwindcss.com/docs/size\r\n             */\r\n            size: [{ size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit'] }],\r\n            // Typography\r\n            /**\r\n             * Font Size\r\n             * @see https://tailwindcss.com/docs/font-size\r\n             */\r\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\r\n            /**\r\n             * Font Smoothing\r\n             * @see https://tailwindcss.com/docs/font-smoothing\r\n             */\r\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\r\n            /**\r\n             * Font Style\r\n             * @see https://tailwindcss.com/docs/font-style\r\n             */\r\n            'font-style': ['italic', 'not-italic'],\r\n            /**\r\n             * Font Weight\r\n             * @see https://tailwindcss.com/docs/font-weight\r\n             */\r\n            'font-weight': [\r\n                {\r\n                    font: [\r\n                        'thin',\r\n                        'extralight',\r\n                        'light',\r\n                        'normal',\r\n                        'medium',\r\n                        'semibold',\r\n                        'bold',\r\n                        'extrabold',\r\n                        'black',\r\n                        isArbitraryNumber,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Font Family\r\n             * @see https://tailwindcss.com/docs/font-family\r\n             */\r\n            'font-family': [{ font: [isAny] }],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-normal': ['normal-nums'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-ordinal': ['ordinal'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-slashed-zero': ['slashed-zero'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\r\n            /**\r\n             * Letter Spacing\r\n             * @see https://tailwindcss.com/docs/letter-spacing\r\n             */\r\n            tracking: [\r\n                {\r\n                    tracking: [\r\n                        'tighter',\r\n                        'tight',\r\n                        'normal',\r\n                        'wide',\r\n                        'wider',\r\n                        'widest',\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Line Clamp\r\n             * @see https://tailwindcss.com/docs/line-clamp\r\n             */\r\n            'line-clamp': [{ 'line-clamp': ['none', isNumber, isArbitraryNumber] }],\r\n            /**\r\n             * Line Height\r\n             * @see https://tailwindcss.com/docs/line-height\r\n             */\r\n            leading: [\r\n                {\r\n                    leading: [\r\n                        'none',\r\n                        'tight',\r\n                        'snug',\r\n                        'normal',\r\n                        'relaxed',\r\n                        'loose',\r\n                        isLength,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * List Style Image\r\n             * @see https://tailwindcss.com/docs/list-style-image\r\n             */\r\n            'list-image': [{ 'list-image': ['none', isArbitraryValue] }],\r\n            /**\r\n             * List Style Type\r\n             * @see https://tailwindcss.com/docs/list-style-type\r\n             */\r\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\r\n            /**\r\n             * List Style Position\r\n             * @see https://tailwindcss.com/docs/list-style-position\r\n             */\r\n            'list-style-position': [{ list: ['inside', 'outside'] }],\r\n            /**\r\n             * Placeholder Color\r\n             * @deprecated since Tailwind CSS v3.0.0\r\n             * @see https://tailwindcss.com/docs/placeholder-color\r\n             */\r\n            'placeholder-color': [{ placeholder: [colors] }],\r\n            /**\r\n             * Placeholder Opacity\r\n             * @see https://tailwindcss.com/docs/placeholder-opacity\r\n             */\r\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\r\n            /**\r\n             * Text Alignment\r\n             * @see https://tailwindcss.com/docs/text-align\r\n             */\r\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\r\n            /**\r\n             * Text Color\r\n             * @see https://tailwindcss.com/docs/text-color\r\n             */\r\n            'text-color': [{ text: [colors] }],\r\n            /**\r\n             * Text Opacity\r\n             * @see https://tailwindcss.com/docs/text-opacity\r\n             */\r\n            'text-opacity': [{ 'text-opacity': [opacity] }],\r\n            /**\r\n             * Text Decoration\r\n             * @see https://tailwindcss.com/docs/text-decoration\r\n             */\r\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\r\n            /**\r\n             * Text Decoration Style\r\n             * @see https://tailwindcss.com/docs/text-decoration-style\r\n             */\r\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\r\n            /**\r\n             * Text Decoration Thickness\r\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n             */\r\n            'text-decoration-thickness': [\r\n                { decoration: ['auto', 'from-font', isLength, isArbitraryLength] },\r\n            ],\r\n            /**\r\n             * Text Underline Offset\r\n             * @see https://tailwindcss.com/docs/text-underline-offset\r\n             */\r\n            'underline-offset': [{ 'underline-offset': ['auto', isLength, isArbitraryValue] }],\r\n            /**\r\n             * Text Decoration Color\r\n             * @see https://tailwindcss.com/docs/text-decoration-color\r\n             */\r\n            'text-decoration-color': [{ decoration: [colors] }],\r\n            /**\r\n             * Text Transform\r\n             * @see https://tailwindcss.com/docs/text-transform\r\n             */\r\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\r\n            /**\r\n             * Text Overflow\r\n             * @see https://tailwindcss.com/docs/text-overflow\r\n             */\r\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\r\n            /**\r\n             * Text Wrap\r\n             * @see https://tailwindcss.com/docs/text-wrap\r\n             */\r\n            'text-wrap': [{ text: ['wrap', 'nowrap', 'balance', 'pretty'] }],\r\n            /**\r\n             * Text Indent\r\n             * @see https://tailwindcss.com/docs/text-indent\r\n             */\r\n            indent: [{ indent: getSpacingWithArbitrary() }],\r\n            /**\r\n             * Vertical Alignment\r\n             * @see https://tailwindcss.com/docs/vertical-align\r\n             */\r\n            'vertical-align': [\r\n                {\r\n                    align: [\r\n                        'baseline',\r\n                        'top',\r\n                        'middle',\r\n                        'bottom',\r\n                        'text-top',\r\n                        'text-bottom',\r\n                        'sub',\r\n                        'super',\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Whitespace\r\n             * @see https://tailwindcss.com/docs/whitespace\r\n             */\r\n            whitespace: [\r\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\r\n            ],\r\n            /**\r\n             * Word Break\r\n             * @see https://tailwindcss.com/docs/word-break\r\n             */\r\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\r\n            /**\r\n             * Hyphens\r\n             * @see https://tailwindcss.com/docs/hyphens\r\n             */\r\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\r\n            /**\r\n             * Content\r\n             * @see https://tailwindcss.com/docs/content\r\n             */\r\n            content: [{ content: ['none', isArbitraryValue] }],\r\n            // Backgrounds\r\n            /**\r\n             * Background Attachment\r\n             * @see https://tailwindcss.com/docs/background-attachment\r\n             */\r\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\r\n            /**\r\n             * Background Clip\r\n             * @see https://tailwindcss.com/docs/background-clip\r\n             */\r\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\r\n            /**\r\n             * Background Opacity\r\n             * @deprecated since Tailwind CSS v3.0.0\r\n             * @see https://tailwindcss.com/docs/background-opacity\r\n             */\r\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\r\n            /**\r\n             * Background Origin\r\n             * @see https://tailwindcss.com/docs/background-origin\r\n             */\r\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\r\n            /**\r\n             * Background Position\r\n             * @see https://tailwindcss.com/docs/background-position\r\n             */\r\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\r\n            /**\r\n             * Background Repeat\r\n             * @see https://tailwindcss.com/docs/background-repeat\r\n             */\r\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\r\n            /**\r\n             * Background Size\r\n             * @see https://tailwindcss.com/docs/background-size\r\n             */\r\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\r\n            /**\r\n             * Background Image\r\n             * @see https://tailwindcss.com/docs/background-image\r\n             */\r\n            'bg-image': [\r\n                {\r\n                    bg: [\r\n                        'none',\r\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\r\n                        isArbitraryImage,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Background Color\r\n             * @see https://tailwindcss.com/docs/background-color\r\n             */\r\n            'bg-color': [{ bg: [colors] }],\r\n            /**\r\n             * Gradient Color Stops From Position\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-from-pos': [{ from: [gradientColorStopPositions] }],\r\n            /**\r\n             * Gradient Color Stops Via Position\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-via-pos': [{ via: [gradientColorStopPositions] }],\r\n            /**\r\n             * Gradient Color Stops To Position\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-to-pos': [{ to: [gradientColorStopPositions] }],\r\n            /**\r\n             * Gradient Color Stops From\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-from': [{ from: [gradientColorStops] }],\r\n            /**\r\n             * Gradient Color Stops Via\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-via': [{ via: [gradientColorStops] }],\r\n            /**\r\n             * Gradient Color Stops To\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-to': [{ to: [gradientColorStops] }],\r\n            // Borders\r\n            /**\r\n             * Border Radius\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            rounded: [{ rounded: [borderRadius] }],\r\n            /**\r\n             * Border Radius Start\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-s': [{ 'rounded-s': [borderRadius] }],\r\n            /**\r\n             * Border Radius End\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-e': [{ 'rounded-e': [borderRadius] }],\r\n            /**\r\n             * Border Radius Top\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\r\n            /**\r\n             * Border Radius Right\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\r\n            /**\r\n             * Border Radius Bottom\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\r\n            /**\r\n             * Border Radius Left\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\r\n            /**\r\n             * Border Radius Start Start\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-ss': [{ 'rounded-ss': [borderRadius] }],\r\n            /**\r\n             * Border Radius Start End\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-se': [{ 'rounded-se': [borderRadius] }],\r\n            /**\r\n             * Border Radius End End\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-ee': [{ 'rounded-ee': [borderRadius] }],\r\n            /**\r\n             * Border Radius End Start\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-es': [{ 'rounded-es': [borderRadius] }],\r\n            /**\r\n             * Border Radius Top Left\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\r\n            /**\r\n             * Border Radius Top Right\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\r\n            /**\r\n             * Border Radius Bottom Right\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\r\n            /**\r\n             * Border Radius Bottom Left\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\r\n            /**\r\n             * Border Width\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w': [{ border: [borderWidth] }],\r\n            /**\r\n             * Border Width X\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-x': [{ 'border-x': [borderWidth] }],\r\n            /**\r\n             * Border Width Y\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-y': [{ 'border-y': [borderWidth] }],\r\n            /**\r\n             * Border Width Start\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-s': [{ 'border-s': [borderWidth] }],\r\n            /**\r\n             * Border Width End\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-e': [{ 'border-e': [borderWidth] }],\r\n            /**\r\n             * Border Width Top\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-t': [{ 'border-t': [borderWidth] }],\r\n            /**\r\n             * Border Width Right\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-r': [{ 'border-r': [borderWidth] }],\r\n            /**\r\n             * Border Width Bottom\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-b': [{ 'border-b': [borderWidth] }],\r\n            /**\r\n             * Border Width Left\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-l': [{ 'border-l': [borderWidth] }],\r\n            /**\r\n             * Border Opacity\r\n             * @see https://tailwindcss.com/docs/border-opacity\r\n             */\r\n            'border-opacity': [{ 'border-opacity': [opacity] }],\r\n            /**\r\n             * Border Style\r\n             * @see https://tailwindcss.com/docs/border-style\r\n             */\r\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\r\n            /**\r\n             * Divide Width X\r\n             * @see https://tailwindcss.com/docs/divide-width\r\n             */\r\n            'divide-x': [{ 'divide-x': [borderWidth] }],\r\n            /**\r\n             * Divide Width X Reverse\r\n             * @see https://tailwindcss.com/docs/divide-width\r\n             */\r\n            'divide-x-reverse': ['divide-x-reverse'],\r\n            /**\r\n             * Divide Width Y\r\n             * @see https://tailwindcss.com/docs/divide-width\r\n             */\r\n            'divide-y': [{ 'divide-y': [borderWidth] }],\r\n            /**\r\n             * Divide Width Y Reverse\r\n             * @see https://tailwindcss.com/docs/divide-width\r\n             */\r\n            'divide-y-reverse': ['divide-y-reverse'],\r\n            /**\r\n             * Divide Opacity\r\n             * @see https://tailwindcss.com/docs/divide-opacity\r\n             */\r\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\r\n            /**\r\n             * Divide Style\r\n             * @see https://tailwindcss.com/docs/divide-style\r\n             */\r\n            'divide-style': [{ divide: getLineStyles() }],\r\n            /**\r\n             * Border Color\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color': [{ border: [borderColor] }],\r\n            /**\r\n             * Border Color X\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-x': [{ 'border-x': [borderColor] }],\r\n            /**\r\n             * Border Color Y\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-y': [{ 'border-y': [borderColor] }],\r\n            /**\r\n             * Border Color Top\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-t': [{ 'border-t': [borderColor] }],\r\n            /**\r\n             * Border Color Right\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-r': [{ 'border-r': [borderColor] }],\r\n            /**\r\n             * Border Color Bottom\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-b': [{ 'border-b': [borderColor] }],\r\n            /**\r\n             * Border Color Left\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-l': [{ 'border-l': [borderColor] }],\r\n            /**\r\n             * Divide Color\r\n             * @see https://tailwindcss.com/docs/divide-color\r\n             */\r\n            'divide-color': [{ divide: [borderColor] }],\r\n            /**\r\n             * Outline Style\r\n             * @see https://tailwindcss.com/docs/outline-style\r\n             */\r\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\r\n            /**\r\n             * Outline Offset\r\n             * @see https://tailwindcss.com/docs/outline-offset\r\n             */\r\n            'outline-offset': [{ 'outline-offset': [isLength, isArbitraryValue] }],\r\n            /**\r\n             * Outline Width\r\n             * @see https://tailwindcss.com/docs/outline-width\r\n             */\r\n            'outline-w': [{ outline: [isLength, isArbitraryLength] }],\r\n            /**\r\n             * Outline Color\r\n             * @see https://tailwindcss.com/docs/outline-color\r\n             */\r\n            'outline-color': [{ outline: [colors] }],\r\n            /**\r\n             * Ring Width\r\n             * @see https://tailwindcss.com/docs/ring-width\r\n             */\r\n            'ring-w': [{ ring: getLengthWithEmptyAndArbitrary() }],\r\n            /**\r\n             * Ring Width Inset\r\n             * @see https://tailwindcss.com/docs/ring-width\r\n             */\r\n            'ring-w-inset': ['ring-inset'],\r\n            /**\r\n             * Ring Color\r\n             * @see https://tailwindcss.com/docs/ring-color\r\n             */\r\n            'ring-color': [{ ring: [colors] }],\r\n            /**\r\n             * Ring Opacity\r\n             * @see https://tailwindcss.com/docs/ring-opacity\r\n             */\r\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\r\n            /**\r\n             * Ring Offset Width\r\n             * @see https://tailwindcss.com/docs/ring-offset-width\r\n             */\r\n            'ring-offset-w': [{ 'ring-offset': [isLength, isArbitraryLength] }],\r\n            /**\r\n             * Ring Offset Color\r\n             * @see https://tailwindcss.com/docs/ring-offset-color\r\n             */\r\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\r\n            // Effects\r\n            /**\r\n             * Box Shadow\r\n             * @see https://tailwindcss.com/docs/box-shadow\r\n             */\r\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\r\n            /**\r\n             * Box Shadow Color\r\n             * @see https://tailwindcss.com/docs/box-shadow-color\r\n             */\r\n            'shadow-color': [{ shadow: [isAny] }],\r\n            /**\r\n             * Opacity\r\n             * @see https://tailwindcss.com/docs/opacity\r\n             */\r\n            opacity: [{ opacity: [opacity] }],\r\n            /**\r\n             * Mix Blend Mode\r\n             * @see https://tailwindcss.com/docs/mix-blend-mode\r\n             */\r\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\r\n            /**\r\n             * Background Blend Mode\r\n             * @see https://tailwindcss.com/docs/background-blend-mode\r\n             */\r\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\r\n            // Filters\r\n            /**\r\n             * Filter\r\n             * @deprecated since Tailwind CSS v3.0.0\r\n             * @see https://tailwindcss.com/docs/filter\r\n             */\r\n            filter: [{ filter: ['', 'none'] }],\r\n            /**\r\n             * Blur\r\n             * @see https://tailwindcss.com/docs/blur\r\n             */\r\n            blur: [{ blur: [blur] }],\r\n            /**\r\n             * Brightness\r\n             * @see https://tailwindcss.com/docs/brightness\r\n             */\r\n            brightness: [{ brightness: [brightness] }],\r\n            /**\r\n             * Contrast\r\n             * @see https://tailwindcss.com/docs/contrast\r\n             */\r\n            contrast: [{ contrast: [contrast] }],\r\n            /**\r\n             * Drop Shadow\r\n             * @see https://tailwindcss.com/docs/drop-shadow\r\n             */\r\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\r\n            /**\r\n             * Grayscale\r\n             * @see https://tailwindcss.com/docs/grayscale\r\n             */\r\n            grayscale: [{ grayscale: [grayscale] }],\r\n            /**\r\n             * Hue Rotate\r\n             * @see https://tailwindcss.com/docs/hue-rotate\r\n             */\r\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\r\n            /**\r\n             * Invert\r\n             * @see https://tailwindcss.com/docs/invert\r\n             */\r\n            invert: [{ invert: [invert] }],\r\n            /**\r\n             * Saturate\r\n             * @see https://tailwindcss.com/docs/saturate\r\n             */\r\n            saturate: [{ saturate: [saturate] }],\r\n            /**\r\n             * Sepia\r\n             * @see https://tailwindcss.com/docs/sepia\r\n             */\r\n            sepia: [{ sepia: [sepia] }],\r\n            /**\r\n             * Backdrop Filter\r\n             * @deprecated since Tailwind CSS v3.0.0\r\n             * @see https://tailwindcss.com/docs/backdrop-filter\r\n             */\r\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\r\n            /**\r\n             * Backdrop Blur\r\n             * @see https://tailwindcss.com/docs/backdrop-blur\r\n             */\r\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\r\n            /**\r\n             * Backdrop Brightness\r\n             * @see https://tailwindcss.com/docs/backdrop-brightness\r\n             */\r\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\r\n            /**\r\n             * Backdrop Contrast\r\n             * @see https://tailwindcss.com/docs/backdrop-contrast\r\n             */\r\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\r\n            /**\r\n             * Backdrop Grayscale\r\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n             */\r\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\r\n            /**\r\n             * Backdrop Hue Rotate\r\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n             */\r\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\r\n            /**\r\n             * Backdrop Invert\r\n             * @see https://tailwindcss.com/docs/backdrop-invert\r\n             */\r\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\r\n            /**\r\n             * Backdrop Opacity\r\n             * @see https://tailwindcss.com/docs/backdrop-opacity\r\n             */\r\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\r\n            /**\r\n             * Backdrop Saturate\r\n             * @see https://tailwindcss.com/docs/backdrop-saturate\r\n             */\r\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\r\n            /**\r\n             * Backdrop Sepia\r\n             * @see https://tailwindcss.com/docs/backdrop-sepia\r\n             */\r\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\r\n            // Tables\r\n            /**\r\n             * Border Collapse\r\n             * @see https://tailwindcss.com/docs/border-collapse\r\n             */\r\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\r\n            /**\r\n             * Border Spacing\r\n             * @see https://tailwindcss.com/docs/border-spacing\r\n             */\r\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\r\n            /**\r\n             * Border Spacing X\r\n             * @see https://tailwindcss.com/docs/border-spacing\r\n             */\r\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\r\n            /**\r\n             * Border Spacing Y\r\n             * @see https://tailwindcss.com/docs/border-spacing\r\n             */\r\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\r\n            /**\r\n             * Table Layout\r\n             * @see https://tailwindcss.com/docs/table-layout\r\n             */\r\n            'table-layout': [{ table: ['auto', 'fixed'] }],\r\n            /**\r\n             * Caption Side\r\n             * @see https://tailwindcss.com/docs/caption-side\r\n             */\r\n            caption: [{ caption: ['top', 'bottom'] }],\r\n            // Transitions and Animation\r\n            /**\r\n             * Tranisition Property\r\n             * @see https://tailwindcss.com/docs/transition-property\r\n             */\r\n            transition: [\r\n                {\r\n                    transition: [\r\n                        'none',\r\n                        'all',\r\n                        '',\r\n                        'colors',\r\n                        'opacity',\r\n                        'shadow',\r\n                        'transform',\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Transition Duration\r\n             * @see https://tailwindcss.com/docs/transition-duration\r\n             */\r\n            duration: [{ duration: getNumberAndArbitrary() }],\r\n            /**\r\n             * Transition Timing Function\r\n             * @see https://tailwindcss.com/docs/transition-timing-function\r\n             */\r\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\r\n            /**\r\n             * Transition Delay\r\n             * @see https://tailwindcss.com/docs/transition-delay\r\n             */\r\n            delay: [{ delay: getNumberAndArbitrary() }],\r\n            /**\r\n             * Animation\r\n             * @see https://tailwindcss.com/docs/animation\r\n             */\r\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\r\n            // Transforms\r\n            /**\r\n             * Transform\r\n             * @see https://tailwindcss.com/docs/transform\r\n             */\r\n            transform: [{ transform: ['', 'gpu', 'none'] }],\r\n            /**\r\n             * Scale\r\n             * @see https://tailwindcss.com/docs/scale\r\n             */\r\n            scale: [{ scale: [scale] }],\r\n            /**\r\n             * Scale X\r\n             * @see https://tailwindcss.com/docs/scale\r\n             */\r\n            'scale-x': [{ 'scale-x': [scale] }],\r\n            /**\r\n             * Scale Y\r\n             * @see https://tailwindcss.com/docs/scale\r\n             */\r\n            'scale-y': [{ 'scale-y': [scale] }],\r\n            /**\r\n             * Rotate\r\n             * @see https://tailwindcss.com/docs/rotate\r\n             */\r\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\r\n            /**\r\n             * Translate X\r\n             * @see https://tailwindcss.com/docs/translate\r\n             */\r\n            'translate-x': [{ 'translate-x': [translate] }],\r\n            /**\r\n             * Translate Y\r\n             * @see https://tailwindcss.com/docs/translate\r\n             */\r\n            'translate-y': [{ 'translate-y': [translate] }],\r\n            /**\r\n             * Skew X\r\n             * @see https://tailwindcss.com/docs/skew\r\n             */\r\n            'skew-x': [{ 'skew-x': [skew] }],\r\n            /**\r\n             * Skew Y\r\n             * @see https://tailwindcss.com/docs/skew\r\n             */\r\n            'skew-y': [{ 'skew-y': [skew] }],\r\n            /**\r\n             * Transform Origin\r\n             * @see https://tailwindcss.com/docs/transform-origin\r\n             */\r\n            'transform-origin': [\r\n                {\r\n                    origin: [\r\n                        'center',\r\n                        'top',\r\n                        'top-right',\r\n                        'right',\r\n                        'bottom-right',\r\n                        'bottom',\r\n                        'bottom-left',\r\n                        'left',\r\n                        'top-left',\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            // Interactivity\r\n            /**\r\n             * Accent Color\r\n             * @see https://tailwindcss.com/docs/accent-color\r\n             */\r\n            accent: [{ accent: ['auto', colors] }],\r\n            /**\r\n             * Appearance\r\n             * @see https://tailwindcss.com/docs/appearance\r\n             */\r\n            appearance: [{ appearance: ['none', 'auto'] }],\r\n            /**\r\n             * Cursor\r\n             * @see https://tailwindcss.com/docs/cursor\r\n             */\r\n            cursor: [\r\n                {\r\n                    cursor: [\r\n                        'auto',\r\n                        'default',\r\n                        'pointer',\r\n                        'wait',\r\n                        'text',\r\n                        'move',\r\n                        'help',\r\n                        'not-allowed',\r\n                        'none',\r\n                        'context-menu',\r\n                        'progress',\r\n                        'cell',\r\n                        'crosshair',\r\n                        'vertical-text',\r\n                        'alias',\r\n                        'copy',\r\n                        'no-drop',\r\n                        'grab',\r\n                        'grabbing',\r\n                        'all-scroll',\r\n                        'col-resize',\r\n                        'row-resize',\r\n                        'n-resize',\r\n                        'e-resize',\r\n                        's-resize',\r\n                        'w-resize',\r\n                        'ne-resize',\r\n                        'nw-resize',\r\n                        'se-resize',\r\n                        'sw-resize',\r\n                        'ew-resize',\r\n                        'ns-resize',\r\n                        'nesw-resize',\r\n                        'nwse-resize',\r\n                        'zoom-in',\r\n                        'zoom-out',\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Caret Color\r\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n             */\r\n            'caret-color': [{ caret: [colors] }],\r\n            /**\r\n             * Pointer Events\r\n             * @see https://tailwindcss.com/docs/pointer-events\r\n             */\r\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\r\n            /**\r\n             * Resize\r\n             * @see https://tailwindcss.com/docs/resize\r\n             */\r\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\r\n            /**\r\n             * Scroll Behavior\r\n             * @see https://tailwindcss.com/docs/scroll-behavior\r\n             */\r\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\r\n            /**\r\n             * Scroll Margin\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-m': [{ 'scroll-m': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Margin X\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-mx': [{ 'scroll-mx': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Margin Y\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-my': [{ 'scroll-my': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Margin Start\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-ms': [{ 'scroll-ms': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Margin End\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-me': [{ 'scroll-me': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Margin Top\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-mt': [{ 'scroll-mt': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Margin Right\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-mr': [{ 'scroll-mr': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Margin Bottom\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-mb': [{ 'scroll-mb': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Margin Left\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-ml': [{ 'scroll-ml': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-p': [{ 'scroll-p': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding X\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-px': [{ 'scroll-px': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding Y\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-py': [{ 'scroll-py': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding Start\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-ps': [{ 'scroll-ps': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding End\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pe': [{ 'scroll-pe': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding Top\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pt': [{ 'scroll-pt': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding Right\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pr': [{ 'scroll-pr': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding Bottom\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pb': [{ 'scroll-pb': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Padding Left\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pl': [{ 'scroll-pl': getSpacingWithArbitrary() }],\r\n            /**\r\n             * Scroll Snap Align\r\n             * @see https://tailwindcss.com/docs/scroll-snap-align\r\n             */\r\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\r\n            /**\r\n             * Scroll Snap Stop\r\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n             */\r\n            'snap-stop': [{ snap: ['normal', 'always'] }],\r\n            /**\r\n             * Scroll Snap Type\r\n             * @see https://tailwindcss.com/docs/scroll-snap-type\r\n             */\r\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\r\n            /**\r\n             * Scroll Snap Type Strictness\r\n             * @see https://tailwindcss.com/docs/scroll-snap-type\r\n             */\r\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\r\n            /**\r\n             * Touch Action\r\n             * @see https://tailwindcss.com/docs/touch-action\r\n             */\r\n            touch: [\r\n                {\r\n                    touch: ['auto', 'none', 'manipulation'],\r\n                },\r\n            ],\r\n            /**\r\n             * Touch Action X\r\n             * @see https://tailwindcss.com/docs/touch-action\r\n             */\r\n            'touch-x': [\r\n                {\r\n                    'touch-pan': ['x', 'left', 'right'],\r\n                },\r\n            ],\r\n            /**\r\n             * Touch Action Y\r\n             * @see https://tailwindcss.com/docs/touch-action\r\n             */\r\n            'touch-y': [\r\n                {\r\n                    'touch-pan': ['y', 'up', 'down'],\r\n                },\r\n            ],\r\n            /**\r\n             * Touch Action Pinch Zoom\r\n             * @see https://tailwindcss.com/docs/touch-action\r\n             */\r\n            'touch-pz': ['touch-pinch-zoom'],\r\n            /**\r\n             * User Select\r\n             * @see https://tailwindcss.com/docs/user-select\r\n             */\r\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\r\n            /**\r\n             * Will Change\r\n             * @see https://tailwindcss.com/docs/will-change\r\n             */\r\n            'will-change': [\r\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\r\n            ],\r\n            // SVG\r\n            /**\r\n             * Fill\r\n             * @see https://tailwindcss.com/docs/fill\r\n             */\r\n            fill: [{ fill: [colors, 'none'] }],\r\n            /**\r\n             * Stroke Width\r\n             * @see https://tailwindcss.com/docs/stroke-width\r\n             */\r\n            'stroke-w': [{ stroke: [isLength, isArbitraryLength, isArbitraryNumber] }],\r\n            /**\r\n             * Stroke\r\n             * @see https://tailwindcss.com/docs/stroke\r\n             */\r\n            stroke: [{ stroke: [colors, 'none'] }],\r\n            // Accessibility\r\n            /**\r\n             * Screen Readers\r\n             * @see https://tailwindcss.com/docs/screen-readers\r\n             */\r\n            sr: ['sr-only', 'not-sr-only'],\r\n            /**\r\n             * Forced Color Adjust\r\n             * @see https://tailwindcss.com/docs/forced-color-adjust\r\n             */\r\n            'forced-color-adjust': [{ 'forced-color-adjust': ['auto', 'none'] }],\r\n        },\r\n        conflictingClassGroups: {\r\n            overflow: ['overflow-x', 'overflow-y'],\r\n            overscroll: ['overscroll-x', 'overscroll-y'],\r\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\r\n            'inset-x': ['right', 'left'],\r\n            'inset-y': ['top', 'bottom'],\r\n            flex: ['basis', 'grow', 'shrink'],\r\n            gap: ['gap-x', 'gap-y'],\r\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\r\n            px: ['pr', 'pl'],\r\n            py: ['pt', 'pb'],\r\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\r\n            mx: ['mr', 'ml'],\r\n            my: ['mt', 'mb'],\r\n            size: ['w', 'h'],\r\n            'font-size': ['leading'],\r\n            'fvn-normal': [\r\n                'fvn-ordinal',\r\n                'fvn-slashed-zero',\r\n                'fvn-figure',\r\n                'fvn-spacing',\r\n                'fvn-fraction',\r\n            ],\r\n            'fvn-ordinal': ['fvn-normal'],\r\n            'fvn-slashed-zero': ['fvn-normal'],\r\n            'fvn-figure': ['fvn-normal'],\r\n            'fvn-spacing': ['fvn-normal'],\r\n            'fvn-fraction': ['fvn-normal'],\r\n            'line-clamp': ['display', 'overflow'],\r\n            rounded: [\r\n                'rounded-s',\r\n                'rounded-e',\r\n                'rounded-t',\r\n                'rounded-r',\r\n                'rounded-b',\r\n                'rounded-l',\r\n                'rounded-ss',\r\n                'rounded-se',\r\n                'rounded-ee',\r\n                'rounded-es',\r\n                'rounded-tl',\r\n                'rounded-tr',\r\n                'rounded-br',\r\n                'rounded-bl',\r\n            ],\r\n            'rounded-s': ['rounded-ss', 'rounded-es'],\r\n            'rounded-e': ['rounded-se', 'rounded-ee'],\r\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\r\n            'rounded-r': ['rounded-tr', 'rounded-br'],\r\n            'rounded-b': ['rounded-br', 'rounded-bl'],\r\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\r\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\r\n            'border-w': [\r\n                'border-w-s',\r\n                'border-w-e',\r\n                'border-w-t',\r\n                'border-w-r',\r\n                'border-w-b',\r\n                'border-w-l',\r\n            ],\r\n            'border-w-x': ['border-w-r', 'border-w-l'],\r\n            'border-w-y': ['border-w-t', 'border-w-b'],\r\n            'border-color': [\r\n                'border-color-t',\r\n                'border-color-r',\r\n                'border-color-b',\r\n                'border-color-l',\r\n            ],\r\n            'border-color-x': ['border-color-r', 'border-color-l'],\r\n            'border-color-y': ['border-color-t', 'border-color-b'],\r\n            'scroll-m': [\r\n                'scroll-mx',\r\n                'scroll-my',\r\n                'scroll-ms',\r\n                'scroll-me',\r\n                'scroll-mt',\r\n                'scroll-mr',\r\n                'scroll-mb',\r\n                'scroll-ml',\r\n            ],\r\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\r\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\r\n            'scroll-p': [\r\n                'scroll-px',\r\n                'scroll-py',\r\n                'scroll-ps',\r\n                'scroll-pe',\r\n                'scroll-pt',\r\n                'scroll-pr',\r\n                'scroll-pb',\r\n                'scroll-pl',\r\n            ],\r\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\r\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\r\n            touch: ['touch-x', 'touch-y', 'touch-pz'],\r\n            'touch-x': ['touch'],\r\n            'touch-y': ['touch'],\r\n            'touch-pz': ['touch'],\r\n        },\r\n        conflictingClassGroupModifiers: {\r\n            'font-size': ['leading'],\r\n        },\r\n    } as const satisfies Config<DefaultClassGroupIds, DefaultThemeGroupIds>\r\n}\r\n","import { ConfigExtension, GenericConfig } from './types'\r\n\r\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\r\nexport function mergeConfigs<ClassGroupIds extends string, ThemeGroupIds extends string = never>(\r\n    baseConfig: GenericConfig,\r\n    {\r\n        cacheSize,\r\n        prefix,\r\n        separator,\r\n        extend = {},\r\n        override = {},\r\n    }: ConfigExtension<ClassGroupIds, ThemeGroupIds>,\r\n) {\r\n    overrideProperty(baseConfig, 'cacheSize', cacheSize)\r\n    overrideProperty(baseConfig, 'prefix', prefix)\r\n    overrideProperty(baseConfig, 'separator', separator)\r\n\r\n    for (const configKey in override) {\r\n        overrideConfigProperties(\r\n            baseConfig[configKey as keyof typeof override],\r\n            override[configKey as keyof typeof override],\r\n        )\r\n    }\r\n\r\n    for (const key in extend) {\r\n        mergeConfigProperties(\r\n            baseConfig[key as keyof typeof extend],\r\n            extend[key as keyof typeof extend],\r\n        )\r\n    }\r\n\r\n    return baseConfig\r\n}\r\n\r\nfunction overrideProperty<T extends object, K extends keyof T>(\r\n    baseObject: T,\r\n    overrideKey: K,\r\n    overrideValue: T[K] | undefined,\r\n) {\r\n    if (overrideValue !== undefined) {\r\n        baseObject[overrideKey] = overrideValue\r\n    }\r\n}\r\n\r\nfunction overrideConfigProperties(\r\n    baseObject: Partial<Record<string, readonly unknown[]>>,\r\n    overrideObject: Partial<Record<string, readonly unknown[]>> | undefined,\r\n) {\r\n    if (overrideObject) {\r\n        for (const key in overrideObject) {\r\n            overrideProperty(baseObject, key, overrideObject[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction mergeConfigProperties(\r\n    baseObject: Partial<Record<string, readonly unknown[]>>,\r\n    mergeObject: Partial<Record<string, readonly unknown[]>> | undefined,\r\n) {\r\n    if (mergeObject) {\r\n        for (const key in mergeObject) {\r\n            const mergeValue = mergeObject[key]\r\n\r\n            if (mergeValue !== undefined) {\r\n                baseObject[key] = (baseObject[key] || []).concat(mergeValue)\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { createTailwindMerge } from './create-tailwind-merge'\r\nimport { getDefaultConfig } from './default-config'\r\nimport { mergeConfigs } from './merge-configs'\r\nimport { ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds, GenericConfig } from './types'\r\n\r\ntype CreateConfigSubsequent = (config: GenericConfig) => GenericConfig\r\n\r\nexport function extendTailwindMerge<\r\n    AdditionalClassGroupIds extends string = never,\r\n    AdditionalThemeGroupIds extends string = never,\r\n>(\r\n    configExtension:\r\n        | ConfigExtension<\r\n              DefaultClassGroupIds | AdditionalClassGroupIds,\r\n              DefaultThemeGroupIds | AdditionalThemeGroupIds\r\n          >\r\n        | CreateConfigSubsequent,\r\n    ...createConfig: CreateConfigSubsequent[]\r\n) {\r\n    return typeof configExtension === 'function'\r\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\r\n        : createTailwindMerge(\r\n              () => mergeConfigs(getDefaultConfig(), configExtension),\r\n              ...createConfig,\r\n          )\r\n}\r\n","import { createTailwindMerge } from './create-tailwind-merge'\r\nimport { getDefaultConfig } from './default-config'\r\n\r\nexport const twMerge = createTailwindMerge(getDefaultConfig)\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}