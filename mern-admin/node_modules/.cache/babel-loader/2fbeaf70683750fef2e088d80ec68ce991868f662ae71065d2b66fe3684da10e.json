{"ast":null,"code":"let Declaration = require('../declaration');\nlet {\n  getGridGap,\n  inheritGridGap,\n  parseGridAreas,\n  prefixTrackProp,\n  prefixTrackValue,\n  warnGridGap,\n  warnMissedAreas\n} = require('./grid-utils');\nfunction getGridRows(tpl) {\n  return tpl.trim().slice(1, -1).split(/[\"']\\s*[\"']?/g);\n}\nclass GridTemplateAreas extends Declaration {\n  /**\r\n   * Translate grid-template-areas to separate -ms- prefixed properties\r\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes);\n    let hasColumns = false;\n    let hasRows = false;\n    let parent = decl.parent;\n    let gap = getGridGap(decl);\n    gap = inheritGridGap(decl, gap) || gap;\n\n    // remove already prefixed rows\n    // to prevent doubling prefixes\n    parent.walkDecls(/-ms-grid-rows/, i => i.remove());\n\n    // add empty tracks to rows\n    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {\n      if (trackDecl.prop === 'grid-template-rows') {\n        hasRows = true;\n        let {\n          prop,\n          value\n        } = trackDecl;\n        trackDecl.cloneBefore({\n          prop: prefixTrackProp({\n            prefix,\n            prop\n          }),\n          value: prefixTrackValue({\n            gap: gap.row,\n            value\n          })\n        });\n      } else {\n        hasColumns = true;\n      }\n    });\n    let gridRows = getGridRows(decl.value);\n    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        raws: {},\n        value: prefixTrackValue({\n          gap: gap.row,\n          value: `repeat(${gridRows.length}, auto)`\n        })\n      });\n    }\n\n    // warnings\n    warnGridGap({\n      decl,\n      gap,\n      hasColumns,\n      result\n    });\n    let areas = parseGridAreas({\n      gap,\n      rows: gridRows\n    });\n    warnMissedAreas(areas, decl, result);\n    return decl;\n  }\n}\nGridTemplateAreas.names = ['grid-template-areas'];\nmodule.exports = GridTemplateAreas;","map":{"version":3,"names":["Declaration","require","getGridGap","inheritGridGap","parseGridAreas","prefixTrackProp","prefixTrackValue","warnGridGap","warnMissedAreas","getGridRows","tpl","trim","slice","split","GridTemplateAreas","insert","decl","prefix","prefixes","result","hasColumns","hasRows","parent","gap","walkDecls","i","remove","trackDecl","prop","value","cloneBefore","row","gridRows","length","raws","areas","rows","names","module","exports"],"sources":["D:/SLIIT IT/Year 2 semster 2/ITP/Project/Smart TechHub Management System/New-Gen-/mern-admin/node_modules/autoprefixer/lib/hacks/grid-template-areas.js"],"sourcesContent":["let Declaration = require('../declaration')\r\nlet {\r\n  getGridGap,\r\n  inheritGridGap,\r\n  parseGridAreas,\r\n  prefixTrackProp,\r\n  prefixTrackValue,\r\n  warnGridGap,\r\n  warnMissedAreas\r\n} = require('./grid-utils')\r\n\r\nfunction getGridRows(tpl) {\r\n  return tpl\r\n    .trim()\r\n    .slice(1, -1)\r\n    .split(/[\"']\\s*[\"']?/g)\r\n}\r\n\r\nclass GridTemplateAreas extends Declaration {\r\n  /**\r\n   * Translate grid-template-areas to separate -ms- prefixed properties\r\n   */\r\n  insert(decl, prefix, prefixes, result) {\r\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\r\n\r\n    let hasColumns = false\r\n    let hasRows = false\r\n    let parent = decl.parent\r\n    let gap = getGridGap(decl)\r\n    gap = inheritGridGap(decl, gap) || gap\r\n\r\n    // remove already prefixed rows\r\n    // to prevent doubling prefixes\r\n    parent.walkDecls(/-ms-grid-rows/, i => i.remove())\r\n\r\n    // add empty tracks to rows\r\n    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {\r\n      if (trackDecl.prop === 'grid-template-rows') {\r\n        hasRows = true\r\n        let { prop, value } = trackDecl\r\n        trackDecl.cloneBefore({\r\n          prop: prefixTrackProp({ prefix, prop }),\r\n          value: prefixTrackValue({ gap: gap.row, value })\r\n        })\r\n      } else {\r\n        hasColumns = true\r\n      }\r\n    })\r\n\r\n    let gridRows = getGridRows(decl.value)\r\n\r\n    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\r\n      decl.cloneBefore({\r\n        prop: '-ms-grid-rows',\r\n        raws: {},\r\n        value: prefixTrackValue({\r\n          gap: gap.row,\r\n          value: `repeat(${gridRows.length}, auto)`\r\n        })\r\n      })\r\n    }\r\n\r\n    // warnings\r\n    warnGridGap({\r\n      decl,\r\n      gap,\r\n      hasColumns,\r\n      result\r\n    })\r\n\r\n    let areas = parseGridAreas({\r\n      gap,\r\n      rows: gridRows\r\n    })\r\n\r\n    warnMissedAreas(areas, decl, result)\r\n\r\n    return decl\r\n  }\r\n}\r\n\r\nGridTemplateAreas.names = ['grid-template-areas']\r\n\r\nmodule.exports = GridTemplateAreas\r\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAI;EACFC,UAAU;EACVC,cAAc;EACdC,cAAc;EACdC,eAAe;EACfC,gBAAgB;EAChBC,WAAW;EACXC;AACF,CAAC,GAAGP,OAAO,CAAC,cAAc,CAAC;AAE3B,SAASQ,WAAWA,CAACC,GAAG,EAAE;EACxB,OAAOA,GAAG,CACPC,IAAI,CAAC,CAAC,CACNC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACZC,KAAK,CAAC,eAAe,CAAC;AAC3B;AAEA,MAAMC,iBAAiB,SAASd,WAAW,CAAC;EAC1C;AACF;AACA;EACEe,MAAMA,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACrC,IAAIF,MAAM,KAAK,MAAM,EAAE,OAAO,KAAK,CAACF,MAAM,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IAElE,IAAIE,UAAU,GAAG,KAAK;IACtB,IAAIC,OAAO,GAAG,KAAK;IACnB,IAAIC,MAAM,GAAGN,IAAI,CAACM,MAAM;IACxB,IAAIC,GAAG,GAAGrB,UAAU,CAACc,IAAI,CAAC;IAC1BO,GAAG,GAAGpB,cAAc,CAACa,IAAI,EAAEO,GAAG,CAAC,IAAIA,GAAG;;IAEtC;IACA;IACAD,MAAM,CAACE,SAAS,CAAC,eAAe,EAAEC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;;IAElD;IACAJ,MAAM,CAACE,SAAS,CAAC,8BAA8B,EAAEG,SAAS,IAAI;MAC5D,IAAIA,SAAS,CAACC,IAAI,KAAK,oBAAoB,EAAE;QAC3CP,OAAO,GAAG,IAAI;QACd,IAAI;UAAEO,IAAI;UAAEC;QAAM,CAAC,GAAGF,SAAS;QAC/BA,SAAS,CAACG,WAAW,CAAC;UACpBF,IAAI,EAAEvB,eAAe,CAAC;YAAEY,MAAM;YAAEW;UAAK,CAAC,CAAC;UACvCC,KAAK,EAAEvB,gBAAgB,CAAC;YAAEiB,GAAG,EAAEA,GAAG,CAACQ,GAAG;YAAEF;UAAM,CAAC;QACjD,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,UAAU,GAAG,IAAI;MACnB;IACF,CAAC,CAAC;IAEF,IAAIY,QAAQ,GAAGvB,WAAW,CAACO,IAAI,CAACa,KAAK,CAAC;IAEtC,IAAIT,UAAU,IAAI,CAACC,OAAO,IAAIE,GAAG,CAACQ,GAAG,IAAIC,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MAC5DjB,IAAI,CAACc,WAAW,CAAC;QACfF,IAAI,EAAE,eAAe;QACrBM,IAAI,EAAE,CAAC,CAAC;QACRL,KAAK,EAAEvB,gBAAgB,CAAC;UACtBiB,GAAG,EAAEA,GAAG,CAACQ,GAAG;UACZF,KAAK,EAAG,UAASG,QAAQ,CAACC,MAAO;QACnC,CAAC;MACH,CAAC,CAAC;IACJ;;IAEA;IACA1B,WAAW,CAAC;MACVS,IAAI;MACJO,GAAG;MACHH,UAAU;MACVD;IACF,CAAC,CAAC;IAEF,IAAIgB,KAAK,GAAG/B,cAAc,CAAC;MACzBmB,GAAG;MACHa,IAAI,EAAEJ;IACR,CAAC,CAAC;IAEFxB,eAAe,CAAC2B,KAAK,EAAEnB,IAAI,EAAEG,MAAM,CAAC;IAEpC,OAAOH,IAAI;EACb;AACF;AAEAF,iBAAiB,CAACuB,KAAK,GAAG,CAAC,qBAAqB,CAAC;AAEjDC,MAAM,CAACC,OAAO,GAAGzB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}